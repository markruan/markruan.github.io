<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爱·绮梦</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-12-27T03:30:49.537Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mark Ruan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Css 打字机效果，文字循环 逐个出现，逐个删除</title>
    <link href="http://yoursite.com/2020/12/25/study/Css%20%E6%89%93%E5%AD%97%E6%9C%BA%E6%95%88%E6%9E%9C%EF%BC%8C%E6%96%87%E5%AD%97%E5%BE%AA%E7%8E%AF%20%E9%80%90%E4%B8%AA%E5%87%BA%E7%8E%B0%EF%BC%8C%E9%80%90%E4%B8%AA%E5%88%A0%E9%99%A4/"/>
    <id>http://yoursite.com/2020/12/25/study/Css%20%E6%89%93%E5%AD%97%E6%9C%BA%E6%95%88%E6%9E%9C%EF%BC%8C%E6%96%87%E5%AD%97%E5%BE%AA%E7%8E%AF%20%E9%80%90%E4%B8%AA%E5%87%BA%E7%8E%B0%EF%BC%8C%E9%80%90%E4%B8%AA%E5%88%A0%E9%99%A4/</id>
    <published>2020-12-25T00:08:33.023Z</published>
    <updated>2020-12-27T03:30:49.537Z</updated>
    
    <content type="html"><![CDATA[<p>看见一个不错的特效：</p><p><strong>效果如下：</strong><br><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200521164422488.gif" alt="在这里插入图片描述"><br>html 文本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css 样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">// <span class="selector-tag">keyframes</span> 可根据展示的文本长度，自行添加，我的格式为： <span class="keyword">@keyframes</span>  ‘type’+<span class="string">&#x27;文本长度&#x27;</span></span><br><span class="line">@keyframes typing10 &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10ch</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> typing4 &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">4ch</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> typing6 &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">6ch</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> caret &#123; 50% &#123; <span class="attribute">border-color</span>: transparent; &#125; &#125;</span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">animation</span>: typing <span class="number">6s</span> <span class="built_in">steps</span>(<span class="number">15</span>) infinite,caret <span class="number">1s</span> <span class="built_in">steps</span>(<span class="number">1</span>) infinite;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>:hidden;</span><br><span class="line">  <span class="attribute">border-right</span>: .<span class="number">05em</span> solid;</span><br><span class="line">  font-family: Consolas, Monaco, monospace;//注意这儿，要设置字体为等宽字体,ch才会充分发挥效果</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="string">&#x27;TypeScript&#x27;</span>,<span class="string">&#x27;JavaScript&#x27;</span>,<span class="string">&#x27;小程序&#x27;</span>,<span class="string">&#x27;less&#x27;</span>,<span class="string">&#x27;sass&#x27;</span> ];<span class="comment">//显示的文本</span></span><br><span class="line"><span class="keyword">const</span> dom = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;box&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> j = <span class="number">0</span>; <span class="comment">//从数组第一个开始展示</span></span><br><span class="line"><span class="comment">// 递归函数</span></span><br><span class="line"><span class="keyword">const</span> func =<span class="function">(<span class="params">j</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(j &lt; arr.length)&#123; <span class="comment">// 当达到数组长度时，就从头开始继续</span></span><br><span class="line">    <span class="keyword">const</span> item = arr[j]</span><br><span class="line">    <span class="keyword">const</span> itemLen = item === <span class="string">&#x27;小程序&#x27;</span> ? <span class="number">6</span> : item.length; <span class="comment">// 汉字是占两个ch</span></span><br><span class="line">    dom.innerHTML = item; <span class="comment">// 显示文字</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = itemLen; i &lt; len; i++) &#123; <span class="comment">// 添加文本效果</span></span><br><span class="line">      <span class="keyword">var</span> textLen = dom.textContent.length, s = dom.style;</span><br><span class="line">      s.animationTimingFunction = <span class="string">&quot;steps(&quot;</span> + textLen + <span class="string">&quot;),steps(1)&quot;</span>;; <span class="comment">//动态设置steps</span></span><br><span class="line">      s.animationName = <span class="string">`typing<span class="subst">$&#123;itemLen&#125;</span>`</span>; <span class="comment">//文本长度不同，展示的宽度就不同，所以需要动态设置</span></span><br><span class="line">      s.animationDuration = <span class="string">`<span class="subst">$&#123;itemLen<span class="regexp">/2&#125;s,0.5s`; /</span><span class="regexp">/这儿设置速度</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">    &#125;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">    setTimeout(() =&gt; &#123;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">      func(j + 1)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">    &#125;,itemLen*500) /</span><span class="regexp">/这儿和上面的animationDuration速度一致，只不过这儿是毫秒，所以要乘以1000</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">    </span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">  &#125;else&#123;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">    func(0); /</span><span class="regexp">/就从头开始继续</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">  &#125;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="regexp">func(j); </span></span></span></span><br></pre></td></tr></table></figure><p>参考文章： <a class="link"   href="https://www.w3cplus.com/css3/css-secrets/typing-animation.html" >https://www.w3cplus.com/css3/css-secrets/typing-animation.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;看见一个不错的特效：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;效果如下：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200521164422488.gi</summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
    <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
    <category term="特效" scheme="http://yoursite.com/tags/%E7%89%B9%E6%95%88/"/>
    
    <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>MAC升级Nodejs和Npm到最新版</title>
    <link href="http://yoursite.com/2020/12/24/study/MAC%E5%8D%87%E7%BA%A7Nodejs%E5%92%8CNpm%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88/"/>
    <id>http://yoursite.com/2020/12/24/study/MAC%E5%8D%87%E7%BA%A7Nodejs%E5%92%8CNpm%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88/</id>
    <published>2020-12-24T15:05:39.027Z</published>
    <updated>2020-12-24T16:01:00.455Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用HEXO  更新内容，发现node 版本太老了，所以就升级了下版本</p><p>第一步，先查看本机node.js版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>第二步，清除node.js的cache：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm cache clean -f</span><br></pre></td></tr></table></figure><p>第三步，安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 “n”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g n</span><br></pre></td></tr></table></figure><p>第四步，安装最新版本的node.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n stable</span><br></pre></td></tr></table></figure><p>第五步，再次查看本机的node.js版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>第六步，更新npm到最新版：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install npm@latest -g</span><br></pre></td></tr></table></figure><p>第七步，验证</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天使用HEXO  更新内容，发现node 版本太老了，所以就升级了下版本&lt;/p&gt;
&lt;p&gt;第一步，先查看本机node.js版本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
  </entry>
  
  <entry>
    <title>利用css媒体查询media</title>
    <link href="http://yoursite.com/2020/12/24/study/%E5%88%A9%E7%94%A8css%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2media/"/>
    <id>http://yoursite.com/2020/12/24/study/%E5%88%A9%E7%94%A8css%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2media/</id>
    <published>2020-12-24T13:06:34.478Z</published>
    <updated>2020-12-24T16:00:14.222Z</updated>
    
    <content type="html"><![CDATA[<p>为了实现手机与电脑网页宽度自适应，在css3中新增了 media query属性用于增强media type属性。因此当css3问世后，使media type可以进行条件判断输出对应的css。</p><p>核心代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.wap</span>&#123;<span class="attribute">display</span>: none;&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span><span class="number">768px</span>)&#123;</span><br><span class="line">   <span class="selector-class">.wrap</span>&#123;<span class="attribute">display</span>: none;&#125;</span><br><span class="line">   <span class="selector-class">.wap</span>&#123;<span class="attribute">display</span>: block;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br></pre></td></tr></table></figure><p>wap是手机端的的css最外的盒子；wrap是pc端对外的盒子；@media screen and (max-width:768px)的意思是当屏幕的分辨率低于768px的时候css生效，这个媒体外部的全部css不生效；</p><p>因此，当设备分辨率为手机，媒体里面的手机端的css自动生效，当分辨率大于768px时，css就自动渲染外部的css。</p><p><strong>@media具体语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">769px</span>) &#123;</span><br><span class="line">    <span class="comment">/* CSS样式定义部分 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-device-width:</span> <span class="number">481px</span>) <span class="keyword">and</span> (<span class="attribute">max-device-width:</span> <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="comment">/* CSS样式定义部分 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-device-width:</span> <span class="number">480px</span>) &#123;</span><br><span class="line">    <span class="comment">/* CSS样式定义部分 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>一、判断不同的显示设备，跳转到不同的网页。</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;alternate&quot; media=&quot;only screen and (max-width: 640px)&quot; href=&quot;https://x.iqimeng.com/&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>二、判断媒体类型，引用不同的样式表</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=”stylesheet” media=”screen and (判断条件)” herf=”需要调用的样式表文件” /&gt;</span><br></pre></td></tr></table></figure><p>通过设定屏幕的判断条件，调用对应的css文件。该实例多用于整页面不同风格的css调用与选取，使用该方法可能需要为一个页面制作多份个css文件。</p><p><strong>三、判断媒体横向与纵向，引用不同的样式</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">orientation:</span>portrait)&#123;横向样式&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">orientation:</span>landscape)&#123;纵向样式&#125;</span><br></pre></td></tr></table></figure><p><strong>四、判断媒体类型，执行不同的css样式属性</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span><span class="number">240px</span>)&#123;</span><br><span class="line"><span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">200px</span>;&#125;</span><br><span class="line"><span class="selector-class">.title</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bootstrap响应式设计中几个临界点的分辨率，运用这几个分辨率，我们就可以轻松的用CSS3来写自己的自适应代码了</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@media (min-width: 768px)&#123; //&gt;=768的设备 &#125;</span><br><span class="line">@media (min-width: 992px)&#123; //&gt;=992的设备 &#125;</span><br><span class="line">@media (min-width: 1200px)&#123;//&gt;=1200的设备&#125;</span><br></pre></td></tr></table></figure><p>注意下顺序，如果你把@media (min-width: 768px)写在了下面那么就会出错，因为如果是1440,由于1440&gt;768那么你的1200就会失效。</p><p>所以我们用min-width时，小的放上面大的在下面，同理如果是用max-width那么就是大的在上面，小的在下面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@media (max-width: 1199px)&#123;//&lt;=1199的设备&#125;</span><br><span class="line">@media (max-width: 991px)&#123; //&lt;=991的设备 &#125;</span><br><span class="line">@media (max-width: 767px)&#123; //&lt;=768的设备 &#125;</span><br></pre></td></tr></table></figure><p>重要的内容重复3次：顺序是min-width从小到大，max-width从大到小。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为了实现手机与电脑网页宽度自适应，在css3中新增了 media query属性用于增强media type属性。因此当css3问世后，使media type可以进行条件判断输出对应的css。&lt;/p&gt;
&lt;p&gt;核心代码：&lt;/p&gt;
&lt;figure class=&quot;highligh</summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
    <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
    <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>github 使用记录</title>
    <link href="http://yoursite.com/2020/12/19/study/github%20%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/12/19/study/github%20%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2020-12-19T13:11:29.812Z</published>
    <updated>2020-12-24T16:00:29.027Z</updated>
    
    <content type="html"><![CDATA[<p>使用github不是很久，把一些遇到的问题记录下来。</p><p><strong>很简单的几个命令；</strong><br>1：找到你要上传的文件夹，右键点击-&gt;选择git-bash-here;<br>2：在弹出的命令窗口输入以下命令<br><strong>git add .</strong><br>我们知道git add命令是用来添加文件到缓存区的，这里使用 . 表示所有。所有这样就把所有的内容添加进去了<br><strong>git commit -m “注释”</strong><br>这表示提交到分支<br><strong>git push origin master</strong><br>把当前分支推送到远程仓库<br>这样就可以了。<br>下面再附上git的相关命令：<br><strong>Git基本常用命令如下：</strong></p><p>mkdir： XX (创建一个空目录 XX指目录名)</p><p>pwd： 显示当前目录的路径。</p><p>git init 把当前的目录变成可以管理的git仓库，生成隐藏.git文件。</p><p>git add XX 把xx文件添加到暂存区去。</p><p>git commit –m “XX” 提交文件 –m 后面的是注释。</p><p>git status 查看仓库状态</p><p>git diff XX 查看XX文件修改了那些内容</p><p>git log 查看历史记录</p><p>git reset –hard HEAD^ 或者 git reset –hard HEAD~ 回退到上一个版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">                    (如果想回退到100个版本，使用git reset –hard HEAD~100 )</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>cat XX 查看XX文件内容</p><p>git reflog 查看历史记录的版本号id</p><p>git checkout — XX 把XX文件在工作区的修改全部撤销。</p><p>git rm XX 删除XX文件</p><p>git remote add origin <a class="link"   href="https://github.com/zongyunqingfeng/testgit" >https://github.com/zongyunqingfeng/testgit<i class="fas fa-external-link-alt"></i></a> 关联一个远程库</p><p>git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库</p><p>git clone <a class="link"   href="https://github.com/zongyunqingfeng/testgit" >https://github.com/zongyunqingfeng/testgit<i class="fas fa-external-link-alt"></i></a> 从远程库中克隆</p><p>git checkout –b dev 创建dev分支 并切换到dev分支上</p><p>git branch 查看当前所有的分支</p><p>git checkout master 切换回master分支</p><p>git merge dev 在当前的分支上合并dev分支</p><p>git branch –d dev 删除dev分支</p><p>git branch name 创建分支</p><p>git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作</p><p>git stash list 查看所有被隐藏的文件列表</p><p>git stash apply 恢复被隐藏的文件，但是内容不删除</p><p>git stash drop 删除文件</p><p>git stash pop 恢复文件的同时 也删除文件</p><p>git remote 查看远程库的信息</p><p>git remote –v 查看远程库的详细信息</p><p>git push origin master Git会把master分支推送到远程库对应的远程分支上</p><p>在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决：</p><p>首先进入你的master文件夹下, Git Bash Here ,打开命令窗口，以此输入以下命令：</p><ol><li>$ git –help 帮助命令</li><li>$ git pull origin master 将远程仓库里面的项目拉下来</li><li>$ dir 查看有哪些文件夹</li><li>$ git rm -r –cached target 删除target文件</li><li>$ git commit -m ‘删除了target’ 提交,添加操作说明</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用github不是很久，把一些遇到的问题记录下来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;很简单的几个命令；&lt;/strong&gt;&lt;br&gt;1：找到你要上传的文件夹，右键点击-&amp;gt;选择git-bash-here;&lt;br&gt;2：在弹出的命令窗口输入以下命令&lt;br&gt;&lt;strong&gt;git</summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
    <category term="采坑" scheme="http://yoursite.com/tags/%E9%87%87%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>值得纪念的一条</title>
    <link href="http://yoursite.com/2020/12/19/%E5%80%BC%E5%BE%97%E7%BA%AA%E5%BF%B5%E7%9A%84%E4%B8%80%E5%A4%A9/"/>
    <id>http://yoursite.com/2020/12/19/%E5%80%BC%E5%BE%97%E7%BA%AA%E5%BF%B5%E7%9A%84%E4%B8%80%E5%A4%A9/</id>
    <published>2020-12-19T12:03:49.386Z</published>
    <updated>2020-12-24T16:03:27.326Z</updated>
    
    <content type="html"><![CDATA[<p>原来信心满满，憧憬各种各样的结果，也做好的面对挑战和无尽的压力，但事实却事与愿违，向前一步可能会很难，但也不想这样就看到尽头，命运真的会给我们开玩笑，好吧，既然这样那我就在这条路上一往无前</p><p>加油！！</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/ice-from-diamond-beach-iceland-picjumbo-com.jpg" alt="ice-from-diamond-beach-iceland-picjumbo-com"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;原来信心满满，憧憬各种各样的结果，也做好的面对挑战和无尽的压力，但事实却事与愿违，向前一步可能会很难，但也不想这样就看到尽头，命运真的会给我们开玩笑，好吧，既然这样那我就在这条路上一往无前&lt;/p&gt;
&lt;p&gt;加油！！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.g</summary>
      
    
    
    
    
    <category term="心情" scheme="http://yoursite.com/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>typora使用</title>
    <link href="http://yoursite.com/2020/12/19/study/typora%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/12/19/study/typora%E4%BD%BF%E7%94%A8/</id>
    <published>2020-12-19T12:03:49.381Z</published>
    <updated>2020-12-24T16:01:30.377Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Typora介绍"><a href="#Typora介绍" class="headerlink" title="Typora介绍"></a>Typora介绍</h2><p>Typora是一款免费的轻量级Markdown编辑器，它没有<a class="link"   href="https://link.zhihu.com/?target=http://25.io/mou/" >Mou<i class="fas fa-external-link-alt"></i></a>，<a class="link"   href="https://link.zhihu.com/?target=http://pad.haroopress.com/" >Haroopad<i class="fas fa-external-link-alt"></i></a>等Markdown编辑器那么大名鼎鼎，但算是较为小众的一款产品。</p><p>Typora作为一款离线Markdown无疑是非常棒的， 如果作为笔记工具的话，推荐你使用 cmd Markdown，因人而异。</p><p>下载地址：**<a class="link"   href="https://link.zhihu.com/?target=https://typora.io/" >Typora<i class="fas fa-external-link-alt"></i></a>**</p><p>@<a class="link"   href="https://link.zhihu.com/?target=https://my.openwrite.cn/user/article/%E7%9B%AE%E5%BD%95%EF%BC%88Contens%EF%BC%89" >TOC<i class="fas fa-external-link-alt"></i></a></p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>#一阶标题 （快捷键Ctrl+1）</p><p>##二阶标题 （快捷键Ctrl+2）</p><p>###三阶标题 （快捷键Ctrl+3）</p><p>####四阶标题 （快捷键Ctrl+4）</p><p>#####五阶标题 （快捷键Ctrl+5）</p><p>######六阶标题 （快捷键Ctrl+6）</p><h2 id="如何生成目录"><a href="#如何生成目录" class="headerlink" title="如何生成目录"></a>如何生成目录</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@[TOC]目录</span><br><span class="line"></span><br><span class="line">在文章开始地方输入[toc]，即可在对应位置插入目录</span><br><span class="line">@[TOC]目录</span><br><span class="line"></span><br><span class="line">以下不用写，直接写@[TOC](目录)即可自动获到目录中</span><br><span class="line">#一阶标题 （快捷键Ctrl+1）</span><br><span class="line">##二阶标题 （快捷键Ctrl+2）</span><br><span class="line">###三阶标题 （快捷键Ctrl+3）</span><br><span class="line">####四阶标题 （快捷键Ctrl+4）</span><br><span class="line">#####五阶标题 （快捷键Ctrl+5）</span><br><span class="line">######六阶标题 （快捷键Ctrl+6）</span><br><span class="line">注：凡是文章标题带有#（1-n个）的都会被捕获到目录中。</span><br></pre></td></tr></table></figure><h2 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h2><p>这是要居中的文本内容\</p><p><strong>注</strong>：Typora目前并不会直接预览居中效果——相应的效果只有输出文本的时候才会显现。</p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线使用格式 下划线的内容&lt;\u&gt; 或者快捷键Ctrl+U</p><p>下划线在Typora显示形式是 这就是我亲测的下划线</p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>删除线使用格式：~~ 删除线的内容</p><h2 id="字体加粗"><a href="#字体加粗" class="headerlink" title="字体加粗"></a>字体加粗</h2><p>前面某个字段使用两个<em>，\</em>加粗字体* 或者快捷键Ctrl+B</p><h2 id="字体倾斜"><a href="#字体倾斜" class="headerlink" title="字体倾斜"></a>字体倾斜</h2><p>使用一个”星“，<em>字体倾斜了</em> 或者快捷键Ctrl+I</p><h2 id="图片的插入"><a href="#图片的插入" class="headerlink" title="图片的插入"></a>图片的插入</h2><p>直接拖你想要图片进来即可</p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><ul><li>使用快捷键Ctrl+K</li><li>使用2个反斜杠””，<br>[百度][<a class="link"   href="https://link.zhihu.com/?target=https://www.baidu.com/" >https://www.baidu.com/<i class="fas fa-external-link-alt"></i></a>]</li></ul><p><a class="link"   href="https://link.zhihu.com/?target=https://www.baidu.com/" >百度一下<i class="fas fa-external-link-alt"></i></a></p><p><strong>注</strong>：按住Ctrl键+点击上面链接就可以直接访问该链接</p><h2 id="代码区域"><a href="#代码区域" class="headerlink" title="代码区域"></a>代码区域</h2><p>三个反引号个（```）+编程语言即可</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//设置线程名字</span><br><span class="line">thread.setName(&quot;线程1&quot;); </span><br><span class="line">thread1.setName(&quot;线程2&quot;);</span><br></pre></td></tr></table></figure><h2 id="表格的使用"><a href="#表格的使用" class="headerlink" title="表格的使用"></a>表格的使用</h2><p>第一种：快捷键<strong>Ctrl+T</strong></p><p>第二种：|ID|name|age|回车即可</p><p>学号姓名年龄20200506MarkerHunJava35</p><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><p>- [ ] 文字 （<strong>注</strong>：注意用空格隔开）</p><ul><li><input checked="" disabled="" type="checkbox"> Java</li><li><input checked="" disabled="" type="checkbox"> 大数据</li><li><input disabled="" type="checkbox"> 人工智能</li><li><input disabled="" type="checkbox"> 机器学习</li></ul><h2 id="有序无序列表"><a href="#有序无序列表" class="headerlink" title="有序无序列表"></a>有序无序列表</h2><p><strong>创建无序列</strong> :+ 、- 、* （后面加空格）</p><p><strong>多行无序列表</strong>:</p><ul><li><p>Java</p></li><li><ul><li><p>容器</p></li><li><ul><li>HashMap</li></ul></li></ul></li></ul><p><strong>有序列表</strong>:(1.)空格</p><ol><li>Java</li><li>Biodata</li></ol><p><strong>多行有序列表：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. Java</span><br><span class="line">2. Biodata</span><br><span class="line">    1. Java</span><br><span class="line">    2. Biodata</span><br></pre></td></tr></table></figure><h2 id="水平分割线"><a href="#水平分割线" class="headerlink" title="水平分割线"></a>水平分割线</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***或者- - -</span><br></pre></td></tr></table></figure><h2 id="引用的使用格式"><a href="#引用的使用格式" class="headerlink" title="引用的使用格式"></a>引用的使用格式</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;+空格</span><br></pre></td></tr></table></figure><h2 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:单词</span><br></pre></td></tr></table></figure><h2 id="数学表达式"><a href="#数学表达式" class="headerlink" title="数学表达式"></a>数学表达式</h2><p>Typora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染，数学公式分为两种参考**<a class="link"   href="https://link.zhihu.com/?target=https://mathpix.com/" >Mathpix Snip<i class="fas fa-external-link-alt"></i></a>**</p><ul><li>行内公式 <code>$ ... $</code></li><li>行间公式 <code>$$ ... $$</code>,（或者$$+回车）<br><strong>注</strong>：行间公式形式是将数学式插在文本行之间（多行公式、公式组和微积分方程等复杂的数学式都是采用行间） <strong>注</strong>：行内公式形式是将数学式插入文本行之内（适合编写简 短的数学式） <strong>如</strong>：将公式插入到本行内，符号：<code>$公式内容$</code>，$xyz$或“$$”+回车即可</li></ul><p>#### 1、上标、下标、求和、括号、分式、根号</p><p><strong>语法</strong>：行内公式输入在两个<code>$$</code>之间，行外公公式<code>$$内容公式$$</code>或<code>$$</code>+回车即可输入。</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-fc1eb7e3e05ef1b0bbb7a47975db5de2_720w-20201107100422676.jpg" alt="img"></p><h3 id="2、基本运算符"><a href="#2、基本运算符" class="headerlink" title="2、基本运算符"></a>2、基本运算符</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-c3703593a2e990069e3834247b437206_720w-20201107100449798.jpg" alt="img"></p><h3 id="3、三角函数、指数、对数"><a href="#3、三角函数、指数、对数" class="headerlink" title="3、三角函数、指数、对数"></a>3、三角函数、指数、对数</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f525471ca6da7be4fe0cfb25717b7411_720w-20201107100303444.jpg" alt="img"></p><h3 id="4、高等数学相关运算符"><a href="#4、高等数学相关运算符" class="headerlink" title="4、高等数学相关运算符"></a>4、高等数学相关运算符</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-a3e3be0b70dc25c0d09a22544136174f_720w-20201107100312691.jpg" alt="img"></p><h3 id="6、希腊字母"><a href="#6、希腊字母" class="headerlink" title="6、希腊字母"></a>6、希腊字母</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f8cf4f5d21042f66e5ecc0c4f1c415cb_720w-20201107100321024.jpg" alt="img"></p><h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">```mermaid</span><br><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line">        section 现有任务</span><br><span class="line">        已完成               :done,    des1, 2019-09-02,220-01-20</span><br><span class="line">        进行中               :active,  des2, 2020-05-06, 3d</span><br><span class="line">        计划一               :         des3, after des2, 5d</span><br><span class="line">        计划二               :         des4, after des3, 5d</span><br><span class="line">　```</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg" alt="img"></p><h3 id="Mermaid流程图"><a href="#Mermaid流程图" class="headerlink" title="Mermaid流程图"></a>Mermaid流程图</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```mermaid</span><br><span class="line">graph LR</span><br><span class="line">graph LR</span><br><span class="line">A[老鹰] -- 吃 --&gt; B((小鸡))</span><br><span class="line">A -- 吃 --&gt; C(蛇)</span><br><span class="line">B -- 吃--&gt; D&#123;虫&#125;</span><br><span class="line">C --&gt; D</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-10220c614d3474fbea35b656187271e9_720w-20201107100342942.jpg" alt="img"></p><p><a class="link"   href="https://link.zhihu.com/?target=https://mermaid-js.github.io/mermaid/%23/" >更多参考文档<i class="fas fa-external-link-alt"></i></a></p><h3 id="Flowchart流程图"><a href="#Flowchart流程图" class="headerlink" title="Flowchart流程图"></a>Flowchart流程图</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Typora介绍&quot;&gt;&lt;a href=&quot;#Typora介绍&quot; class=&quot;headerlink&quot; title=&quot;Typora介绍&quot;&gt;&lt;/a&gt;Typora介绍&lt;/h2&gt;&lt;p&gt;Typora是一款免费的轻量级Markdown编辑器，它没有&lt;a class=&quot;link&quot; </summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
  </entry>
  
  <entry>
    <title>particles.js</title>
    <link href="http://yoursite.com/2020/12/19/study/particles.js/"/>
    <id>http://yoursite.com/2020/12/19/study/particles.js/</id>
    <published>2020-12-19T12:03:49.380Z</published>
    <updated>2020-12-24T16:01:15.549Z</updated>
    
    <content type="html"><![CDATA[<h2 id="particles-js学习"><a href="#particles-js学习" class="headerlink" title="particles.js学习"></a>particles.js学习</h2><p>  今天突发奇想优化下主题，想起了之前看过炫酷的星云效果，就搜索了下… </p><p>效果见主页</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>To install particles.js you can <a class="link"   href="https://github.com/marcbruederlin/particles.js/archive/master.zip" >download<i class="fas fa-external-link-alt"></i></a> the latest version, install it via npm:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install particlesjs —-save</span><br></pre></td></tr></table></figure><p>or use the CDN:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;particlesjs&#x2F;2.2.2&#x2F;particles.min.js</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  …   </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=</span></span><br><span class="line"><span class="tag">&quot;<span class="attr">path</span>/<span class="attr">to</span>/<span class="attr">particles.min.js</span>&quot;</span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Add a canvas element to your markup (it should be the last element):</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  …</span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">&quot;<span class="attr">background</span>&quot;</span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=</span></span><br><span class="line"><span class="tag">&quot;<span class="attr">path</span>/<span class="attr">to</span>/<span class="attr">particles.min.js</span>&quot;</span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>And Initialize the plugin on DOM ready:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Particles. init</span><br><span class="line">        (&#123;</span><br><span class="line">            selector: </span><br><span class="line">        <span class="string">&#x27;.background&#x27;</span></span><br><span class="line">          &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><table><thead><tr><th>Option</th><th>Type</th><th align="center">Default</th><th>Description</th></tr></thead><tbody><tr><td>selector</td><td>string</td><td align="center">-</td><td><em>Required:</em> CSS selector of your canvas element</td></tr><tr><td>maxParticles</td><td>integer</td><td align="center">100</td><td><em>Optional:</em> Maximum amount of particles</td></tr><tr><td>sizeVariations</td><td>integer</td><td align="center">3</td><td><em>Optional:</em> Amount of size variations</td></tr><tr><td>speed</td><td>integer</td><td align="center">0.5</td><td><em>Optional:</em> Movement speed of the particles</td></tr><tr><td>color</td><td>string or string[]</td><td align="center">#000000</td><td><em>Optional:</em> Color(s) of the particles and connecting lines</td></tr><tr><td>minDistance</td><td>integer</td><td align="center">120</td><td><em>Optional:</em> Distance in px for connecting lines</td></tr><tr><td>connectParticles</td><td>boolean</td><td align="center">false</td><td><em>Optional:</em> true/false if connecting lines should be drawn</td></tr><tr><td>responsive</td><td>array</td><td align="center">null</td><td><em>Optional:</em> Array of objects containing breakpoints and options</td></tr></tbody></table><h3 id="Responsive-option"><a href="#Responsive-option" class="headerlink" title="Responsive option"></a>Responsive option</h3><p>With the responsive option, you can add or override options for different screen sizes:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Particles. init (&#123; </span><br><span class="line">  <span class="comment">// normal options</span></span><br><span class="line">  selector: &#x27;.background&#x27;,</span><br><span class="line">  maxParticles:450,</span><br><span class="line">  </span><br><span class="line"><span class="comment">// options for breakpoints</span></span><br><span class="line">  responsive: [</span><br><span class="line">    &#123;</span><br><span class="line">      breakpoint: 768,</span><br><span class="line">      options: &#123;</span><br><span class="line">        maxParticles: 200,</span><br><span class="line">        color: &#x27;#48F2E3&#x27;,</span><br><span class="line">        connectParticles:false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      breakpoint:425,</span><br><span class="line">      options: &#123;</span><br><span class="line">        maxParticles: 100,</span><br><span class="line">        connectParticles: true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      breakpoint: 320,</span><br><span class="line">      options: &#123;</span><br><span class="line">        maxParticles:  0 // disables particles.js</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>pauseAnimation</td><td>Pauses/stops the particle animation</td></tr><tr><td>resumeAnimation</td><td>Continues the particle animation</td></tr></tbody></table><h3 id="Use-the-public-methods"><a href="#Use-the-public-methods" class="headerlink" title="Use the public methods"></a>Use the public methods</h3> <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var particles = Particles.init(&#123;</span><br><span class="line"><span class="comment">// options</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// E.g. gets called on a button click</span></span><br><span class="line">function pause () &#123;</span><br><span class="line">  particles. pauseAnimation ();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// E.g. gets called on a button click</span></span><br><span class="line">function resume () &#123;</span><br><span class="line">  particles. resumeAnimation ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;particles-js学习&quot;&gt;&lt;a href=&quot;#particles-js学习&quot; class=&quot;headerlink&quot; title=&quot;particles.js学习&quot;&gt;&lt;/a&gt;particles.js学习&lt;/h2&gt;&lt;p&gt;  今天突发奇想优化下主题，想起了之前看过炫</summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
  </entry>
  
  <entry>
    <title>X3 photo gallery 授权破解</title>
    <link href="http://yoursite.com/2020/12/19/study/X3%20photo%20gallery%20%E6%8E%88%E6%9D%83%E7%A0%B4%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/12/19/study/X3%20photo%20gallery%20%E6%8E%88%E6%9D%83%E7%A0%B4%E8%A7%A3/</id>
    <published>2020-12-19T12:03:49.379Z</published>
    <updated>2020-12-24T16:01:48.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="X3-photo-gallery-另类破解"><a href="#X3-photo-gallery-另类破解" class="headerlink" title="X3 photo gallery 另类破解"></a>X3 photo gallery 另类破解</h2><p>这个软件用了很久，之前也用过破解版，但升级后接失效了，今天闲来无事，试着破解，搜索关键字，查看源码，自以为很简单，直接注销代码，看了下，底部链接是消失了，但是后来，点击上面的目录时才发现，会跳出授权经过….</p><p>后来又试了另外的方法，终于成功了。就是把授权的文字直接把字体颜色改成背景色。具体方法如下：</p><p>1.zai 源文件 templates 下76文件夹（因为通过搜索发现授权这行代码的class”x3-footer-link”在这个文件）</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/image-20201129184535600.png" alt="image-20201129184535600"></p><p>2.随便找一行代码，我是在131行 加入如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">&quot;&lt;style&gt;.footer .x3-footer-link,.footer .x3-footer-link a &#123;color:#e2d6d2;pointer-events: none;&#125; &lt;/style&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p> 完成。</p><p>方法很笨，但效果达到 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;X3-photo-gallery-另类破解&quot;&gt;&lt;a href=&quot;#X3-photo-gallery-另类破解&quot; class=&quot;headerlink&quot; title=&quot;X3 photo gallery 另类破解&quot;&gt;&lt;/a&gt;X3 photo gallery 另类破解&lt;/</summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
    <category term="采坑" scheme="http://yoursite.com/tags/%E9%87%87%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 中 Markdown 特殊字符的处理方法</title>
    <link href="http://yoursite.com/2020/12/19/study/Hexo%20%E4%B8%AD%20Markdown%20%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/12/19/study/Hexo%20%E4%B8%AD%20Markdown%20%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</id>
    <published>2020-12-19T12:03:49.377Z</published>
    <updated>2020-12-24T16:00:45.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 Hexo 搭建的博客中对文章进行编写，经常会用到一些特殊字符需要转译，比如 <code>-</code>、<code>.</code>、空格、制表符等等，在正常情况下可以使用 <code>\</code> 进行转译，但是有一些字符无法转译，使用后在执行 <code>hexo server</code> 命令的时候会报错。</p><p><strong>报错信息：</strong></p><blockquote><p>Unhandled rejection Template render error: (unknown path) [Line 7, Column 23]<br> Error: Unable to call <code>worldcount</code>, which is undefined or falsey……</p></blockquote><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>报错的原因是，Hexo 编译时发生错误，可能是文章中存在特殊字符，如：{ [ ( ) ] } 等等。如下面这段代码：</p><p><strong>在页面中：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; worldcount(post.content) &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>在 Markdown 中：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#123;&amp;#123; worldcount&amp;#40;post.content&amp;#41; &amp;#125;&amp;#125;</span><br></pre></td></tr></table></figure><p>在 Markdown 中使用 <code>\</code> 无法转译的字符需要使用字符的命名实体或十进制编码，如上面代码中。</p><p><strong><em>注意：需要转义的字符只是文本中的特殊字符，代码块中的特殊字符无需转译或使用转译字符。</em></strong></p><h2 id="常见特殊字符"><a href="#常见特殊字符" class="headerlink" title="常见特殊字符"></a>常见特殊字符</h2><p> (所有编码使用时;前的空额取消)</p><table><thead><tr><th align="center">特殊符号</th><th align="center">命名实体</th><th align="center">十进制编码</th></tr></thead><tbody><tr><td align="center">空格</td><td align="center">&amp;nbsp ;</td><td align="center">&amp;#160 ;</td></tr><tr><td align="center">全角空格</td><td align="center">&emsp;</td><td align="center">&#12288;</td></tr><tr><td align="center">‘</td><td align="center">&amp;apos ;</td><td align="center">&amp;#39 ;</td></tr><tr><td align="center">“</td><td align="center">&amp;quot ;</td><td align="center">&amp;#34 ;</td></tr><tr><td align="center">(</td><td align="center">—</td><td align="center">&amp;#40 ;</td></tr><tr><td align="center">)</td><td align="center">—</td><td align="center">&amp;#41 ;</td></tr><tr><td align="center">&lt;</td><td align="center">&amp;lt ;</td><td align="center">&amp;#60 ;</td></tr><tr><td align="center">&gt;</td><td align="center">&amp;gt ;</td><td align="center">&amp;#62 ;</td></tr><tr><td align="center">[</td><td align="center">—</td><td align="center">&amp;#91 ;</td></tr><tr><td align="center">]</td><td align="center">—</td><td align="center">&amp;#93 ;</td></tr><tr><td align="center">{</td><td align="center">—</td><td align="center">&amp;#123 ;</td></tr><tr><td align="center">}</td><td align="center">—</td><td align="center">&amp;#125 ;</td></tr><tr><td align="center">´</td><td align="center">&amp;acute ;</td><td align="center">&amp;#180 ;</td></tr><tr><td align="center">°</td><td align="center">&amp;deg ;</td><td align="center">&amp;#176 ;</td></tr><tr><td align="center">®</td><td align="center">&amp;reg ;</td><td align="center">&amp;#174 ;</td></tr><tr><td align="center">©</td><td align="center">&amp;copy ;</td><td align="center">&amp;#169 ;</td></tr></tbody></table><p>常用数学转译字符对照表：</p><table><thead><tr><th align="center">特殊符号</th><th align="center">命名实体</th><th align="center">十进制编码</th></tr></thead><tbody><tr><td align="center">≤</td><td align="center">&amp;le ;</td><td align="center">&amp;#8804 ;</td></tr><tr><td align="center">≥</td><td align="center">&amp;ge ;</td><td align="center">&amp;#8805 ;</td></tr><tr><td align="center">≈</td><td align="center">&amp;asymp ;</td><td align="center">&amp;#8773 ;</td></tr><tr><td align="center">≠</td><td align="center">&amp;ne ;</td><td align="center">&amp;#8800 ;</td></tr><tr><td align="center">∩</td><td align="center">&amp;cap ;</td><td align="center">&amp;#8745 ;</td></tr><tr><td align="center">∪</td><td align="center">&amp;cup ;</td><td align="center">&amp;#8746 ;</td></tr><tr><td align="center">∠</td><td align="center">&amp;ang ;</td><td align="center">&amp;#8736 ;</td></tr><tr><td align="center">∞</td><td align="center">&amp;infin ;</td><td align="center">&amp;#8734 ;</td></tr><tr><td align="center">±</td><td align="center">&amp;plusmn ;</td><td align="center">&amp;#177 ;</td></tr><tr><td align="center">√</td><td align="center">&amp;radic ;</td><td align="center">&amp;#8730 ;</td></tr><tr><td align="center">∑</td><td align="center">&amp;sum ;</td><td align="center">&amp;#8722 ;</td></tr><tr><td align="center">∫</td><td align="center">&amp;int ;</td><td align="center">&amp;#8747 ;</td></tr><tr><td align="center">Δ</td><td align="center">&amp;Delta ;</td><td align="center">&amp;#916 ;</td></tr></tbody></table><p>常用希腊字母转译字符对照表：</p><table><thead><tr><th align="center">特殊符号</th><th align="center">命名实体</th><th align="center">十进制编码</th></tr></thead><tbody><tr><td align="center">Φ</td><td align="center">&amp;Phi ;</td><td align="center">&#934;</td></tr><tr><td align="center">Ω</td><td align="center">&amp;Omega ;</td><td align="center">&#937;</td></tr><tr><td align="center">α</td><td align="center">&amp;alpha ;</td><td align="center">&#945;</td></tr><tr><td align="center">β</td><td align="center">&amp;beta ;</td><td align="center">&#946;</td></tr><tr><td align="center">γ</td><td align="center">&amp;gamma ;</td><td align="center">&#947;</td></tr><tr><td align="center">δ</td><td align="center">&amp;delta ;</td><td align="center">&amp;#948 ;</td></tr><tr><td align="center">ε</td><td align="center">&amp;epsilon ;</td><td align="center">&amp;#949 ;</td></tr><tr><td align="center">ζ</td><td align="center">&amp;zeta ;</td><td align="center">&amp;#950 ;</td></tr><tr><td align="center">η</td><td align="center">&amp;eta ;</td><td align="center">&amp;#951 ;</td></tr><tr><td align="center">θ</td><td align="center">&amp;theta ;</td><td align="center">&amp;#952 ;</td></tr><tr><td align="center">λ</td><td align="center">&amp;lambda ;</td><td align="center">&amp;#955 ;</td></tr><tr><td align="center">μ</td><td align="center">&amp;mu ;</td><td align="center">&amp;#956 ;</td></tr><tr><td align="center">ξ</td><td align="center">&amp;xi ;</td><td align="center">&amp;#958 ;</td></tr><tr><td align="center">π</td><td align="center">&amp;pi ;</td><td align="center">&amp;#960 ;</td></tr><tr><td align="center">ρ</td><td align="center">&amp;rho ;</td><td align="center">&amp;#961 ;</td></tr><tr><td align="center">σ</td><td align="center">&amp;sigma ;</td><td align="center">&amp;#963 ;</td></tr><tr><td align="center">φ</td><td align="center">&amp;phi ;</td><td align="center">&amp;#966 ;</td></tr><tr><td align="center">ψ</td><td align="center">&amp;psi ;</td><td align="center">&amp;#968 ;</td></tr><tr><td align="center">ω</td><td align="center">&amp;omega ;</td><td align="center">&amp;#969 ;</td></tr><tr><td align="center">∂</td><td align="center">&amp;part ;</td><td align="center">&amp;#8706 ;</td></tr><tr><td align="center">∅</td><td align="center">&amp;empty ;</td><td align="center">&amp;#8709 ;</td></tr></tbody></table><p>原文出自：<a class="link"   href="https://www.pandashen.com/" >https://www.pandashen.com<i class="fas fa-external-link-alt"></i></a> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在 Hexo 搭建的博客中对文章进行编写，经常会用到一些特殊字符需要转译，比如 &lt;code&gt;-&lt;/code&gt;、&lt;code&gt;.</summary>
      
    
    
    
    <category term="study" scheme="http://yoursite.com/categories/study/"/>
    
    
  </entry>
  
  <entry>
    <title>如何创建一个Shopify模版本地开发环境.</title>
    <link href="http://yoursite.com/2020/12/19/shopify/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAShopify%E6%A8%A1%E7%89%88%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2020/12/19/shopify/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAShopify%E6%A8%A1%E7%89%88%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2020-12-19T12:03:49.375Z</published>
    <updated>2020-12-24T15:57:51.360Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装主题套件"><a href="#安装主题套件" class="headerlink" title="安装主题套件"></a>安装主题套件</h3><p>首先，转到<a class="link"   href="https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9zaG9waWZ5LmdpdGh1Yi5pby90aGVtZWtpdC8=" >themekit<i class="fas fa-external-link-alt"></i></a>下载主题套件。</p><h3 id="macOS安装"><a href="#macOS安装" class="headerlink" title="macOS安装"></a>macOS安装</h3><p>使用<a class="link"   href="https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cDovL2JyZXcuc2gv" >homebrew<i class="fas fa-external-link-alt"></i></a>安装themekiit.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap shopify/shopify</span><br><span class="line">brew install themekit</span><br></pre></td></tr></table></figure><h3 id="Windows-Chocolatey安装"><a href="#Windows-Chocolatey安装" class="headerlink" title="Windows Chocolatey安装"></a>Windows Chocolatey安装</h3><p>首先安装<a class="link"   href="https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9jaG9jb2xhdGV5Lm9yZy8=" >Chocolatey<i class="fas fa-external-link-alt"></i></a>，然后通过以下命令安装themekit。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install themekit</span><br></pre></td></tr></table></figure><h3 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h3><p>如果是Linux系统，则可以使用以下脚本安装themekit。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://shopify.github.io/themekit/scripts/install.py | sudo python</span><br></pre></td></tr></table></figure><p>安装完毕之后运行<strong>theme</strong>，如果显示下图信息则安装成功。</p><p><img src="https://pic3.zhimg.com/80/v2-8cce0690f64d6c6a02ef0c91aedf59a6_720w.jpg" alt="img"></p><h3 id="链接到商店"><a href="#链接到商店" class="headerlink" title="链接到商店"></a>链接到商店</h3><p>要想连接到商店拥有主题的读写权限，首先得建立私人应用将API秘钥添加到我们的配置中。</p><p>请登录Shopify后台，然后创建一个私人应用程序。</p><blockquote><p>Shopify管理员 &gt; Apps &gt; 单击Manage private apps &gt; 单击Create a new private app创建应用</p></blockquote><p>然后填写信息，并将<strong>Theme templates and theme assets</strong>权限设置为读写访问权限并保存，页面刷新之后复制密码，后面步骤用得到。</p><p><img src="https://pic4.zhimg.com/v2-c5672b6847b0eb3768ab31ae2772ecc7_b.jpg" alt="img"></p><h3 id="下载需要修改的模板"><a href="#下载需要修改的模板" class="headerlink" title="下载需要修改的模板"></a>下载需要修改的模板</h3><p>接下来，我们需要将主题下载到本地环境中。要下载模板，首先需要知道模板的ID。获取ID的最简单方法是使用get命令，如下所示：</p><ol><li>theme get –list -p=上一步复制的密码 -s=<a class="link"   href="https://link.zhihu.com/?target=http://you-store.myshopify.com" >http://you-store.myshopify.com<i class="fas fa-external-link-alt"></i></a></li></ol><p><img src="https://pic1.zhimg.com/80/v2-4db25c89310144da8a0178b52516dfe8_720w.png" alt="img"></p><p>然后，记下模板ID，运行以下命令从shopify下载主题：</p><ol><li>theme get -p=上一步复制的密码 -s=<a class="link"   href="https://link.zhihu.com/?target=http://you-store.myshopify.com" >http://you-store.myshopify.com<i class="fas fa-external-link-alt"></i></a> -t=your-theme-id</li></ol><p><img src="https://pic4.zhimg.com/80/v2-f35f2d0497884ca2054caa92d7f3b0b3_720w.png" alt="img"></p><h3 id="编辑模板"><a href="#编辑模板" class="headerlink" title="编辑模板"></a>编辑模板</h3><p>我们可以编辑这些本地文件，然后运行<strong>theme watch</strong>。这将监视模板文件中的更改，当检测到文件被修改时，Theme Kit将自动将新版本上载到Shopify，因此您可以立即查看编辑后的模板样式。</p><p><img src="https://pic1.zhimg.com/80/v2-d05bbd9df19f9ebab7b5f48fd157a790_720w.jpg" alt="img"></p><p>当我们对theme.scss.liquid文件进行了一些更改，您将在终端上看到此输出</p><p><img src="https://pic3.zhimg.com/80/v2-503c4fedd4f708bb2c7472247cc4af1e_720w.jpg" alt="img"></p><blockquote><p>要上传特定文件，请运行theme upload <file>。要删除特定文件，请运行theme remove <file>。您可以通过运行查找所有命令的列表theme help。您可以通过运行获取有关命令的更多信息theme help <command></p></blockquote><h3 id="实时预览"><a href="#实时预览" class="headerlink" title="实时预览"></a>实时预览</h3><p>没有人喜欢编辑一次然后手动刷新一次页面。下面我们将使用Prepros来达到实时预览的功能。</p><p>首先下载<a class="link"   href="https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9wcmVwcm9zLmlvLw==" >Prepros<i class="fas fa-external-link-alt"></i></a>并安装</p><p><img src="https://pic3.zhimg.com/80/v2-81a904f9da10308140a2387dcd37b74a_720w.jpg" alt="img"></p><h3 id="将主题添加为项目"><a href="#将主题添加为项目" class="headerlink" title="将主题添加为项目"></a>将主题添加为项目</h3><p><img src="https://pic1.zhimg.com/v2-c100f31eacdfb0f033c87de8dc6e9c34_b.jpg" alt="img"></p><p>只需将整个目录拖到Prepros中，即可将主题作为项目添加到Prepros。</p><h3 id="监视-liquid文件"><a href="#监视-liquid文件" class="headerlink" title="监视.liquid文件"></a>监视.liquid文件</h3><p>应将.liquid文件添加到Prepros将要监视的文件类型列表中。默认情况下是不会监视它们的，因为Prepros不会编译Liquid。</p><p>要将.liquid文件添加到监视列表，请右键任意.liquid文件，然后选择“ <strong>Watch .liquid files</strong>”。</p><p><img src="https://pic2.zhimg.com/80/v2-feb48e382f61af3f0709e211727c5cd9_720w.jpg" alt="img"></p><h3 id="将实时预览链接到店铺"><a href="#将实时预览链接到店铺" class="headerlink" title="将实时预览链接到店铺"></a>将实时预览链接到店铺</h3><p>下一步是设置实时预览的URL。也就是将Prepros与Shopify商店链接起来并实现实时重载的功能。</p><p>具体设置如下图：</p><p><img src="https://pic1.zhimg.com/v2-c69eef525d534cd9784f643dbf3017a4_b.jpg" alt="img"></p><h3 id="设置重新加载的延迟"><a href="#设置重新加载的延迟" class="headerlink" title="设置重新加载的延迟"></a>设置重新加载的延迟</h3><p>最后，您需要在Prepros中设置延迟。延迟的原因是让Theme Kit有时间观察到更改，并将更改与Shopify的服务器同步。</p><p>具体设置如下图：</p><p><img src="https://pic2.zhimg.com/v2-8912efba9332fff5ecc0251c1e1f7e1d_b.jpg" alt="img"></p><h3 id="进行修改并实时预览"><a href="#进行修改并实时预览" class="headerlink" title="进行修改并实时预览"></a>进行修改并实时预览</h3><p>现在，您已经设置了实时预览，按<strong>Ctrl+L</strong>在浏览器中打开就能看到。    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装主题套件&quot;&gt;&lt;a href=&quot;#安装主题套件&quot; class=&quot;headerlink&quot; title=&quot;安装主题套件&quot;&gt;&lt;/a&gt;安装主题套件&lt;/h3&gt;&lt;p&gt;首先，转到&lt;a class=&quot;link&quot;   href=&quot;https://link.zhihu.com/?t</summary>
      
    
    
    
    <category term="shopify" scheme="http://yoursite.com/categories/shopify/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么你的Shopify店铺没有成功</title>
    <link href="http://yoursite.com/2020/12/19/shopify/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84Shopify%E5%BA%97%E9%93%BA%E6%B2%A1%E6%9C%89%E6%88%90%E5%8A%9F/"/>
    <id>http://yoursite.com/2020/12/19/shopify/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84Shopify%E5%BA%97%E9%93%BA%E6%B2%A1%E6%9C%89%E6%88%90%E5%8A%9F/</id>
    <published>2020-12-19T12:03:49.366Z</published>
    <updated>2020-12-24T16:04:02.402Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-b0bea42157dab7e9792d1f6d84fc179b_1440w-20201107192202050.jpg" alt="为什么99%的Shopify店铺会失败？"></p><h1 id="为什么你的Shopify店铺没有成功？"><a href="#为什么你的Shopify店铺没有成功？" class="headerlink" title="为什么你的Shopify店铺没有成功？"></a>为什么你的Shopify店铺没有成功？</h1><p>关于Shopify的各种讨论真是非常热烈！ 现实是99%的Shopify店铺创建者都未能实现一夜暴富的美梦，这与很多Shopify大师所宣传的情况不符。那么如何避免重蹈99%的失败者的覆辙而加入1%的成功者行列？本文将给出建议。</p><h2 id="01-选择有特色的Niche"><a href="#01-选择有特色的Niche" class="headerlink" title="01 选择有特色的Niche"></a>01 选择有特色的Niche</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-bf60af6bbbe46102e923dd9fc7269fd5_720w-20201107192212306.jpg" alt="img"></p><p>首先是Niche，字母N代表的是Niche，无论做Shopify还是任何电商都首先要考虑要选择什么样的细分市场，简言之就是你要选定要售卖的产品。</p><p>社交媒体营销也遵循20%的工作决定80%的成果的原则。99%的人的错误在于跟风，利用各种分析手段得出的Niche结论是一个无数店铺都在售卖的产品。</p><p>举个具体例子来说，像狗项圈。人们或者说大多数人不会从Shopify商店或者Facebook广告购买通用产品，就像你不会从Facebook广告上购买厕纸。</p><p><img src="https://pic4.zhimg.com/80/v2-d18788a2b8b0eba6a8e307d5616b750b_720w.jpg" alt="img"></p><p>你应该做的是在搜索Niche时，利用搜索引擎的自动填充词条功能找灵感。比如在通用产品 dog collar后面加空格a，从以下自动生成的词条中选一个做Niche。</p><p>像dog collar army就不错，你可以用Facebook广告测试一下army风格的狗项圈，包括以一些历史上有名的将军为灵感的狗项圈，都是很不错的Niche。</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-60f108dadef4c32adb60307bb82efaf0_720w-20201107192219911.jpg" alt="img"></p><p>或者dog collar后面加空格b，c，直到你找到满意的Niche，</p><p><img src="https://pic3.zhimg.com/80/v2-28b5710ad388ac0a85fa58e474b5e836_720w.jpg" alt="img"></p><p>再举个例子，像earrings耳饰，不要选择通用产品earrings，而是利用我们上面讲的方法从搜索引擎自动填充的词条中找灵感。</p><p>比如earrings animal搜索出来的动物形状的耳饰就是很好的Niche。设想一下如果Facebook用户中有即将过生日的，她的老公说不定就想买这样一副耳饰送她做生日礼物。</p><p>相反如果选择狗项圈、耳饰这样的通用产品，那么不大可能有人会从Facebook广告购买这些产品。</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-9070e2ed80d13a79872739ba3bf8a6b1_720w-20201107192228232.jpg" alt="img"></p><p>创建你的Shopify店铺前就要想到如何精准定位受众，找到目标顾客群体。因此你的Niche千万不要选一些通用的商品。</p><h2 id="02-Shopify店铺也需要实实在在的经营"><a href="#02-Shopify店铺也需要实实在在的经营" class="headerlink" title="02 Shopify店铺也需要实实在在的经营"></a>02 Shopify店铺也需要实实在在的经营</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-006886476bc43d81fb13505fedc44abf_720w-20201107192249343.jpg" alt="img"></p><p>99%的人有Shopify店铺可以让人一夜暴富的错误想法。这些人认为自己可以在一天或者一周之内实现从对Shopify一无所知到成功创建自己的电商事业。</p><p>而他们所不知道的是，成功的电商企业每天会测试成百上千的产品，改变着店铺的各种设置，总结哪些是成功的产品哪些是不成功的产品；像所有商业活动一样，创建成功的电商企业也需要大量的时间投入，做大量的工作和一定的资金投入。</p><p>不要以为仅仅用Oberlo导入商品到你的Shopify店铺，就可以坐等成功Dropshipping，成为下一个一夜暴富的百万富翁。你需要做大量实实在在的工作，例如创建邮件清单、与你的顾客建立良好的关系、二次定位顾客、向老顾客发送优惠券等等。</p><h2 id="03-失败一次就放弃"><a href="#03-失败一次就放弃" class="headerlink" title="03 失败一次就放弃"></a>03 失败一次就放弃</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-668007be18919dfcf254dc2de8c58e63_720w-20201107192302656.jpg" alt="img"></p><p>很多人在店铺中放了一共不到10个商品，为每个商品创建了广告组，没有一个商品成功销售，然后就放弃了Shopify店铺。</p><p>无论线上线下，决定一个企业家能否成功的关键因素在于其成功的意愿有多强烈。</p><p>很多人可能会花费100刀、200刀或者500刀，创建Shopify店铺，投放Facebook广告，但是都不奏效，于是就放弃了。可能你只需要一个成功的商品。</p><p>而且你不知道电商行业是最具有滚雪球效应的，一旦有了突破你很快会面临商品脱销的窘境。99%的人在成功卖出第一个商品前就放弃了。</p><h2 id="04-工作量黄金分配比例"><a href="#04-工作量黄金分配比例" class="headerlink" title="04 工作量黄金分配比例"></a>04 工作量黄金分配比例</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-7936c7276a03b8222a18228f3ddac454_720w-20201107192313757.jpg" alt="img"></p><p>我们20%的活动决定着我们80%的成果，对于Shopify店铺来说那些是我们工作的重点呢？下面我从Shopify店铺三项主要工作内容为你分析工作量应该如何分配:</p><p>■ 20%的工作量花在创建店铺；（以我自己为例，我对Shopify店铺的创建很熟悉，对Facebook广告的投放也很熟悉，还有丰富的电商销售经验。我通常花一天时间创建一个Shopify店铺。）</p><p>■ 30%的工作量用于选择Niche和商品；</p><p>■ 51%的工作量用于市场营销（我故意强调超过一半的工作量）；</p><h2 id="05-分清主次，把时间花在有产出的事情上"><a href="#05-分清主次，把时间花在有产出的事情上" class="headerlink" title="05 分清主次，把时间花在有产出的事情上"></a>05 分清主次，把时间花在有产出的事情上</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-66a01f8112ce4661dcbd2eb731e13583_720w-20201107192325962.jpg" alt="img"></p><p>在创建Shopify店铺之前，先要确定你的Niche和商品。否则你可能花费了大量的时间和金钱创建了Shopify店铺而没有任何销售。你要把时间花在测试商品和广告定位上，这两项工作关乎店铺盈利，而不要把大量时间花在创建吸引人的Twitter或者Pinterest账号上。</p><p>以上几点就是99%的人失败的原因分析，希望我上面给出的建议能帮助你早日加入1%的成功者行列！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-b0bea42157dab7e9792d1f6d84fc179b_1440w-20201107192202050.jpg&quot;</summary>
      
    
    
    
    <category term="shopify" scheme="http://yoursite.com/categories/shopify/"/>
    
    
  </entry>
  
  <entry>
    <title>shopify调用配置信息</title>
    <link href="http://yoursite.com/2020/12/19/shopify/shopify%E8%B0%83%E7%94%A8%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/"/>
    <id>http://yoursite.com/2020/12/19/shopify/shopify%E8%B0%83%E7%94%A8%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/</id>
    <published>2020-12-19T12:03:49.365Z</published>
    <updated>2020-12-24T15:59:15.051Z</updated>
    
    <content type="html"><![CDATA[<h3 id="调用配置"><a href="#调用配置" class="headerlink" title="调用配置"></a>调用配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">要调用模板中的配置信息，需要使用 liquid 语言。可以使用&#123;%%&#125;逻辑标签和&#123;&#123;&#125;&#125;显示标签。在这两种标签里，都可以使用settings.id，其中id就是配置中定义的属性。比如配置文件里是这样写的：</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span> : <span class="string">&quot;颜色&quot;</span>,</span><br><span class="line">    <span class="string">&quot;settings&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;color&quot;</span>,</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;color_background&quot;</span>,</span><br><span class="line">        <span class="string">&quot;label&quot;</span>: <span class="string">&quot;背景颜色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;default&quot;</span>: <span class="string">&quot;#e5e5e5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;info&quot;</span> : <span class="string">&quot;这个将调整背景颜色&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;color&quot;</span>,</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;color_body_text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;label&quot;</span>: <span class="string">&quot;内容文字颜色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;default&quot;</span>: <span class="string">&quot;#2980b9&quot;</span>,</span><br><span class="line">        <span class="string">&quot;info&quot;</span> : <span class="string">&quot;这个将调整内容文字颜色&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>你可以这样调用背景颜色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; settings.color_background &#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="常规配置类型"><a href="#常规配置类型" class="headerlink" title="常规配置类型"></a>常规配置类型</h4><p>常规配置类型包括：text, textarea, image, radio, select, checkbox。每种类型都允许用户选择来修改模板。这些配置用一组liquid标签来调用。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;  &#x2F;&#x2F;将会把信息显示在页面上</span><br><span class="line">&#123;&#123; settings.your_id &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;%%&#125;可以把配置信息用于逻辑处理上。</span><br><span class="line"></span><br><span class="line">    &#123;% if settings.product_order &#x3D;&#x3D; true %&#125;</span><br><span class="line">      &lt;p&gt;可以下单!&lt;&#x2F;p&gt;</span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">      &lt;p&gt;不能下单 :(&lt;&#x2F;p&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="特殊设置类型"><a href="#特殊设置类型" class="headerlink" title="特殊设置类型"></a>特殊设置类型</h2><p>特殊设置类型包括：<code>color</code>, <code>font</code>, <code>collection</code>, <code>product</code>, <code>blog</code>, <code>page</code>, <code>link_list</code>,  <code>snippet。要调用他们，比常规配置稍微复杂一些。</code></p><h3 id="Color和Font"><a href="#Color和Font" class="headerlink" title="Color和Font"></a><code>Color和Font</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">color和font和上面的调用方式相同，如果你在页面上直接调用，那么它将在页面上显示16进制，然而对于我们来说并没有什么卵用，我们需要在样式表中调用这个才有意义，比如将我们的sass文件保存成application.scss.liquid，就可以使用liquid语法来调用它。</span><br><span class="line">body&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    background-color: #&#123;&#39;&#123;&#123; settings.color_background &#125;&#125;&#39;&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：这里用#{‘’}包裹。</strong></p><p>同样，字体也可以用这种方式调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  font-family: #&#123;&#39;&#123;&#123; settings.header_font &#125;&#125;&#39;&#125;;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a>Collections</h2><p>collections的调用方式会更复杂一些，首先要注意的是，当你将设置的类型为Collections是，选择面板中将显示用户的collections下拉列表，其中包括已经在商店中定义的所有Collections。这意味着必须至少已经定义了2个集合。其次，需要知道shopify都有哪些特殊配置的标签，这里有个表 <a class="link"   href="http://cheat.markdunkley.com/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%96%B9%E4%BE%BF%E6%9F%A5%E7%9C%8B%E3%80%82" >http://cheat.markdunkley.com/，可以方便查看。<i class="fas fa-external-link-alt"></i></a></p><p>比如，我们在这里找到了collection.liquid部分，上面有用什么标签全局访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collections[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure><p>这里，the-handle是集合的名称，或者说是集合的slug。在settings_schema.json配置文件中，id的名称将定于这个属性。比如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Collection&quot;</span>,</span><br><span class="line">     <span class="string">&quot;settings&quot;</span> : [</span><br><span class="line">     &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;collection&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;feature_collection&quot;</span>,</span><br><span class="line">     <span class="string">&quot;label&quot;</span>: <span class="string">&quot;Feature collection&quot;</span></span><br><span class="line">     &#125;</span><br><span class="line">   ]</span><br><span class="line"> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>那么就这样调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; collections[settings.feature_collection] &#125;&#125;</span><br></pre></td></tr></table></figure><p>但是，上面的代码只会显示为CollectionDrop。 为了获得有意义的东西，需要选择集合的属性（可在<a class="link"   href="http://cheat.markdunkley.com/%E4%B8%8A%E8%8E%B7%E5%BE%97%EF%BC%89%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%A0%87%E9%A2%98%E6%88%96%E4%BA%A7%E5%93%81%E3%80%82" >http://cheat.markdunkley.com/上获得），例如标题或产品。<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; collections[settings.feature_collection].title &#125;&#125;</span><br></pre></td></tr></table></figure><p>您可能还想访问该集合中每个产品的信息。 这可以通过引用集合上的products属性然后循环遍历这些来轻松实现。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for product in collections[settings.feature_collection].products %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; product.title &#125;&#125; | &#123;&#123; product.price &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> &#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>通过liquid循环语句，可以把集合中的每个产品遍历出来，并显示产品的标题和价格。</p><h2 id="Products"><a href="#Products" class="headerlink" title="Products"></a>Products</h2><p>产品和集合的使用方式类似，查一下表，看看如何调用这个products。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">all_products[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure><p>注意这里是all_products，而不是products。 所以，这样调用产品的标题和价格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; all_products[settings.feature_product].title &#125;&#125; | &#123;&#123; all_products[settings.feature_product].price &#125;&#125;</span><br></pre></td></tr></table></figure><p>如果要调用产品的头图，这样来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;&#123;&#123; all_products[settings.feature_product].featured_image | img_url: &#39;small&#39; &#125;&#125;&quot; alt&#x3D;&quot;&#123;&#123; a</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;调用配置&quot;&gt;&lt;a href=&quot;#调用配置&quot; class=&quot;headerlink&quot; title=&quot;调用配置&quot;&gt;&lt;/a&gt;调用配置&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    <category term="shopify" scheme="http://yoursite.com/categories/shopify/"/>
    
    
  </entry>
  
  <entry>
    <title>shopify模板开发学习-自定义配置文件</title>
    <link href="http://yoursite.com/2020/12/19/shopify/shopify%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/12/19/shopify/shopify%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</id>
    <published>2020-12-19T12:03:49.361Z</published>
    <updated>2020-12-24T15:59:54.077Z</updated>
    
    <content type="html"><![CDATA[<p>在创建主题时，可以为客户预留一些自定义的配置，是Shopify主题模板常用的做法。Shopify使用settings_schema.json文件提供了这个自定义配置的方式。</p><p>在Shopify主题的config目录中，在此文件中定义一些对象属性，就可以实现自定义的配置选项。当你选择在线商店 》 模板 》自定义按钮，就可以看到控制面板中这些选项。</p><h2 id="配置文件的文件格式"><a href="#配置文件的文件格式" class="headerlink" title="配置文件的文件格式"></a>配置文件的文件格式</h2><p>settings_schema.json文件，本身是个JSON文件，那么他需要遵守JSON文件规范，这里所有的数据都用[]括起来。在此范围内，你可以将相关选项组合在一起。每个分组都有一个名称，然后是定义这个组的配置。比如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span> : <span class="string">&quot;颜色&quot;</span>,</span><br><span class="line">        <span class="string">&quot;settings&quot;</span> : [ ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><p>然后，每个选项都是设置数组中的一个对象。 像这样的东西：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Shopify119&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;theme_name&quot;</span>: <span class="string">&quot;Shopify119 theme&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;theme_version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;theme_author&quot;</span>: <span class="string">&quot;Leo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;theme_documentation_url&quot;</span>: <span class="string">&quot;https://shopify119.blog.csdn.net&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;theme_support_url&quot;</span>: <span class="string">&quot;https://shopify119.blog.csdn.net&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;颜色&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;color&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;color_background&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;背景颜色&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;default&quot;</span>: <span class="string">&quot;#e5e5e5&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;info&quot;</span> : <span class="string">&quot;这个将调整背景颜色&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;color&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;color_body_text&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;内容文字颜色&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;default&quot;</span>: <span class="string">&quot;#2980b9&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;info&quot;</span> : <span class="string">&quot;这个将调整内容文字颜色&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Logo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;image&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;logo.png&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;Logo&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;info&quot;</span>: <span class="string">&quot;这里可以改变店铺的Logo&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>上面的例子中，在自定义设置的侧栏上，你可以看到标签“颜色”，当你单击他时，可以选择设置背景颜色和内容文字颜色；选择Logo可以更改店铺的Logo。<br><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200305144403759.gif" alt="在这里插入图片描述"></p><h2 id="配置文件的属性"><a href="#配置文件的属性" class="headerlink" title="配置文件的属性"></a>配置文件的属性</h2><p>每个设置都有5个属性：type、id、label、default、info</p><table><thead><tr><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>必填</td><td>定义选项所需的输入类型</td></tr><tr><td>id</td><td>必填</td><td>id必须唯一，这将在主题中引用它</td></tr><tr><td>label</td><td>必填</td><td>向用户描述了该选项的用途，可以用中文</td></tr><tr><td>placeholder</td><td>可选</td><td>输入的占位符文本的值。这仅适用于基于文本的设置类型。</td></tr><tr><td>default</td><td>可选</td><td>该选项的默认值</td></tr><tr><td>info</td><td>可选</td><td>为用户提供该选项的详细使用信息</td></tr></tbody></table><h2 id="常规设置类型"><a href="#常规设置类型" class="headerlink" title="常规设置类型"></a>常规设置类型</h2><p>下表描述了允许的常规输入类型，每个值在type属性中设置。</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>text</td><td>允许用户输入单行文本字段</td></tr><tr><td>textarea</td><td>允许用户输入多行文本字段</td></tr><tr><td>image</td><td>允许用户上传图片</td></tr><tr><td>radio</td><td>允许用户使用单选按钮</td></tr><tr><td>select</td><td>允许用户从下拉列表中进行选择</td></tr><tr><td>checkbox</td><td>允许用户选中一个框，返回true或false值</td></tr></tbody></table><p>image type<br>需要注意的是，用这种方式上传的图片将保存在模板的assets文件夹中。该文件使用id中定义的名称和格式进行保存。所以，即使上传的是.jpg文件，但是id定义的是logo.png，图片也将会保存为.png文件。</p><p>radio和select type<br>由于radio和select有多个值可提供选择，因此还需要设置额外的属性。比如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;type&quot;</span>:      <span class="string">&quot;radio&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>:        <span class="string">&quot;id&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;label&quot;</span>:     <span class="string">&quot;Text&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;options&quot;</span>: [</span><br><span class="line">    &#123; <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;one&quot;</span>, <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;Radio One&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;two&quot;</span>, <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;Radio Two&quot;</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;default&quot;</span>:   <span class="string">&quot;one&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;info&quot;</span>:      <span class="string">&quot;Text&quot;</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="特殊设置类型"><a href="#特殊设置类型" class="headerlink" title="特殊设置类型"></a>特殊设置类型</h2><p>特殊设置类型的定义访问和常规设置类型相似，不同之处在于这些设置，将为用户提供内置或特定的选择信息。比如：产品类型是下拉列表，但只允许用户从已经在商店中定义的产品类型中进行选择。</p><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>color</td><td>允许用户使用颜色选择器窗口小部件选择颜色</td></tr><tr><td>font</td><td>允许用户从可用字体列表中进行选择</td></tr><tr><td>collection</td><td>允许用户选择商店中可用的产品系列</td></tr><tr><td>product</td><td>允许用户选择商店中可用的产品</td></tr><tr><td>blog</td><td>允许用户从商店中设置的博客列表中进行选择</td></tr><tr><td>link_list</td><td>允许用户从可用菜单中进行选择</td></tr><tr><td>page</td><td>允许用户选择商店中定义的特定页面</td></tr><tr><td>snippets</td><td>允许用户选择主题中可用的特定代码段</td></tr></tbody></table><h2 id="Blog-Type"><a href="#Blog-Type" class="headerlink" title="Blog Type"></a>Blog Type</h2><p>Shopify内置了博客，你可以添加博客文章。还可以把这些博客文章添加到不同的博客中。blog type设置下拉列表允许你选择要用于改设置的博客。</p><h2 id="Snippet-Type"><a href="#Snippet-Type" class="headerlink" title="Snippet Type"></a>Snippet Type</h2><p>代码片段在模板中的snippets目录里面定义。</p><h3 id="信息设置"><a href="#信息设置" class="headerlink" title="信息设置"></a>信息设置</h3><p>Shopify还允许将创建主题的作者信息放入侧边栏中，它们只有3个属性：type, content, info</p><table><thead><tr><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>必填</td><td>定义选项所需的输入类型。 对于侧边栏设置，这只能是标题或段落</td></tr><tr><td>content</td><td>必填</td><td>文本内容</td></tr><tr><td>info</td><td>可选</td><td>向用户提供有关该选项的其他信息。</td></tr></tbody></table><p>在模板中调用配置信息<br>现在已经可以创建设置信息了，但是如何在实际的模板中调用并使用它们？这将是下篇文章的内容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在创建主题时，可以为客户预留一些自定义的配置，是Shopify主题模板常用的做法。Shopify使用settings_schema.json文件提供了这个自定义配置的方式。&lt;/p&gt;
&lt;p&gt;在Shopify主题的config目录中，在此文件中定义一些对象属性，就可以实现自定义</summary>
      
    
    
    
    <category term="shopify" scheme="http://yoursite.com/categories/shopify/"/>
    
    
  </entry>
  
  <entry>
    <title>shopify产品页面数据获取</title>
    <link href="http://yoursite.com/2020/12/19/shopify/shopify%E4%BA%A7%E5%93%81%E9%A1%B5%E9%9D%A2%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    <id>http://yoursite.com/2020/12/19/shopify/shopify%E4%BA%A7%E5%93%81%E9%A1%B5%E9%9D%A2%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/</id>
    <published>2020-12-19T12:03:49.357Z</published>
    <updated>2020-12-24T16:04:34.942Z</updated>
    
    <content type="html"><![CDATA[<h3 id="获取产品数据"><a href="#获取产品数据" class="headerlink" title="获取产品数据"></a>获取产品数据</h3><h4 id="获取标题"><a href="#获取标题" class="headerlink" title="获取标题"></a>获取标题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; product.title &#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="获取最低价和最高价"><a href="#获取最低价和最高价" class="headerlink" title="获取最低价和最高价"></a>获取最低价和最高价</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; product.price_min | money &#125;&#125; - &#123;&#123; product.price_max | money &#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="获取-variant-（后面我将叫它为变体），并获取关联数据"><a href="#获取-variant-（后面我将叫它为变体），并获取关联数据" class="headerlink" title="获取 variant （后面我将叫它为变体），并获取关联数据"></a>获取 variant （后面我将叫它为变体），并获取关联数据</h4><p>这里我先讲一下 我的选购逻辑，因为这里的代码数据应该如何获取与我的选购逻辑有关系。我的选购逻辑与速卖通的有点像，速卖通是有个选项可以绑定图片，这样用户可以更直观的知道他的选择。而为我的逻辑是通过选择图片进行选购，不一样的是我的图片可以通过选择属性进行筛选，而不是不同属性的图片是一样的，下面是速卖通的截图</p><p><img src="https://img-blog.csdnimg.cn/20200330124554589.gif" alt="速卖通图片选项"></p><h4 id="获取-variant-和关联数据，图片，标题，ID"><a href="#获取-variant-和关联数据，图片，标题，ID" class="headerlink" title="获取 variant 和关联数据，图片，标题，ID"></a><strong>获取 variant 和关联数据，图片，标题，ID</strong></h4><p>这里我规定 多重属性 的 第一个option 是 image 第二个是 size，因为我的项目选项是固定的，可以这样做，当然你也可以写成灵活的，只是这样你需要做的工作量比较多而已</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for variant in product.variants %&#125;</span><br><span class="line">  &#123;% assign id &#x3D; variant.id %&#125;</span><br><span class="line">  &#123;% assign title &#x3D; variant.title %&#125;</span><br><span class="line">  &#123;% assign image &#x3D; variant.image %&#125;</span><br><span class="line">  &#123;% assign size &#x3D; variant.option2 %&#125;</span><br><span class="line">&#123;% endfor%&#125;</span><br></pre></td></tr></table></figure><h4 id="获取选项数据"><a href="#获取选项数据" class="headerlink" title="获取选项数据"></a>获取选项数据</h4><p>这里可以根据我根据我的项目需求进行获取，我的项目需求可以简单的认为只有 图片 和 尺寸<br>图片上面已经有了，所以这里我只需要得到 size。这里是有条件，要求你在上传产品的时候设置多重属性的时候就要对应名称，我这里是 image 和 color。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 获取 size</span><br><span class="line">&#123;% for value in product.options_by_name[&#39;size&#39;].values %&#125;</span><br><span class="line">  &lt;li&gt;&#123;&#123; value &#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h4><p>数据绑定还是比较简单的，讲获取到的数据通过 data- 绑定在dom上就好了，后面我们通过js来读取即可，可根据自己需要进行绑定</p><p>对于大部分人来说可能更加喜欢通过 js 渲染数据。这里给大家提供以下如何在js中获取产品数据的代码，如果你需要考虑SEO,那你就的主意一下，因为爬虫是无法读取js渲染的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 记得必须是在产品页面下才有效 需要访问得到 &#123;&#123; product &#125;&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  &#x2F;&#x2F; 获取 product 的json数据</span><br><span class="line">  let product &#x3D; &#123;&#125;;</span><br><span class="line">  product.data &#x3D; &#123;&#123; product | json &#125;&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;获取产品数据&quot;&gt;&lt;a href=&quot;#获取产品数据&quot; class=&quot;headerlink&quot; title=&quot;获取产品数据&quot;&gt;&lt;/a&gt;获取产品数据&lt;/h3&gt;&lt;h4 id=&quot;获取标题&quot;&gt;&lt;a href=&quot;#获取标题&quot; class=&quot;headerlink&quot; title=&quot;获</summary>
      
    
    
    
    <category term="shopify" scheme="http://yoursite.com/categories/shopify/"/>
    
    
  </entry>
  
  <entry>
    <title>shopify 图片CDN 详解</title>
    <link href="http://yoursite.com/2020/12/19/shopify/shopify%20%E5%9B%BE%E7%89%87CDN%20%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/12/19/shopify/shopify%20%E5%9B%BE%E7%89%87CDN%20%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-12-19T12:03:49.356Z</published>
    <updated>2020-12-24T15:58:41.195Z</updated>
    
    <content type="html"><![CDATA[<p>对于刚入手shopify 的小白来说，shopify 图片是一个急需了解的点。<br>对于大企业来说资源管理是必须优化到极致的，目前对于资源管理比较有效的方式是 CDN 资源管理。shopify 自然也会为它的资源搭建CDN服务，而对图片则做图片CDN，图片CDN与传统CDN的区别在于，它是专门为图片做优化的，通常包含缩放、格式转换等。你可以把它看成是一个API，通过传入尺寸、质量、格式等参数，获取到对应的图片内容。这也使得我们在使用上非常方便，适用于多种不同的场景。</p><p>下面我们则针对 shopify 图片CDN的使用做讲解</p><h2 id="Shopify-图片的参数使用"><a href="#Shopify-图片的参数使用" class="headerlink" title="Shopify 图片的参数使用"></a>Shopify 图片的参数使用</h2><p>下面花括号里面使用的 [image 是指 shopify 的图片对象](<a class="link"   href="https://shopify.dev/docs/themes/liquid/reference/objects/image%EF%BC%89" >https://shopify.dev/docs/themes/liquid/reference/objects/image）<i class="fas fa-external-link-alt"></i></a></p><h3 id="图片尺寸参数"><a href="#图片尺寸参数" class="headerlink" title="图片尺寸参数"></a>图片尺寸参数</h3><p>您可以为图像的宽度和高度指定精确的像素尺寸，最大5760 x 5760 px。除非<a class="link"   href="https://shopify.dev/docs/themes/liquid/reference/filters/url-filters/#crop" >裁剪<i class="fas fa-external-link-alt"></i></a>图像，否则图像的原始长宽比将保留。（无论您指定什么尺寸，都不能将图像的大小调整为大于其原始尺寸。如果大于原始尺寸则返回原始尺寸大下的图片）</p><h4 id="固定尺寸"><a href="#固定尺寸" class="headerlink" title="固定尺寸"></a>固定尺寸</h4><p>根据设置的 宽高 返回对应尺寸的图片</p><p><strong>格式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#39;&lt;宽&gt;x&lt;高&gt;&#39; &#125;&#125; </span><br></pre></td></tr></table></figure><p><strong>输入</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#x27;720x720&#x27; &#125;&#125; </span><br></pre></td></tr></table></figure><p><strong>CDN</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.shopify.com/s/files/1/1183/1048/products/boat-shoes_720x720.jpeg</span><br></pre></td></tr></table></figure><h4 id="英文名称尺寸"><a href="#英文名称尺寸" class="headerlink" title="英文名称尺寸"></a>英文名称尺寸</h4><p>与固定尺寸一样的意义，只不过，值使用英文名称替代</p><table><thead><tr><th>英文名称</th><th>示例</th><th>返回尺寸</th></tr></thead><tbody><tr><td>&lt;空&gt;</td><td>&#123;&#123; image | img_url &#125;&#125;</td><td>100x100</td></tr><tr><td>small</td><td>&#123;&#123;image | img_url : ‘small’ &#125;&#125;</td><td>100x100</td></tr><tr><td>medium</td><td>&#123;&#123; image | img_url: ‘medium’ &#125;&#125;</td><td>240x240</td></tr><tr><td>large</td><td>&#123;&#123; image | img_url: ‘large’ &#125;&#125;</td><td>480x480</td></tr><tr><td>master</td><td>&#123;&#123; image | img_url: ‘master’ &#125;&#125;</td><td>原始尺寸</td></tr></tbody></table><h4 id="仅宽或高尺寸"><a href="#仅宽或高尺寸" class="headerlink" title="仅宽或高尺寸"></a>仅宽或高尺寸</h4><p>您只能指定宽度或高度，Shopify会根据原始图像的尺寸计算其他尺寸，并<strong>保持原始图像的长宽比</strong>：</p><p>例子 图片尺寸为 400x300</p><p><strong>仅宽度</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#x27;200x&#x27; &#125;&#125; //返回 图片尺寸为 200x150</span><br></pre></td></tr></table></figure><p><strong>仅高度</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#x27;x150&#x27; &#125;&#125; //返回 图片尺寸为 200x150</span><br></pre></td></tr></table></figure><h3 id="图片剪切参数-crop"><a href="#图片剪切参数-crop" class="headerlink" title="图片剪切参数 crop"></a>图片剪切参数 crop</h3><p>您可以指定<code>crop</code>参数以确保生成的图像的尺寸与请求的尺寸匹配。如果整个图像都不适合您要求的尺寸，则该<code>crop</code>参数指定要显示图像的哪一部分。有效选项包括：<code>top</code>、<code>centent</code>、<code>bottom</code>、<code>left</code>、<code>right</code></p><p>列子 图片 宽高 为 100x300，（按竖直方式平分为三个，分别为 上中下）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#x27;100x100&#x27;, crop: &#x27;bottom&#x27; &#125;&#125; // 显示部分 为 下</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><h5 id="原图-九宫格"><a href="#原图-九宫格" class="headerlink" title="原图 - 九宫格"></a><strong>原图</strong> - 九宫格</h5><p>尺寸：900x900</p><p><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x300.jpg" alt="img"></p><h5 id="1、不带-crop，则根据固定尺寸原则，返回原始尺寸"><a href="#1、不带-crop，则根据固定尺寸原则，返回原始尺寸" class="headerlink" title="1、不带 crop，则根据固定尺寸原则，返回原始尺寸"></a><strong>1、不带 crop，则根据固定尺寸原则，返回原始尺寸</strong></h5><p><strong>输入</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#x27;900x300&#x27; &#125;&#125; </span><br></pre></td></tr></table></figure><p><strong>CDN</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_900x300.jpg</span><br></pre></td></tr></table></figure><p><strong>效果图</strong></p><p><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_900x300.jpg" alt="img"></p><h5 id="2、带-crop，-图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分"><a href="#2、带-crop，-图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分" class="headerlink" title="2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分"></a>2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分</h5><p><strong>输入</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;top&#x27; &#125;&#125; </span><br><span class="line">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;center&#x27;&#125;&#125; </span><br><span class="line">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;bottom&#x27;&#125;&#125; </span><br><span class="line">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;left&#x27; &#125;&#125; </span><br><span class="line">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;center&#x27;&#125;&#125; </span><br><span class="line">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;right&#x27;&#125;&#125; </span><br></pre></td></tr></table></figure><p><strong>CDN</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_top.jpg</span><br><span class="line">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_center.jpg</span><br><span class="line">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_bottom.jpg</span><br><span class="line">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_left.jpg</span><br><span class="line">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_cen300x150</span><br><span class="line">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_right.jpg</span><br></pre></td></tr></table></figure><p><strong>图片</strong></p><table><thead><tr><th>300x100 top</th><th>300x100 center</th><th>300x100 right</th></tr></thead><tbody><tr><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_top.jpg" alt="img"></td><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_center.jpg" alt="img"></td><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_bottom.jpg" alt="img"></td></tr></tbody></table><table><thead><tr><th>100x300 left</th><th>100x300 center</th><th>100x300 right</th></tr></thead><tbody><tr><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_left.jpg" alt="img"></td><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_center.jpg" alt="img"></td><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_right.jpg" alt="img"></td></tr></tbody></table><h3 id="图片比例（倍数）参数-scale"><a href="#图片比例（倍数）参数-scale" class="headerlink" title="图片比例（倍数）参数 scale"></a>图片比例（倍数）参数 scale</h3><p><em>谷歌翻译 为 亲密度，但是从效果来看我觉得翻译为比例或者倍数更加恰当</em></p><p>该<code>scale</code>参数使您可以指定图像的像素密度。（返回img_url设置的尺寸的scale倍数的图片尺寸，这里我可能解释的不是很清楚，我们还是直接看示例）</p><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><p><strong>输入</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url: &#x27;150x150&#x27; &#125;&#125;</span><br><span class="line">&#123;&#123; image | img_url: &#x27;150x150&#x27;, scale: 2 &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>CDN</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg</span><br><span class="line">//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg</span><br></pre></td></tr></table></figure><p><strong>效果图</strong></p><table><thead><tr><th>&#123;&#123; image | img_url: ‘150x150’ &#125;&#125;</th><th>&#123;&#123; image | img_url: ‘150x150’, scale: 2 &#125;&#125;</th></tr></thead><tbody><tr><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg" alt="img"></td><td><img src="https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg" alt="img"></td></tr><tr><td>图片尺寸：150x150</td><td>图片尺寸：300x300</td></tr></tbody></table><p>根据上述例子，相信你应该能明白 <strong>scale</strong> 的作用了</p><h3 id="图片格式参数-format"><a href="#图片格式参数-format" class="headerlink" title="图片格式参数 format"></a>图片格式参数 format</h3><p>该<code>format</code>参数使您可以指定要用于显示图像的文件格式。有效选项包括：<code>jpg</code>、<code>pjpg</code>(<a class="link"   href="https://en.wikipedia.org/wiki/JPEG#JPEG_compression" >渐进式JPEG<i class="fas fa-external-link-alt"></i></a>。浏览器以逐渐提高的质量加载全尺寸的渐进式JPEG，而不是像传统JPEG那样从上到下加载完整质量的图像。)</p><p>Shopify可以为您执行以下格式转换：PNG 转 JPG、PNG 转 PJPG、JPG 转 PJPG</p><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><p><strong>输入</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; image | img_url, format: &#x27;jpg&#x27;  &#125;&#125; </span><br><span class="line">&#123;&#123; image | img_url, format: &#x27;pjpg&#x27; &#125;&#125;</span><br><span class="line">&#123;&#123; image | img_url, format: &#x27;pjpg&#x27;  &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>CDN</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* PNG 转 JPG */</span></span><br><span class="line">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.png.jpg </span><br><span class="line"><span class="comment">/* PNG 转 PJPG */</span></span><br><span class="line">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.png.jpg</span><br><span class="line"><span class="comment">/* JPG 转 PJPG */</span></span><br><span class="line">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.jpg</span><br></pre></td></tr></table></figure><p><strong>效果图</strong></p><table><thead><tr><th>PNG 转 JPG</th><th>PNG 转 PJPG</th><th>JPG 转 PJPG</th></tr></thead><tbody><tr><td>&#123;&#123; image | img_url, format: ‘jpg’ &#125;&#125;&#125;</td><td>&#123;&#123;image | img_url, format: ‘pjpg’ &#125;&#125;</td><td>&#123;&#123;image | img_url, format: ‘pjpg’ &#125;&#125;</td></tr><tr><td><img src="https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png" alt="img"></td><td><img src="https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png" alt="img"></td><td><img src="https://img-blog.csdnimg.cn/img_convert/af27185e6344fa9e237d57f87d48f858.png" alt="img"></td></tr><tr><td><img src="https://img-blog.csdnimg.cn/img_convert/70c761fd11c6c783542b745340ba4b0a.png" alt="img"></td><td><img src="https://img-blog.csdnimg.cn/img_convert/0369ae7f97d6b7011609e8d4ec8ec295.png" alt="img"></td><td><img src="https://img-blog.csdnimg.cn/img_convert/6c9061c123da783eeabd183d1db2ba45.png" alt="img"></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对于刚入手shopify 的小白来说，shopify 图片是一个急需了解的点。&lt;br&gt;对于大企业来说资源管理是必须优化到极致的，目前对于资源管理比较有效的方式是 CDN 资源管理。shopify 自然也会为它的资源搭建CDN服务，而对图片则做图片CDN，图片CDN与传统CD</summary>
      
    
    
    
    <category term="shopify" scheme="http://yoursite.com/categories/shopify/"/>
    
    
  </entry>
  
  <entry>
    <title>解决跨域</title>
    <link href="http://yoursite.com/2020/12/19/Vue/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2020/12/19/Vue/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/</id>
    <published>2020-12-19T12:03:49.353Z</published>
    <updated>2020-12-24T16:02:03.778Z</updated>
    
    <content type="html"><![CDATA[<h3 id="生产环境和开发环境一次解决跨域问题"><a href="#生产环境和开发环境一次解决跨域问题" class="headerlink" title="生产环境和开发环境一次解决跨域问题"></a>生产环境和开发环境一次解决跨域问题</h3><p>在config 文件夹里面新建一个 api.config.js 配置文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const isPro = Object.is(process.env.NODE_ENV, <span class="string">&#x27;production&#x27;</span>)</span><br><span class="line"></span><br><span class="line">const baseUrl=isPro ? <span class="string">&#x27;https://api.iqimeng.com&#x27;</span> : <span class="string">&#x27;api/&#x27;</span></span><br><span class="line">export default baseUrl;</span><br></pre></td></tr></table></figure><h4 id="然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀"><a href="#然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀" class="headerlink" title="然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀"></a>然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import apiConfig from <span class="string">&#x27;../config/api.config&#x27;</span></span><br><span class="line"></span><br><span class="line">import Axios from <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">import VueAxios from <span class="string">&#x27;vue-axios&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios, Axios)</span><br><span class="line">Axios.defaults.baseURL = apiConfig</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;生产环境和开发环境一次解决跨域问题&quot;&gt;&lt;a href=&quot;#生产环境和开发环境一次解决跨域问题&quot; class=&quot;headerlink&quot; title=&quot;生产环境和开发环境一次解决跨域问题&quot;&gt;&lt;/a&gt;生产环境和开发环境一次解决跨域问题&lt;/h3&gt;&lt;p&gt;在config 文件</summary>
      
    
    
    
    <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
    <category term="采坑" scheme="http://yoursite.com/tags/%E9%87%87%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>vue中使用H5的audio</title>
    <link href="http://yoursite.com/2020/12/19/Vue/vue%E4%B8%AD%E4%BD%BF%E7%94%A8H5%E7%9A%84audio/"/>
    <id>http://yoursite.com/2020/12/19/Vue/vue%E4%B8%AD%E4%BD%BF%E7%94%A8H5%E7%9A%84audio/</id>
    <published>2020-12-19T12:03:49.336Z</published>
    <updated>2020-12-24T16:04:08.608Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>H5audio标签有许多事件</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/20190127152315247-20201106152816056-20201106153001803.png"></p><p> 在应用到vue中后的使用如下：</p><p>比如在使用onplay时，要去掉on，用@play派发时间，在methods中定义方法执行体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;audio src&#x3D;&quot;..&#x2F;..&#x2F;static&#x2F;1.mp3&quot; @play&#x3D;&quot;ready&quot; @pause&#x3D;&quot;pause&quot; controls&gt;&lt;&#x2F;audio&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &#39;musci&#39;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            ready()&#123;</span><br><span class="line">                console.log(&quot;play click&quot;);</span><br><span class="line">            &#125;,</span><br><span class="line">            pause()&#123;</span><br><span class="line">                console.log(&quot;pause click&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;H5audio标签有许多事件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/markruan/clo</summary>
      
    
    
    
    <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
  </entry>
  
</feed>
