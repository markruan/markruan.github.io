{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/particles.min.js","path":"js/particles.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/animated.styl","path":"css/layout/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/basic.styl","path":"css/layout/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/keep-theme.styl","path":"css/layout/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/markdown.styl","path":"css/layout/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/variables.styl","path":"css/layout/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/codeblock/code-theme.styl","path":"css/layout/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/codeblock/copy-code.styl","path":"css/layout/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/common/codeblock/highlight.styl","path":"css/layout/common/codeblock/highlight.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1606994545485},{"_id":"source/_posts/.DS_Store","hash":"e7477094eee43d29b5e28493663f6bf8f5f66cb6","modified":1608379389092},{"_id":"source/_posts/值得纪念的一天.md","hash":"700693fcb8030655c38eacfbdbd6996d22405323","modified":1608825807326},{"_id":"source/tag/index.md","hash":"7488c5d70941d8d268b37272e0b8a6f004c79364","modified":1608379429393},{"_id":"source/_data/links.yml","hash":"6a87c11d24328f2af59b7a7ab8d6d261144eb3cd","modified":1608988942092},{"_id":"source/_posts/study/Css 打字机效果，文字循环 逐个出现，逐个删除.md","hash":"21b2387882e5a2ea29f183fca5aa57576262cfb3","modified":1609039849537},{"_id":"source/links/index.md","hash":"bb6df286c1069e49fcd8ce7ad0b98476112cd915","modified":1608991699075},{"_id":"source/_posts/study/Hexo 中 Markdown 特殊字符的处理方法.md","hash":"687b69859e87551bbc53daf75e74ebb96e1c9519","modified":1608825645152},{"_id":"source/_posts/study/X3 photo gallery 授权破解.md","hash":"8708d79b07458f1b91572dab4ee33dc0c98c64e0","modified":1608825708487},{"_id":"source/_posts/study/github 使用记录.md","hash":"ef04bfeffe3194559a42084b43ab37972dd13d39","modified":1608825629027},{"_id":"source/_posts/study/particles.js.md","hash":"e2eea51a25f41f27a7ba2867f522e14930f80b04","modified":1608825675549},{"_id":"source/_posts/study/typora使用.md","hash":"0aba01d8efe29c4812fe464ed2e99a89a619bbd6","modified":1608825690377},{"_id":"source/_posts/study/利用css媒体查询media.md","hash":"7150094ce82a887b577ba205532a88da270a7fb5","modified":1608825614222},{"_id":"source/CNAME","hash":"27b180181ea7ef6f23538d3aff071be01c8f33b9","modified":1608379429335},{"_id":"source/categories/index.md","hash":"3b64bfd029dda36e8a244fdb9cf1fd79e1c0df9c","modified":1608379429391},{"_id":"source/_posts/study/MAC升级Nodejs和Npm到最新版.md","hash":"6a388f216187ff6000aa1706e8a77f0059002c40","modified":1608825660455},{"_id":"source/_posts/Vue/解决跨域.md","hash":"b1131487958453b3b8a44606a8ac0453dc50e391","modified":1608825723778},{"_id":"source/_posts/shopify/shopify产品页面数据获取.md","hash":"e30648bea48d8a653684b1088dfc5cd67ff0e75d","modified":1608825874942},{"_id":"source/_posts/shopify/shopify 图片CDN 详解.md","hash":"4cb4e12ccb542edcfa0d8693f3dc2cbf209947e1","modified":1608825521195},{"_id":"source/_posts/shopify/为什么你的Shopify店铺没有成功.md","hash":"b239a0bca87e9632721c734501ac4867abd4320b","modified":1608825842402},{"_id":"source/_posts/shopify/shopify调用配置信息.md","hash":"c76a7945e09774e3fc6801d3c4c197294d5847e0","modified":1608825555051},{"_id":"source/_posts/Vue/vue中使用H5的audio.md","hash":"5e1e470dedfa29af2e8310bebb1a388ef82b9f7c","modified":1608825848608},{"_id":"source/_posts/shopify/shopify模板开发学习-自定义配置文件.md","hash":"2093e8ba7e5f34f78bab16f6875978d9cc27bddc","modified":1608825594077},{"_id":"source/_posts/shopify/如何创建一个Shopify模版本地开发环境.md","hash":"8bb10c019ea96b415e2b014e1f3d12d8e2b826f3","modified":1608825471360},{"_id":"themes/keep/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":1608379429394},{"_id":"themes/keep/.gitignore","hash":"b49daa26b8121cc0c7074d61b377c8e7e0880d03","modified":1608379429395},{"_id":"themes/keep/LICENSE","hash":"98b8bd28e54ab36ee12396687dfdf88807c6cfdd","modified":1608379429400},{"_id":"themes/keep/README.md","hash":"4ad1a25fc0e243c388f8cf700277ec8eb0cb50f9","modified":1608379429402},{"_id":"themes/keep/.DS_Store","hash":"92a2e8e6d339597ca69b94f512c93a33b869bc85","modified":1608465153894},{"_id":"themes/keep/package.json","hash":"18619111bd7e8c7beaa5eba712855509518f3bea","modified":1608379429511},{"_id":"themes/keep/_config.yml","hash":"9494dba0c92ec2ec127e878508e4181124957eb3","modified":1609063137158},{"_id":"themes/keep/docs/README_zh-CN.md","hash":"70e4faf7b86790ce5e338f22dfe75c49f15aaff1","modified":1608379429408},{"_id":"themes/keep/languages/zh-CN.yml","hash":"bf67013be73d38d3977d6e7197d3c5af5a2b520d","modified":1608379429411},{"_id":"themes/keep/languages/en.yml","hash":"70b5052c0e12955cc54dc417d0a37ce2764bee1d","modified":1608379429410},{"_id":"themes/keep/layout/archive-content.ejs","hash":"cfa8f29b8863534f407136ea3deb18a4b2ff722c","modified":1608379429476},{"_id":"themes/keep/source/.DS_Store","hash":"c8f76826efff937145986ec467ec63fe7a65a315","modified":1608991530034},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1608379429477},{"_id":"themes/keep/layout/article-content.ejs","hash":"ed349d23f2ae7c4ec448a33e43656b9cc3bdf637","modified":1608379429479},{"_id":"themes/keep/layout/.DS_Store","hash":"134283aa220e3c5cf4b3587c9b8bd48542f3f751","modified":1608465153903},{"_id":"themes/keep/layout/category-content.ejs","hash":"f11fc5c372957f6efc6187d49a8020d098420647","modified":1608379429480},{"_id":"themes/keep/layout/category-list.ejs","hash":"a9390b25238332417fd554d32563a4d9999db90f","modified":1608379429482},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1608379429492},{"_id":"themes/keep/layout/home-content.ejs","hash":"79e16c3baa6569afbc07ac6a5d2e3f37b273016a","modified":1608379429493},{"_id":"themes/keep/layout/index.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1608379429494},{"_id":"themes/keep/layout/layout.ejs","hash":"0423aa5c0af2fd6fb80665840359b69be678b5d0","modified":1608379429495},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1608379429508},{"_id":"themes/keep/layout/tag-content.ejs","hash":"9409aa1d954bdb76979bb839d3d185ec8df828be","modified":1608379429508},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1608379429509},{"_id":"themes/keep/layout/page.ejs","hash":"039036eb9c64bbbea399cca0016c978de9205655","modified":1608379429506},{"_id":"themes/keep/scripts/use-source-data.js","hash":"21f6a49e47b7e4d792d67503079ea5b509f18311","modified":1608379429523},{"_id":"themes/keep/scripts/.DS_Store","hash":"bb7d1de7f26e699a3abc0c07fe6097c4bacb948b","modified":1608465153899},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1608379429525},{"_id":"themes/keep/source/css/style.styl","hash":"a88c443d5ff7d02c3b95269c5e5f0e5c3938e142","modified":1608379429589},{"_id":"themes/keep/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1608991464344},{"_id":"themes/keep/source/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1608379429593},{"_id":"themes/keep/source/images/avatar.jpg","hash":"abda20e109a426044ad43dcb36e523976ab412af","modified":1608991220677},{"_id":"themes/keep/source/js/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1608110312890},{"_id":"themes/keep/source/js/back2top.js","hash":"cd226f2e01a84c74e859dfd08ca1f5146011ae8b","modified":1608379429596},{"_id":"themes/keep/source/js/code-copy.js","hash":"68587d2b5af9c33a762d76ed7692089580a74d0f","modified":1608379429596},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"4d58ef9566f1785286a5ee5bc21c2063b117fe1b","modified":1608379429597},{"_id":"themes/keep/source/js/header-shrink.js","hash":"1cf440c53c202ffe120301766b90b3b2cca89c36","modified":1608379429598},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"d12ff633952d8ad469e659218617db3c9f199f9e","modified":1608379429600},{"_id":"themes/keep/source/js/local-search.js","hash":"e161108a7d315816cd5602a42d1477f93902e0c5","modified":1608379429603},{"_id":"themes/keep/source/js/main.js","hash":"b04c5268202228427e63ae901ef3d2ccd0d676f4","modified":1608379429604},{"_id":"themes/keep/source/js/particles.min.js","hash":"d897ab39b869d4c3f8e55aca3cc970933eb933d1","modified":1608379429605},{"_id":"themes/keep/source/js/toc.js","hash":"cdeba4d4b6c1a63b5541ee59cdf78efa166d71a4","modified":1608379429606},{"_id":"themes/keep/source/js/utils.js","hash":"e022617752b2cab6a4f0dccd942a7211212f1f0d","modified":1608379429607},{"_id":"themes/keep/layout/_partial/.DS_Store","hash":"2ef9daa0cae66ad46453c260781e18398779b6fa","modified":1608465153896},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"c8382072149b5472f9a829c0cf89c13716114ec1","modified":1608379429419},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"77e13720374efb902ee3d4d04d13b62de033a3ae","modified":1608379429422},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"56878ad472a507ab8bfe1d2d0fb433b7a1f32a37","modified":1608379429424},{"_id":"themes/keep/layout/_partial/empty-page.ejs","hash":"58808aa54eb99a61c497f6c1ce128ecc9b29cbf7","modified":1608989729258},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"c948c254ae37cbf875fbe15368f0578a12558430","modified":1609056970317},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"bf5ff0351bc91419baf05b5ec5408a777ca70eca","modified":1608379429442},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"675ad7fa026bb46301b71add1029a17dc47104f7","modified":1609039769131},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"070ada9a66bb570388e0cfae4ea16af098a84d91","modified":1608379429445},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"780141b22d0153473115988311b80b59341be85d","modified":1608379429448},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"9fc7c866091c96c8374149de6d2e83453f5f70be","modified":1609062656707},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"a1e703bebe045555f01e29c9b58abd9233be5ea1","modified":1608379429454},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"b870795770caf1fdf74d53903488011ace620dec","modified":1608379429457},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"cfd4d9a30bd20ee0750b79226cb94562439013bf","modified":1608379429459},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ed124c58b11cd2f86205232e69e7b29e901c0b6a","modified":1608379429462},{"_id":"themes/keep/layout/_partial/side-tools-container.ejs","hash":"ba1a0f41bcecee7f9305703a95b435d5accdde72","modified":1608379429471},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"01814ef3f507edfcb6f464cd7d4dbbbdd0a4701f","modified":1608379429473},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"aefc9db612c0fceb4a02fdbed9fa47a6c4e144b5","modified":1608379429474},{"_id":"themes/keep/layout/_partial/tools.ejs","hash":"312f0bf314c3e3dc00cec3295388b8c3b4c6bc7f","modified":1608379429475},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1608379429626},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1608379429641},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1608379429642},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1608379429642},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"4b7cb9eaddd2119ff06b1eb3fc6aad3ab38178a2","modified":1608379429514},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"7909d206b645f0c63545dc9d66e10a8235c29daf","modified":1608379429521},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"b39cfa42d156b7ad4d4e8246b6f934cd51d8db55","modified":1608379429513},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"8a62d9f588fc199662a6dcb863c9ba1de3b3034c","modified":1608379429561},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"40075490d621efb4bc4f18bd61a0d7d4a3331070","modified":1608379429563},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"6f91cad6e28b7bdcc716e8d5e1e4bbaac2bf53a2","modified":1608379429564},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"409edd107f4be72326c9cb778db232bf16eb093b","modified":1608379429565},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"69b5c6468c183805e1388a2e87d924ea85af6669","modified":1609040104302},{"_id":"themes/keep/source/css/layout/page.styl","hash":"2f5d62f4f83807a3fe92210f30a5f0d91a9e155f","modified":1608379429581},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"9ffc6d226461afc9f4d905c774e30804df7a8c66","modified":1608379429583},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1608379429602},{"_id":"themes/keep/layout/_partial/aplayer/aplayer.ejs","hash":"0771faec6f6de02d1ab10f3485610e86246913df","modified":1608379429413},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"ea8560e3d8c226f3e14138237f444c4056c2152e","modified":1608379429425},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"7bcfad63ab79db98f34488357bbe57bff8094248","modified":1608379429427},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"bd3ac892bb8cc35037f8b89857f052135fdc998a","modified":1608379429428},{"_id":"themes/keep/layout/_partial/particles/particles.ejs","hash":"0843e7143a27309cbf2a68718a72f0e420f0906d","modified":1609042248765},{"_id":"themes/keep/layout/_partial/text/text.ejs","hash":"d504cee1d94e04524ff3f4674abdeb091623be93","modified":1608969827670},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"096091a6f33ec687788cb67d9976322fc9f809c7","modified":1608379429527},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"327def6e0fc61aabe86866762f02db5be3693e7b","modified":1608379429528},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"9a35b617fb196c7f2b5169bff9a64fa4f5648adf","modified":1608379429529},{"_id":"themes/keep/source/css/layout/_partial/empty-page.styl","hash":"59a0a0301a5599d4d0b0540cb2268d57d44dad0c","modified":1608990468011},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"ac374492e9c3b0d7c44664f2e7b3ec2449cd7e26","modified":1608379429542},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"a04e930580ce236ca1f46da9188ae2cd987b0d11","modified":1608379429544},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"f250d54457d1160f9635470d1bf787325ccddddd","modified":1608379429545},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"8fce59d64a2dab0f6dedf95bda446079835e66f8","modified":1608379429547},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"eb1c3fcda2ed6f7da75563f8b383eeab933cbf79","modified":1608379429550},{"_id":"themes/keep/source/css/layout/_partial/side-tools-container.styl","hash":"0ba594c4eb6374eb106aed9e0b1be23bb44af2ac","modified":1608379429557},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"9a56dfa5e49ec13518fe9b944f4f55752411cdd9","modified":1608379429558},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"89d461746b2d89d2dbd0aba24963851c88412431","modified":1608379429559},{"_id":"themes/keep/source/css/layout/_partial/tools.styl","hash":"6d9d432f5bd05b282cadecc7bc476040b0b6c21b","modified":1608379429560},{"_id":"themes/keep/source/css/layout/common/animated.styl","hash":"3070bf1bec068660de760821d0c98e09e97b36d2","modified":1608379429569},{"_id":"themes/keep/source/css/layout/common/basic.styl","hash":"8e6252fb2c1c4c91231a488162dc57925ace1dfa","modified":1608379429571},{"_id":"themes/keep/source/css/layout/common/keep-theme.styl","hash":"cb0d4c8d8fdb35a6c2b53b940ebc9e7ac75f1407","modified":1608379429576},{"_id":"themes/keep/source/css/layout/common/markdown.styl","hash":"16be5818bd9fe487705dec9710b05fadd0123fd7","modified":1608379429577},{"_id":"themes/keep/source/css/layout/common/variables.styl","hash":"50c149db2195d2babb740060f1cf48eccf1f8284","modified":1608379429578},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"e9cac2e6dfba8e2c3d92d700188b23b97eb8cd83","modified":1608379429555},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"fd316d85c864d00c1af62d71aaa82d6d516d544e","modified":1608379429531},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"b538919d22f63927799a9140b656001c0e15d180","modified":1608379429535},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"3b499c629e16615b9f88140d3dfdca8c001a05ba","modified":1608379429537},{"_id":"themes/keep/source/css/layout/common/codeblock/code-theme.styl","hash":"8c0551d53e073384caa8351fdbcbad0d3e744860","modified":1608379429573},{"_id":"themes/keep/source/css/layout/common/codeblock/copy-code.styl","hash":"581b2287fb2c9b8a9cf03fe710bb43c8703321c3","modified":1608379429574},{"_id":"themes/keep/source/css/layout/common/codeblock/highlight.styl","hash":"9d4561e0dad423c85c0d1c9bb6bc226725f57c7e","modified":1608379429575},{"_id":"themes/keep/source/images/favicon.ico","hash":"fa9576103076b2742a80dcd467577b9fe0ac9dab","modified":1608379429595},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1608379429625},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1608379429625},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1608379429680},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1608379429681},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1608379429610},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1608379429624},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1608379429628},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1608379429658},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1608379429679},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1608379429621},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1608379429675},{"_id":"public/atom.xml","hash":"956a361ce3b2bd448e23e72b431184ce7cad35ab","modified":1609040168150},{"_id":"public/content.json","hash":"b32efbe12dba32a5cea3aa072ddc1c0b0d55b14e","modified":1609040168150},{"_id":"public/search.xml","hash":"c395c598338471766d6cd07fff62f0ae62f2c87a","modified":1609040168150},{"_id":"public/categories/index.html","hash":"c30c6d2334aa90ff46b6e7cc65514cc1502610f2","modified":1609060470855},{"_id":"public/tag/index.html","hash":"e6761ace8e39a976904f07fe97ee848b4eda8f36","modified":1609060470855},{"_id":"public/links/index.html","hash":"07fd168391f4fdf9c4278fa348dab312010c0027","modified":1609060470855},{"_id":"public/2020/12/24/study/MAC升级Nodejs和Npm到最新版/index.html","hash":"c056bcc353cac25431f173b65509d98eb24f065a","modified":1609119100424},{"_id":"public/2020/12/19/值得纪念的一天/index.html","hash":"98ddea5354d182e1ee39f455d043eaae3a1bc723","modified":1609119100424},{"_id":"public/2020/12/19/study/X3 photo gallery 授权破解/index.html","hash":"ae96f358415032bac72cfe1175dfa92ccfc5f213","modified":1609119100424},{"_id":"public/2020/12/19/Vue/vue中使用H5的audio/index.html","hash":"91f6f58620c2bb40007deeeb3ccd8604323466f6","modified":1609119100424},{"_id":"public/archives/index.html","hash":"c03e490212a421d217b3b6fad05ca8c9dc826001","modified":1609060470855},{"_id":"public/archives/page/2/index.html","hash":"c03e490212a421d217b3b6fad05ca8c9dc826001","modified":1609060470855},{"_id":"public/archives/2020/index.html","hash":"9c4c4c4b27e8b54aa1eb091126457ef72ac801f7","modified":1609060470855},{"_id":"public/archives/2020/page/2/index.html","hash":"9c4c4c4b27e8b54aa1eb091126457ef72ac801f7","modified":1609060470855},{"_id":"public/archives/2020/12/index.html","hash":"8d6e4e3a994908285001142d568b180c5bc09851","modified":1609060470855},{"_id":"public/archives/2020/12/page/2/index.html","hash":"8d6e4e3a994908285001142d568b180c5bc09851","modified":1609060470855},{"_id":"public/categories/study/index.html","hash":"ee3343f5eb376e2643ae8264536e4612e9ffc268","modified":1609060470855},{"_id":"public/categories/Vue/index.html","hash":"aba507d5556777f39282cfd8724acafeca1f344e","modified":1609060470855},{"_id":"public/categories/shopify/index.html","hash":"fed7bddba1d45f5bb79efeb0e4d4d4e316e8651b","modified":1609060470855},{"_id":"public/tags/心情/index.html","hash":"d21b1612f3710204a161446476b7d25e793c4f6d","modified":1609060470855},{"_id":"public/tags/css/index.html","hash":"8b98b07f64571184344606598a013f26652456a9","modified":1609060470855},{"_id":"public/tags/特效/index.html","hash":"51f26099032db704839cb0cd62de1219d5062fa1","modified":1609060470855},{"_id":"public/tags/html/index.html","hash":"caf42c9e6a0fb31925602731bdc718f32f4a242c","modified":1609060470855},{"_id":"public/tags/采坑/index.html","hash":"d3d364821c2fbbdf65edf68142b20bf71feefc18","modified":1609060470855},{"_id":"public/2020/12/25/study/Css 打字机效果，文字循环 逐个出现，逐个删除/index.html","hash":"7e1ac21d0027431f2401fa8f55e88a5df86f22d5","modified":1609119100424},{"_id":"public/2020/12/24/study/利用css媒体查询media/index.html","hash":"360ea1050720cb44ee0309a67bf7143b08a9d514","modified":1609119100424},{"_id":"public/2020/12/19/study/github 使用记录/index.html","hash":"e9fe581a3b893e420dc3f465024144ce0b7e8cb6","modified":1609119100424},{"_id":"public/2020/12/19/study/typora使用/index.html","hash":"630bbe9b506073c4f096b3b534608ab49364c5f5","modified":1609119100424},{"_id":"public/2020/12/19/study/particles.js/index.html","hash":"885a1bca3ac298b46a55c6f30580cc399da3439a","modified":1609119100424},{"_id":"public/2020/12/19/study/Hexo 中 Markdown 特殊字符的处理方法/index.html","hash":"262ce47a89f4e6ac29c42f713861653d2504d1ce","modified":1609119100424},{"_id":"public/2020/12/19/shopify/如何创建一个Shopify模版本地开发环境/index.html","hash":"c254fa6c4a5751c356eaabaa70ce546da3e73e09","modified":1609119100424},{"_id":"public/2020/12/19/shopify/为什么你的Shopify店铺没有成功/index.html","hash":"2092b1d979b4110e23bf93dd5d009d8440c83ad3","modified":1609119100424},{"_id":"public/2020/12/19/shopify/shopify调用配置信息/index.html","hash":"7eab0e71d1963656582389aea47599618666a2fb","modified":1609119100424},{"_id":"public/2020/12/19/shopify/shopify模板开发学习-自定义配置文件/index.html","hash":"b59c1cc2494badc028549cb888c9bb2f7f76143e","modified":1609119100424},{"_id":"public/2020/12/19/shopify/shopify产品页面数据获取/index.html","hash":"0f0600025cb059617cfd915a9336efaff59b78da","modified":1609119100424},{"_id":"public/2020/12/19/shopify/shopify 图片CDN 详解/index.html","hash":"f2f8a4b4ced73d42a78e855ceca88b51641e58b1","modified":1609119100424},{"_id":"public/2020/12/19/Vue/解决跨域/index.html","hash":"73ce9f430394a6693a968b3e6e4f22e4f661a851","modified":1609119100424},{"_id":"public/index.html","hash":"5dd652df851c7b5af085a099ce8e95198407b851","modified":1609063145257},{"_id":"public/page/2/index.html","hash":"03012ed3c5010fe60de4599b2daedb67c5cc10df","modified":1609063145257},{"_id":"public/CNAME","hash":"27b180181ea7ef6f23538d3aff071be01c8f33b9","modified":1609040168150},{"_id":"public/images/avatar.jpg","hash":"abda20e109a426044ad43dcb36e523976ab412af","modified":1609040168150},{"_id":"public/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1609040168150},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1609040168150},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1609040168150},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1609040168150},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1609040168150},{"_id":"public/images/favicon.ico","hash":"fa9576103076b2742a80dcd467577b9fe0ac9dab","modified":1609040168150},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1609040168150},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1609040168150},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1609040168150},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1609040168150},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1609040168150},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1609040168150},{"_id":"public/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1609040168150},{"_id":"public/js/back2top.js","hash":"cd226f2e01a84c74e859dfd08ca1f5146011ae8b","modified":1609040168150},{"_id":"public/js/code-copy.js","hash":"68587d2b5af9c33a762d76ed7692089580a74d0f","modified":1609040168150},{"_id":"public/js/dark-light-toggle.js","hash":"4d58ef9566f1785286a5ee5bc21c2063b117fe1b","modified":1609040168150},{"_id":"public/js/header-shrink.js","hash":"1cf440c53c202ffe120301766b90b3b2cca89c36","modified":1609040168150},{"_id":"public/js/left-side-toggle.js","hash":"d12ff633952d8ad469e659218617db3c9f199f9e","modified":1609040168150},{"_id":"public/js/local-search.js","hash":"e161108a7d315816cd5602a42d1477f93902e0c5","modified":1609040168150},{"_id":"public/js/main.js","hash":"b04c5268202228427e63ae901ef3d2ccd0d676f4","modified":1609040168150},{"_id":"public/js/particles.min.js","hash":"d897ab39b869d4c3f8e55aca3cc970933eb933d1","modified":1609040168150},{"_id":"public/js/toc.js","hash":"cdeba4d4b6c1a63b5541ee59cdf78efa166d71a4","modified":1609040168150},{"_id":"public/js/utils.js","hash":"e022617752b2cab6a4f0dccd942a7211212f1f0d","modified":1609040168150},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1609040168150},{"_id":"public/css/layout/category-content.css","hash":"202e79bde8999a9289c72607bdb46f407435a3bf","modified":1609040168150},{"_id":"public/css/layout/article-content.css","hash":"0fd286227c595d786d0d49297046308de498797f","modified":1609040168150},{"_id":"public/css/layout/category-list.css","hash":"0d23f6ebc9760a05b8c9e84a750545600090ced4","modified":1609040168150},{"_id":"public/css/layout/home-content.css","hash":"f68ee5a15cdef2415b22d18d5865b0b4b457091d","modified":1609040168150},{"_id":"public/css/layout/page.css","hash":"001aa6571669886e6c72af66d42ab1c303881aee","modified":1609040168150},{"_id":"public/css/layout/tag-content.css","hash":"5531659a2f3a88029a5366abe0143e34e5aadf36","modified":1609040168150},{"_id":"public/css/layout/common/animated.css","hash":"ffc3d829f365f82513e2d501fbe7f74d050e2efc","modified":1609040168150},{"_id":"public/css/layout/common/basic.css","hash":"878e54e4dcece67d0482118c9e7948753c243021","modified":1609040168150},{"_id":"public/css/layout/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1609040168150},{"_id":"public/css/layout/common/variables.css","hash":"989ec06965322348febce074a56392bf6c955e7e","modified":1609040168150},{"_id":"public/css/layout/common/markdown.css","hash":"8248100fc270f6f1cb50b6a7650b9fb707f42c8e","modified":1609040168150},{"_id":"public/css/layout/common/codeblock/code-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1609040168150},{"_id":"public/css/layout/common/codeblock/copy-code.css","hash":"58bf480645f7bf730921ea92a2aa346fc772632e","modified":1609040168150},{"_id":"public/css/layout/common/codeblock/highlight.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1609040168150},{"_id":"public/css/style.css","hash":"fab003ed18364e2b6bd559e4939f80db2ed2bfab","modified":1609040168150},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1609040168150},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1609040168150},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1609040168150},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1609040168150},{"_id":"public/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1609040168150},{"_id":"public/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1609040168150}],"Category":[{"name":"study","_id":"ckj6kz1oo0007ap1i0viibr98"},{"name":"Vue","_id":"ckj6kz1pr000qap1if4lmbsn5"},{"name":"shopify","_id":"ckj6kz1q30017ap1i064m5u0a"}],"Data":[{"_id":"links","data":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}],"Page":[{"title":"categories","date":"2020-12-10T07:14:16.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-12-10 15:14:16\n---\n","updated":"2020-12-19T12:03:49.391Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckj6kz1o10000ap1i5rwx84sc","content":"","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":""},{"title":"tag","date":"2020-12-10T12:55:53.000Z","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ndate: 2020-12-10 20:55:53\n---\n","updated":"2020-12-19T12:03:49.393Z","path":"tag/index.html","comments":1,"layout":"page","_id":"ckj6kz1ob0002ap1ibmdugtog","content":"","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":""},{"title":"links","date":"2020-12-26T13:19:20.000Z","_content":"若要交换友链，请先将本站链接添加到你的网站，然后按下列友链格式直接留言。\n友链格式：\n\n名称：爱·绮梦\n\n链接：https://x.iqimeng.com/\n\n头像：https://x.iqimeng.com/images/avatar.jpg\n\n描述：学而时习之 不亦说乎\n\n","source":"links/index.md","raw":"---\ntitle: links\ndate: 2020-12-26 21:19:20\n---\n若要交换友链，请先将本站链接添加到你的网站，然后按下列友链格式直接留言。\n友链格式：\n\n名称：爱·绮梦\n\n链接：https://x.iqimeng.com/\n\n头像：https://x.iqimeng.com/images/avatar.jpg\n\n描述：学而时习之 不亦说乎\n\n","updated":"2020-12-26T14:08:19.075Z","path":"links/index.html","comments":1,"layout":"page","_id":"ckj6kz1oj0005ap1i1l2i630g","content":"<p>若要交换友链，请先将本站链接添加到你的网站，然后按下列友链格式直接留言。<br>友链格式：</p>\n<p>名称：爱·绮梦</p>\n<p>链接：<a class=\"link\"   href=\"https://x.iqimeng.com/\" >https://x.iqimeng.com/<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>头像：<a class=\"link\"   href=\"https://x.iqimeng.com/images/avatar.jpg\" >https://x.iqimeng.com/images/avatar.jpg<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>描述：学而时习之 不亦说乎</p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>若要交换友链，请先将本站链接添加到你的网站，然后按下列友链格式直接留言。<br>友链格式：</p>\n<p>名称：爱·绮梦</p>\n<p>链接：<a class=\"link\"   href=\"https://x.iqimeng.com/\" >https://x.iqimeng.com/<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>头像：<a class=\"link\"   href=\"https://x.iqimeng.com/images/avatar.jpg\" >https://x.iqimeng.com/images/avatar.jpg<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>描述：学而时习之 不亦说乎</p>\n"}],"Post":[{"title":"值得纪念的一条","_content":"原来信心满满，憧憬各种各样的结果，也做好的面对挑战和无尽的压力，但事实却事与愿违，向前一步可能会很难，但也不想这样就看到尽头，命运真的会给我们开玩笑，好吧，既然这样那我就在这条路上一往无前\n\n加油！！\n\n![ice-from-diamond-beach-iceland-picjumbo-com](https://raw.githubusercontent.com/markruan/cloudimg/master/img/ice-from-diamond-beach-iceland-picjumbo-com.jpg)","source":"_posts/值得纪念的一天.md","raw":"---\ntitle: 值得纪念的一条\ntag:\n  - 心情\ncategories: []\n---\n原来信心满满，憧憬各种各样的结果，也做好的面对挑战和无尽的压力，但事实却事与愿违，向前一步可能会很难，但也不想这样就看到尽头，命运真的会给我们开玩笑，好吧，既然这样那我就在这条路上一往无前\n\n加油！！\n\n![ice-from-diamond-beach-iceland-picjumbo-com](https://raw.githubusercontent.com/markruan/cloudimg/master/img/ice-from-diamond-beach-iceland-picjumbo-com.jpg)","slug":"值得纪念的一天","published":1,"date":"2020-12-19T12:03:49.386Z","updated":"2020-12-24T16:03:27.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1o60001ap1iehtf1hm4","content":"<p>原来信心满满，憧憬各种各样的结果，也做好的面对挑战和无尽的压力，但事实却事与愿违，向前一步可能会很难，但也不想这样就看到尽头，命运真的会给我们开玩笑，好吧，既然这样那我就在这条路上一往无前</p>\n<p>加油！！</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/ice-from-diamond-beach-iceland-picjumbo-com.jpg\" alt=\"ice-from-diamond-beach-iceland-picjumbo-com\"></p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>原来信心满满，憧憬各种各样的结果，也做好的面对挑战和无尽的压力，但事实却事与愿违，向前一步可能会很难，但也不想这样就看到尽头，命运真的会给我们开玩笑，好吧，既然这样那我就在这条路上一往无前</p>\n<p>加油！！</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/ice-from-diamond-beach-iceland-picjumbo-com.jpg\" alt=\"ice-from-diamond-beach-iceland-picjumbo-com\"></p>\n"},{"title":"Css 打字机效果，文字循环 逐个出现，逐个删除","_content":"看见一个不错的特效：\n\n**效果如下：**\n![在这里插入图片描述](https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200521164422488.gif)\nhtml 文本\n\n```html\n<h1 id=\"box\"></h1>\n```\n\ncss 样式\n\n```css\n// keyframes 可根据展示的文本长度，自行添加，我的格式为： @keyframes  ‘type’+'文本长度'\n@keyframes typing10 {\n  from {\n    width: 0;\n  }\n  50% {\n    width: 10ch;\n  }\n  100% {\n    width: 0\n  }\n}\n@keyframes typing4 {\n  from {\n    width: 0;\n  }\n  50% {\n    width: 4ch;\n  }\n  100% {\n    width: 0\n  }\n}\n@keyframes typing6 {\n  from {\n    width: 0;\n  }\n  50% {\n    width: 6ch;\n  }\n  100% {\n    width: 0\n  }\n}\n@keyframes caret { 50% { border-color: transparent; } }\nh1 {\n  width: 0;\n  animation: typing 6s steps(15) infinite,caret 1s steps(1) infinite;\n  white-space: nowrap;\n  overflow:hidden;\n  border-right: .05em solid;\n  font-family: Consolas, Monaco, monospace;//注意这儿，要设置字体为等宽字体,ch才会充分发挥效果\n}\n \n```\n\njs文件\n\n```javascript\nconst arr = ['TypeScript','JavaScript','小程序','less','sass' ];//显示的文本\nconst dom = document.getElementById('box')\nlet j = 0; //从数组第一个开始展示\n// 递归函数\nconst func =(j) => {\n  if(j < arr.length){ // 当达到数组长度时，就从头开始继续\n    const item = arr[j]\n    const itemLen = item === '小程序' ? 6 : item.length; // 汉字是占两个ch\n    dom.innerHTML = item; // 显示文字\n    for (var i = 0, len = itemLen; i < len; i++) { // 添加文本效果\n      var textLen = dom.textContent.length, s = dom.style;\n      s.animationTimingFunction = \"steps(\" + textLen + \"),steps(1)\";; //动态设置steps\n      s.animationName = `typing${itemLen}`; //文本长度不同，展示的宽度就不同，所以需要动态设置\n      s.animationDuration = `${itemLen/2}s,0.5s`; //这儿设置速度\n    }\n    setTimeout(() => {\n      func(j + 1)\n    },itemLen*500) //这儿和上面的animationDuration速度一致，只不过这儿是毫秒，所以要乘以1000\n    \n  }else{\n    func(0); //就从头开始继续\n  }\n}\nfunc(j); \n```\n\n参考文章： https://www.w3cplus.com/css3/css-secrets/typing-animation.html","source":"_posts/study/Css 打字机效果，文字循环 逐个出现，逐个删除.md","raw":"---\ntitle: Css 打字机效果，文字循环 逐个出现，逐个删除\ntag: \n  - css\n  - 特效\n  - html\ncategories:\n  - study\n---\n看见一个不错的特效：\n\n**效果如下：**\n![在这里插入图片描述](https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200521164422488.gif)\nhtml 文本\n\n```html\n<h1 id=\"box\"></h1>\n```\n\ncss 样式\n\n```css\n// keyframes 可根据展示的文本长度，自行添加，我的格式为： @keyframes  ‘type’+'文本长度'\n@keyframes typing10 {\n  from {\n    width: 0;\n  }\n  50% {\n    width: 10ch;\n  }\n  100% {\n    width: 0\n  }\n}\n@keyframes typing4 {\n  from {\n    width: 0;\n  }\n  50% {\n    width: 4ch;\n  }\n  100% {\n    width: 0\n  }\n}\n@keyframes typing6 {\n  from {\n    width: 0;\n  }\n  50% {\n    width: 6ch;\n  }\n  100% {\n    width: 0\n  }\n}\n@keyframes caret { 50% { border-color: transparent; } }\nh1 {\n  width: 0;\n  animation: typing 6s steps(15) infinite,caret 1s steps(1) infinite;\n  white-space: nowrap;\n  overflow:hidden;\n  border-right: .05em solid;\n  font-family: Consolas, Monaco, monospace;//注意这儿，要设置字体为等宽字体,ch才会充分发挥效果\n}\n \n```\n\njs文件\n\n```javascript\nconst arr = ['TypeScript','JavaScript','小程序','less','sass' ];//显示的文本\nconst dom = document.getElementById('box')\nlet j = 0; //从数组第一个开始展示\n// 递归函数\nconst func =(j) => {\n  if(j < arr.length){ // 当达到数组长度时，就从头开始继续\n    const item = arr[j]\n    const itemLen = item === '小程序' ? 6 : item.length; // 汉字是占两个ch\n    dom.innerHTML = item; // 显示文字\n    for (var i = 0, len = itemLen; i < len; i++) { // 添加文本效果\n      var textLen = dom.textContent.length, s = dom.style;\n      s.animationTimingFunction = \"steps(\" + textLen + \"),steps(1)\";; //动态设置steps\n      s.animationName = `typing${itemLen}`; //文本长度不同，展示的宽度就不同，所以需要动态设置\n      s.animationDuration = `${itemLen/2}s,0.5s`; //这儿设置速度\n    }\n    setTimeout(() => {\n      func(j + 1)\n    },itemLen*500) //这儿和上面的animationDuration速度一致，只不过这儿是毫秒，所以要乘以1000\n    \n  }else{\n    func(0); //就从头开始继续\n  }\n}\nfunc(j); \n```\n\n参考文章： https://www.w3cplus.com/css3/css-secrets/typing-animation.html","slug":"study/Css 打字机效果，文字循环 逐个出现，逐个删除","published":1,"date":"2020-12-25T00:08:33.023Z","updated":"2020-12-27T03:30:49.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1ob0003ap1ih7e60ov2","content":"<p>看见一个不错的特效：</p>\n<p><strong>效果如下：</strong><br><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200521164422488.gif\" alt=\"在这里插入图片描述\"><br>html 文本</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css 样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// <span class=\"selector-tag\">keyframes</span> 可根据展示的文本长度，自行添加，我的格式为： <span class=\"keyword\">@keyframes</span>  ‘type’+<span class=\"string\">&#x27;文本长度&#x27;</span></span><br><span class=\"line\">@keyframes typing10 &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10ch</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> typing4 &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">4ch</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> typing6 &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">6ch</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> caret &#123; 50% &#123; <span class=\"attribute\">border-color</span>: transparent; &#125; &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: typing <span class=\"number\">6s</span> <span class=\"built_in\">steps</span>(<span class=\"number\">15</span>) infinite,caret <span class=\"number\">1s</span> <span class=\"built_in\">steps</span>(<span class=\"number\">1</span>) infinite;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: .<span class=\"number\">05em</span> solid;</span><br><span class=\"line\">  font-family: Consolas, Monaco, monospace;//注意这儿，要设置字体为等宽字体,ch才会充分发挥效果</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<p>js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;TypeScript&#x27;</span>,<span class=\"string\">&#x27;JavaScript&#x27;</span>,<span class=\"string\">&#x27;小程序&#x27;</span>,<span class=\"string\">&#x27;less&#x27;</span>,<span class=\"string\">&#x27;sass&#x27;</span> ];<span class=\"comment\">//显示的文本</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> dom = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;box&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; <span class=\"comment\">//从数组第一个开始展示</span></span><br><span class=\"line\"><span class=\"comment\">// 递归函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> func =<span class=\"function\">(<span class=\"params\">j</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(j &lt; arr.length)&#123; <span class=\"comment\">// 当达到数组长度时，就从头开始继续</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> item = arr[j]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> itemLen = item === <span class=\"string\">&#x27;小程序&#x27;</span> ? <span class=\"number\">6</span> : item.length; <span class=\"comment\">// 汉字是占两个ch</span></span><br><span class=\"line\">    dom.innerHTML = item; <span class=\"comment\">// 显示文字</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = itemLen; i &lt; len; i++) &#123; <span class=\"comment\">// 添加文本效果</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> textLen = dom.textContent.length, s = dom.style;</span><br><span class=\"line\">      s.animationTimingFunction = <span class=\"string\">&quot;steps(&quot;</span> + textLen + <span class=\"string\">&quot;),steps(1)&quot;</span>;; <span class=\"comment\">//动态设置steps</span></span><br><span class=\"line\">      s.animationName = <span class=\"string\">`typing<span class=\"subst\">$&#123;itemLen&#125;</span>`</span>; <span class=\"comment\">//文本长度不同，展示的宽度就不同，所以需要动态设置</span></span><br><span class=\"line\">      s.animationDuration = <span class=\"string\">`<span class=\"subst\">$&#123;itemLen<span class=\"regexp\">/2&#125;s,0.5s`; /</span><span class=\"regexp\">/这儿设置速度</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    setTimeout(() =&gt; &#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      func(j + 1)</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,itemLen*500) /</span><span class=\"regexp\">/这儿和上面的animationDuration速度一致，只不过这儿是毫秒，所以要乘以1000</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    </span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;else&#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    func(0); /</span><span class=\"regexp\">/就从头开始继续</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">&#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">func(j); </span></span></span></span><br></pre></td></tr></table></figure>\n<p>参考文章： <a class=\"link\"   href=\"https://www.w3cplus.com/css3/css-secrets/typing-animation.html\" >https://www.w3cplus.com/css3/css-secrets/typing-animation.html<i class=\"fas fa-external-link-alt\"></i></a></p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>看见一个不错的特效：</p>\n<p><strong>效果如下：</strong><br><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200521164422488.gif\" alt=\"在这里插入图片描述\"><br>html 文本</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css 样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// <span class=\"selector-tag\">keyframes</span> 可根据展示的文本长度，自行添加，我的格式为： <span class=\"keyword\">@keyframes</span>  ‘type’+<span class=\"string\">&#x27;文本长度&#x27;</span></span><br><span class=\"line\">@keyframes typing10 &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10ch</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> typing4 &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">4ch</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> typing6 &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">6ch</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> caret &#123; 50% &#123; <span class=\"attribute\">border-color</span>: transparent; &#125; &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: typing <span class=\"number\">6s</span> <span class=\"built_in\">steps</span>(<span class=\"number\">15</span>) infinite,caret <span class=\"number\">1s</span> <span class=\"built_in\">steps</span>(<span class=\"number\">1</span>) infinite;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: .<span class=\"number\">05em</span> solid;</span><br><span class=\"line\">  font-family: Consolas, Monaco, monospace;//注意这儿，要设置字体为等宽字体,ch才会充分发挥效果</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<p>js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;TypeScript&#x27;</span>,<span class=\"string\">&#x27;JavaScript&#x27;</span>,<span class=\"string\">&#x27;小程序&#x27;</span>,<span class=\"string\">&#x27;less&#x27;</span>,<span class=\"string\">&#x27;sass&#x27;</span> ];<span class=\"comment\">//显示的文本</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> dom = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;box&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; <span class=\"comment\">//从数组第一个开始展示</span></span><br><span class=\"line\"><span class=\"comment\">// 递归函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> func =<span class=\"function\">(<span class=\"params\">j</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(j &lt; arr.length)&#123; <span class=\"comment\">// 当达到数组长度时，就从头开始继续</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> item = arr[j]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> itemLen = item === <span class=\"string\">&#x27;小程序&#x27;</span> ? <span class=\"number\">6</span> : item.length; <span class=\"comment\">// 汉字是占两个ch</span></span><br><span class=\"line\">    dom.innerHTML = item; <span class=\"comment\">// 显示文字</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = itemLen; i &lt; len; i++) &#123; <span class=\"comment\">// 添加文本效果</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> textLen = dom.textContent.length, s = dom.style;</span><br><span class=\"line\">      s.animationTimingFunction = <span class=\"string\">&quot;steps(&quot;</span> + textLen + <span class=\"string\">&quot;),steps(1)&quot;</span>;; <span class=\"comment\">//动态设置steps</span></span><br><span class=\"line\">      s.animationName = <span class=\"string\">`typing<span class=\"subst\">$&#123;itemLen&#125;</span>`</span>; <span class=\"comment\">//文本长度不同，展示的宽度就不同，所以需要动态设置</span></span><br><span class=\"line\">      s.animationDuration = <span class=\"string\">`<span class=\"subst\">$&#123;itemLen<span class=\"regexp\">/2&#125;s,0.5s`; /</span><span class=\"regexp\">/这儿设置速度</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    setTimeout(() =&gt; &#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      func(j + 1)</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,itemLen*500) /</span><span class=\"regexp\">/这儿和上面的animationDuration速度一致，只不过这儿是毫秒，所以要乘以1000</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    </span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;else&#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    func(0); /</span><span class=\"regexp\">/就从头开始继续</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">&#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">func(j); </span></span></span></span><br></pre></td></tr></table></figure>\n<p>参考文章： <a class=\"link\"   href=\"https://www.w3cplus.com/css3/css-secrets/typing-animation.html\" >https://www.w3cplus.com/css3/css-secrets/typing-animation.html<i class=\"fas fa-external-link-alt\"></i></a></p>\n"},{"title":"Hexo 中 Markdown 特殊字符的处理方法","_content":"## 问题描述\n\n在 Hexo 搭建的博客中对文章进行编写，经常会用到一些特殊字符需要转译，比如 `-`、`.`、空格、制表符等等，在正常情况下可以使用 `\\` 进行转译，但是有一些字符无法转译，使用后在执行 `hexo server` 命令的时候会报错。\n\n**报错信息：**\n\n> Unhandled rejection Template render error: (unknown path) [Line 7, Column 23]\n>  Error: Unable to call `worldcount`, which is undefined or falsey......\n\n\n\n## 解决方案\n\n报错的原因是，Hexo 编译时发生错误，可能是文章中存在特殊字符，如：{ [ ( ) ] } 等等。如下面这段代码：\n\n**在页面中：**\n\n\n\n```js\n{{ worldcount(post.content) }}\n```\n\n**在 Markdown 中：**\n\n\n\n```markdown\n&#123;&#123; worldcount&#40;post.content&#41; &#125;&#125;\n```\n\n在 Markdown 中使用 `\\` 无法转译的字符需要使用字符的命名实体或十进制编码，如上面代码中。\n\n***注意：需要转义的字符只是文本中的特殊字符，代码块中的特殊字符无需转译或使用转译字符。***\n\n\n\n## 常见特殊字符\n\n (所有编码使用时;前的空额取消)\n\n| 特殊符号 | 命名实体 | 十进制编码 |\n| :------: | :------: | :--------: |\n|   空格   | &nbsp ;  |  &#160 ;   |\n| 全角空格 |  &emsp;  |  &#12288;  |\n|    '     | &apos ;  |   &#39 ;   |\n|    \"     | &quot ;  |   &#34 ;   |\n|    (     |    —     |   &#40 ;   |\n|    )     |    —     |   &#41 ;   |\n|    <     |  &lt ;   |   &#60 ;   |\n|    >     |  &gt ;   |   &#62 ;   |\n|    [     |    —     |   &#91 ;   |\n|    ]     |    —     |   &#93 ;   |\n|    {     |    —     |  &#123 ;   |\n|    }     |    —     |  &#125 ;   |\n|    ´     | &acute ; |  &#180 ;   |\n|    °     |  &deg ;  |  &#176 ;   |\n|    ®     |  &reg ;  |  &#174 ;   |\n|    ©     | &copy ;  |  &#169 ;   |\n\n常用数学转译字符对照表：\n\n| 特殊符号 | 命名实体  | 十进制编码 |\n| :------: | :-------: | :--------: |\n|    ≤     |   &le ;   |  &#8804 ;  |\n|    ≥     |   &ge ;   |  &#8805 ;  |\n|    ≈     | &asymp ;  |  &#8773 ;  |\n|    ≠     |   &ne ;   |  &#8800 ;  |\n|    ∩     |  &cap ;   |  &#8745 ;  |\n|    ∪     |  &cup ;   |  &#8746 ;  |\n|    ∠     |  &ang ;   |  &#8736 ;  |\n|    ∞     | &infin ;  |  &#8734 ;  |\n|    ±     | &plusmn ; |  &#177 ;   |\n|    √     | &radic ;  |  &#8730 ;  |\n|    ∑     |  &sum ;   |  &#8722 ;  |\n|    ∫     |  &int ;   |  &#8747 ;  |\n|    Δ     | &Delta ;  |  &#916 ;   |\n\n常用希腊字母转译字符对照表：\n\n| 特殊符号 |  命名实体  | 十进制编码 |\n| :------: | :--------: | :--------: |\n|    Φ     |   &Phi ;   |   &#934;   |\n|    Ω     |  &Omega ;  |   &#937;   |\n|    α     |  &alpha ;  |   &#945;   |\n|    β     |  &beta ;   |   &#946;   |\n|    γ     |  &gamma ;  |   &#947;   |\n|    δ     |  &delta ;  |  &#948 ;   |\n|    ε     | &epsilon ; |  &#949 ;   |\n|    ζ     |  &zeta ;   |  &#950 ;   |\n|    η     |   &eta ;   |  &#951 ;   |\n|    θ     |  &theta ;  |  &#952 ;   |\n|    λ     | &lambda ;  |  &#955 ;   |\n|    μ     |   &mu ;    |  &#956 ;   |\n|    ξ     |   &xi ;    |  &#958 ;   |\n|    π     |   &pi ;    |  &#960 ;   |\n|    ρ     |   &rho ;   |  &#961 ;   |\n|    σ     |  &sigma ;  |  &#963 ;   |\n|    φ     |   &phi ;   |  &#966 ;   |\n|    ψ     |   &psi ;   |  &#968 ;   |\n|    ω     |  &omega ;  |  &#969 ;   |\n|    ∂     |  &part ;   |  &#8706 ;  |\n|    ∅     |  &empty ;  |  &#8709 ;  |\n\n\n\n\n\n原文出自：https://www.pandashen.com ","source":"_posts/study/Hexo 中 Markdown 特殊字符的处理方法.md","raw":"---\ntitle: Hexo 中 Markdown 特殊字符的处理方法\ncategories:\n  - study\n---\n## 问题描述\n\n在 Hexo 搭建的博客中对文章进行编写，经常会用到一些特殊字符需要转译，比如 `-`、`.`、空格、制表符等等，在正常情况下可以使用 `\\` 进行转译，但是有一些字符无法转译，使用后在执行 `hexo server` 命令的时候会报错。\n\n**报错信息：**\n\n> Unhandled rejection Template render error: (unknown path) [Line 7, Column 23]\n>  Error: Unable to call `worldcount`, which is undefined or falsey......\n\n\n\n## 解决方案\n\n报错的原因是，Hexo 编译时发生错误，可能是文章中存在特殊字符，如：{ [ ( ) ] } 等等。如下面这段代码：\n\n**在页面中：**\n\n\n\n```js\n{{ worldcount(post.content) }}\n```\n\n**在 Markdown 中：**\n\n\n\n```markdown\n&#123;&#123; worldcount&#40;post.content&#41; &#125;&#125;\n```\n\n在 Markdown 中使用 `\\` 无法转译的字符需要使用字符的命名实体或十进制编码，如上面代码中。\n\n***注意：需要转义的字符只是文本中的特殊字符，代码块中的特殊字符无需转译或使用转译字符。***\n\n\n\n## 常见特殊字符\n\n (所有编码使用时;前的空额取消)\n\n| 特殊符号 | 命名实体 | 十进制编码 |\n| :------: | :------: | :--------: |\n|   空格   | &nbsp ;  |  &#160 ;   |\n| 全角空格 |  &emsp;  |  &#12288;  |\n|    '     | &apos ;  |   &#39 ;   |\n|    \"     | &quot ;  |   &#34 ;   |\n|    (     |    —     |   &#40 ;   |\n|    )     |    —     |   &#41 ;   |\n|    <     |  &lt ;   |   &#60 ;   |\n|    >     |  &gt ;   |   &#62 ;   |\n|    [     |    —     |   &#91 ;   |\n|    ]     |    —     |   &#93 ;   |\n|    {     |    —     |  &#123 ;   |\n|    }     |    —     |  &#125 ;   |\n|    ´     | &acute ; |  &#180 ;   |\n|    °     |  &deg ;  |  &#176 ;   |\n|    ®     |  &reg ;  |  &#174 ;   |\n|    ©     | &copy ;  |  &#169 ;   |\n\n常用数学转译字符对照表：\n\n| 特殊符号 | 命名实体  | 十进制编码 |\n| :------: | :-------: | :--------: |\n|    ≤     |   &le ;   |  &#8804 ;  |\n|    ≥     |   &ge ;   |  &#8805 ;  |\n|    ≈     | &asymp ;  |  &#8773 ;  |\n|    ≠     |   &ne ;   |  &#8800 ;  |\n|    ∩     |  &cap ;   |  &#8745 ;  |\n|    ∪     |  &cup ;   |  &#8746 ;  |\n|    ∠     |  &ang ;   |  &#8736 ;  |\n|    ∞     | &infin ;  |  &#8734 ;  |\n|    ±     | &plusmn ; |  &#177 ;   |\n|    √     | &radic ;  |  &#8730 ;  |\n|    ∑     |  &sum ;   |  &#8722 ;  |\n|    ∫     |  &int ;   |  &#8747 ;  |\n|    Δ     | &Delta ;  |  &#916 ;   |\n\n常用希腊字母转译字符对照表：\n\n| 特殊符号 |  命名实体  | 十进制编码 |\n| :------: | :--------: | :--------: |\n|    Φ     |   &Phi ;   |   &#934;   |\n|    Ω     |  &Omega ;  |   &#937;   |\n|    α     |  &alpha ;  |   &#945;   |\n|    β     |  &beta ;   |   &#946;   |\n|    γ     |  &gamma ;  |   &#947;   |\n|    δ     |  &delta ;  |  &#948 ;   |\n|    ε     | &epsilon ; |  &#949 ;   |\n|    ζ     |  &zeta ;   |  &#950 ;   |\n|    η     |   &eta ;   |  &#951 ;   |\n|    θ     |  &theta ;  |  &#952 ;   |\n|    λ     | &lambda ;  |  &#955 ;   |\n|    μ     |   &mu ;    |  &#956 ;   |\n|    ξ     |   &xi ;    |  &#958 ;   |\n|    π     |   &pi ;    |  &#960 ;   |\n|    ρ     |   &rho ;   |  &#961 ;   |\n|    σ     |  &sigma ;  |  &#963 ;   |\n|    φ     |   &phi ;   |  &#966 ;   |\n|    ψ     |   &psi ;   |  &#968 ;   |\n|    ω     |  &omega ;  |  &#969 ;   |\n|    ∂     |  &part ;   |  &#8706 ;  |\n|    ∅     |  &empty ;  |  &#8709 ;  |\n\n\n\n\n\n原文出自：https://www.pandashen.com ","slug":"study/Hexo 中 Markdown 特殊字符的处理方法","published":1,"date":"2020-12-19T12:03:49.377Z","updated":"2020-12-24T16:00:45.152Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1ok0006ap1i0wdc0y5r","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>在 Hexo 搭建的博客中对文章进行编写，经常会用到一些特殊字符需要转译，比如 <code>-</code>、<code>.</code>、空格、制表符等等，在正常情况下可以使用 <code>\\</code> 进行转译，但是有一些字符无法转译，使用后在执行 <code>hexo server</code> 命令的时候会报错。</p>\n<p><strong>报错信息：</strong></p>\n<blockquote>\n<p>Unhandled rejection Template render error: (unknown path) [Line 7, Column 23]<br> Error: Unable to call <code>worldcount</code>, which is undefined or falsey……</p>\n</blockquote>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>报错的原因是，Hexo 编译时发生错误，可能是文章中存在特殊字符，如：{ [ ( ) ] } 等等。如下面这段代码：</p>\n<p><strong>在页面中：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; worldcount(post.content) &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>在 Markdown 中：</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;#123;&amp;#123; worldcount&amp;#40;post.content&amp;#41; &amp;#125;&amp;#125;</span><br></pre></td></tr></table></figure>\n<p>在 Markdown 中使用 <code>\\</code> 无法转译的字符需要使用字符的命名实体或十进制编码，如上面代码中。</p>\n<p><strong><em>注意：需要转义的字符只是文本中的特殊字符，代码块中的特殊字符无需转译或使用转译字符。</em></strong></p>\n<h2 id=\"常见特殊字符\"><a href=\"#常见特殊字符\" class=\"headerlink\" title=\"常见特殊字符\"></a>常见特殊字符</h2><p> (所有编码使用时;前的空额取消)</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特殊符号</th>\n<th align=\"center\">命名实体</th>\n<th align=\"center\">十进制编码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">空格</td>\n<td align=\"center\">&amp;nbsp ;</td>\n<td align=\"center\">&amp;#160 ;</td>\n</tr>\n<tr>\n<td align=\"center\">全角空格</td>\n<td align=\"center\">&emsp;</td>\n<td align=\"center\">&#12288;</td>\n</tr>\n<tr>\n<td align=\"center\">‘</td>\n<td align=\"center\">&amp;apos ;</td>\n<td align=\"center\">&amp;#39 ;</td>\n</tr>\n<tr>\n<td align=\"center\">“</td>\n<td align=\"center\">&amp;quot ;</td>\n<td align=\"center\">&amp;#34 ;</td>\n</tr>\n<tr>\n<td align=\"center\">(</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#40 ;</td>\n</tr>\n<tr>\n<td align=\"center\">)</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#41 ;</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;</td>\n<td align=\"center\">&amp;lt ;</td>\n<td align=\"center\">&amp;#60 ;</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;</td>\n<td align=\"center\">&amp;gt ;</td>\n<td align=\"center\">&amp;#62 ;</td>\n</tr>\n<tr>\n<td align=\"center\">[</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#91 ;</td>\n</tr>\n<tr>\n<td align=\"center\">]</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#93 ;</td>\n</tr>\n<tr>\n<td align=\"center\">{</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#123 ;</td>\n</tr>\n<tr>\n<td align=\"center\">}</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#125 ;</td>\n</tr>\n<tr>\n<td align=\"center\">´</td>\n<td align=\"center\">&amp;acute ;</td>\n<td align=\"center\">&amp;#180 ;</td>\n</tr>\n<tr>\n<td align=\"center\">°</td>\n<td align=\"center\">&amp;deg ;</td>\n<td align=\"center\">&amp;#176 ;</td>\n</tr>\n<tr>\n<td align=\"center\">®</td>\n<td align=\"center\">&amp;reg ;</td>\n<td align=\"center\">&amp;#174 ;</td>\n</tr>\n<tr>\n<td align=\"center\">©</td>\n<td align=\"center\">&amp;copy ;</td>\n<td align=\"center\">&amp;#169 ;</td>\n</tr>\n</tbody></table>\n<p>常用数学转译字符对照表：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特殊符号</th>\n<th align=\"center\">命名实体</th>\n<th align=\"center\">十进制编码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">≤</td>\n<td align=\"center\">&amp;le ;</td>\n<td align=\"center\">&amp;#8804 ;</td>\n</tr>\n<tr>\n<td align=\"center\">≥</td>\n<td align=\"center\">&amp;ge ;</td>\n<td align=\"center\">&amp;#8805 ;</td>\n</tr>\n<tr>\n<td align=\"center\">≈</td>\n<td align=\"center\">&amp;asymp ;</td>\n<td align=\"center\">&amp;#8773 ;</td>\n</tr>\n<tr>\n<td align=\"center\">≠</td>\n<td align=\"center\">&amp;ne ;</td>\n<td align=\"center\">&amp;#8800 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∩</td>\n<td align=\"center\">&amp;cap ;</td>\n<td align=\"center\">&amp;#8745 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∪</td>\n<td align=\"center\">&amp;cup ;</td>\n<td align=\"center\">&amp;#8746 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∠</td>\n<td align=\"center\">&amp;ang ;</td>\n<td align=\"center\">&amp;#8736 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∞</td>\n<td align=\"center\">&amp;infin ;</td>\n<td align=\"center\">&amp;#8734 ;</td>\n</tr>\n<tr>\n<td align=\"center\">±</td>\n<td align=\"center\">&amp;plusmn ;</td>\n<td align=\"center\">&amp;#177 ;</td>\n</tr>\n<tr>\n<td align=\"center\">√</td>\n<td align=\"center\">&amp;radic ;</td>\n<td align=\"center\">&amp;#8730 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∑</td>\n<td align=\"center\">&amp;sum ;</td>\n<td align=\"center\">&amp;#8722 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∫</td>\n<td align=\"center\">&amp;int ;</td>\n<td align=\"center\">&amp;#8747 ;</td>\n</tr>\n<tr>\n<td align=\"center\">Δ</td>\n<td align=\"center\">&amp;Delta ;</td>\n<td align=\"center\">&amp;#916 ;</td>\n</tr>\n</tbody></table>\n<p>常用希腊字母转译字符对照表：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特殊符号</th>\n<th align=\"center\">命名实体</th>\n<th align=\"center\">十进制编码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Φ</td>\n<td align=\"center\">&amp;Phi ;</td>\n<td align=\"center\">&#934;</td>\n</tr>\n<tr>\n<td align=\"center\">Ω</td>\n<td align=\"center\">&amp;Omega ;</td>\n<td align=\"center\">&#937;</td>\n</tr>\n<tr>\n<td align=\"center\">α</td>\n<td align=\"center\">&amp;alpha ;</td>\n<td align=\"center\">&#945;</td>\n</tr>\n<tr>\n<td align=\"center\">β</td>\n<td align=\"center\">&amp;beta ;</td>\n<td align=\"center\">&#946;</td>\n</tr>\n<tr>\n<td align=\"center\">γ</td>\n<td align=\"center\">&amp;gamma ;</td>\n<td align=\"center\">&#947;</td>\n</tr>\n<tr>\n<td align=\"center\">δ</td>\n<td align=\"center\">&amp;delta ;</td>\n<td align=\"center\">&amp;#948 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ε</td>\n<td align=\"center\">&amp;epsilon ;</td>\n<td align=\"center\">&amp;#949 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ζ</td>\n<td align=\"center\">&amp;zeta ;</td>\n<td align=\"center\">&amp;#950 ;</td>\n</tr>\n<tr>\n<td align=\"center\">η</td>\n<td align=\"center\">&amp;eta ;</td>\n<td align=\"center\">&amp;#951 ;</td>\n</tr>\n<tr>\n<td align=\"center\">θ</td>\n<td align=\"center\">&amp;theta ;</td>\n<td align=\"center\">&amp;#952 ;</td>\n</tr>\n<tr>\n<td align=\"center\">λ</td>\n<td align=\"center\">&amp;lambda ;</td>\n<td align=\"center\">&amp;#955 ;</td>\n</tr>\n<tr>\n<td align=\"center\">μ</td>\n<td align=\"center\">&amp;mu ;</td>\n<td align=\"center\">&amp;#956 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ξ</td>\n<td align=\"center\">&amp;xi ;</td>\n<td align=\"center\">&amp;#958 ;</td>\n</tr>\n<tr>\n<td align=\"center\">π</td>\n<td align=\"center\">&amp;pi ;</td>\n<td align=\"center\">&amp;#960 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ρ</td>\n<td align=\"center\">&amp;rho ;</td>\n<td align=\"center\">&amp;#961 ;</td>\n</tr>\n<tr>\n<td align=\"center\">σ</td>\n<td align=\"center\">&amp;sigma ;</td>\n<td align=\"center\">&amp;#963 ;</td>\n</tr>\n<tr>\n<td align=\"center\">φ</td>\n<td align=\"center\">&amp;phi ;</td>\n<td align=\"center\">&amp;#966 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ψ</td>\n<td align=\"center\">&amp;psi ;</td>\n<td align=\"center\">&amp;#968 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ω</td>\n<td align=\"center\">&amp;omega ;</td>\n<td align=\"center\">&amp;#969 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∂</td>\n<td align=\"center\">&amp;part ;</td>\n<td align=\"center\">&amp;#8706 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∅</td>\n<td align=\"center\">&amp;empty ;</td>\n<td align=\"center\">&amp;#8709 ;</td>\n</tr>\n</tbody></table>\n<p>原文出自：<a class=\"link\"   href=\"https://www.pandashen.com/\" >https://www.pandashen.com<i class=\"fas fa-external-link-alt\"></i></a> </p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>在 Hexo 搭建的博客中对文章进行编写，经常会用到一些特殊字符需要转译，比如 <code>-</code>、<code>.</code>、空格、制表符等等，在正常情况下可以使用 <code>\\</code> 进行转译，但是有一些字符无法转译，使用后在执行 <code>hexo server</code> 命令的时候会报错。</p>\n<p><strong>报错信息：</strong></p>\n<blockquote>\n<p>Unhandled rejection Template render error: (unknown path) [Line 7, Column 23]<br> Error: Unable to call <code>worldcount</code>, which is undefined or falsey……</p>\n</blockquote>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>报错的原因是，Hexo 编译时发生错误，可能是文章中存在特殊字符，如：{ [ ( ) ] } 等等。如下面这段代码：</p>\n<p><strong>在页面中：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; worldcount(post.content) &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>在 Markdown 中：</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;#123;&amp;#123; worldcount&amp;#40;post.content&amp;#41; &amp;#125;&amp;#125;</span><br></pre></td></tr></table></figure>\n<p>在 Markdown 中使用 <code>\\</code> 无法转译的字符需要使用字符的命名实体或十进制编码，如上面代码中。</p>\n<p><strong><em>注意：需要转义的字符只是文本中的特殊字符，代码块中的特殊字符无需转译或使用转译字符。</em></strong></p>\n<h2 id=\"常见特殊字符\"><a href=\"#常见特殊字符\" class=\"headerlink\" title=\"常见特殊字符\"></a>常见特殊字符</h2><p> (所有编码使用时;前的空额取消)</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特殊符号</th>\n<th align=\"center\">命名实体</th>\n<th align=\"center\">十进制编码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">空格</td>\n<td align=\"center\">&amp;nbsp ;</td>\n<td align=\"center\">&amp;#160 ;</td>\n</tr>\n<tr>\n<td align=\"center\">全角空格</td>\n<td align=\"center\">&emsp;</td>\n<td align=\"center\">&#12288;</td>\n</tr>\n<tr>\n<td align=\"center\">‘</td>\n<td align=\"center\">&amp;apos ;</td>\n<td align=\"center\">&amp;#39 ;</td>\n</tr>\n<tr>\n<td align=\"center\">“</td>\n<td align=\"center\">&amp;quot ;</td>\n<td align=\"center\">&amp;#34 ;</td>\n</tr>\n<tr>\n<td align=\"center\">(</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#40 ;</td>\n</tr>\n<tr>\n<td align=\"center\">)</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#41 ;</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;</td>\n<td align=\"center\">&amp;lt ;</td>\n<td align=\"center\">&amp;#60 ;</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;</td>\n<td align=\"center\">&amp;gt ;</td>\n<td align=\"center\">&amp;#62 ;</td>\n</tr>\n<tr>\n<td align=\"center\">[</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#91 ;</td>\n</tr>\n<tr>\n<td align=\"center\">]</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#93 ;</td>\n</tr>\n<tr>\n<td align=\"center\">{</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#123 ;</td>\n</tr>\n<tr>\n<td align=\"center\">}</td>\n<td align=\"center\">—</td>\n<td align=\"center\">&amp;#125 ;</td>\n</tr>\n<tr>\n<td align=\"center\">´</td>\n<td align=\"center\">&amp;acute ;</td>\n<td align=\"center\">&amp;#180 ;</td>\n</tr>\n<tr>\n<td align=\"center\">°</td>\n<td align=\"center\">&amp;deg ;</td>\n<td align=\"center\">&amp;#176 ;</td>\n</tr>\n<tr>\n<td align=\"center\">®</td>\n<td align=\"center\">&amp;reg ;</td>\n<td align=\"center\">&amp;#174 ;</td>\n</tr>\n<tr>\n<td align=\"center\">©</td>\n<td align=\"center\">&amp;copy ;</td>\n<td align=\"center\">&amp;#169 ;</td>\n</tr>\n</tbody></table>\n<p>常用数学转译字符对照表：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特殊符号</th>\n<th align=\"center\">命名实体</th>\n<th align=\"center\">十进制编码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">≤</td>\n<td align=\"center\">&amp;le ;</td>\n<td align=\"center\">&amp;#8804 ;</td>\n</tr>\n<tr>\n<td align=\"center\">≥</td>\n<td align=\"center\">&amp;ge ;</td>\n<td align=\"center\">&amp;#8805 ;</td>\n</tr>\n<tr>\n<td align=\"center\">≈</td>\n<td align=\"center\">&amp;asymp ;</td>\n<td align=\"center\">&amp;#8773 ;</td>\n</tr>\n<tr>\n<td align=\"center\">≠</td>\n<td align=\"center\">&amp;ne ;</td>\n<td align=\"center\">&amp;#8800 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∩</td>\n<td align=\"center\">&amp;cap ;</td>\n<td align=\"center\">&amp;#8745 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∪</td>\n<td align=\"center\">&amp;cup ;</td>\n<td align=\"center\">&amp;#8746 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∠</td>\n<td align=\"center\">&amp;ang ;</td>\n<td align=\"center\">&amp;#8736 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∞</td>\n<td align=\"center\">&amp;infin ;</td>\n<td align=\"center\">&amp;#8734 ;</td>\n</tr>\n<tr>\n<td align=\"center\">±</td>\n<td align=\"center\">&amp;plusmn ;</td>\n<td align=\"center\">&amp;#177 ;</td>\n</tr>\n<tr>\n<td align=\"center\">√</td>\n<td align=\"center\">&amp;radic ;</td>\n<td align=\"center\">&amp;#8730 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∑</td>\n<td align=\"center\">&amp;sum ;</td>\n<td align=\"center\">&amp;#8722 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∫</td>\n<td align=\"center\">&amp;int ;</td>\n<td align=\"center\">&amp;#8747 ;</td>\n</tr>\n<tr>\n<td align=\"center\">Δ</td>\n<td align=\"center\">&amp;Delta ;</td>\n<td align=\"center\">&amp;#916 ;</td>\n</tr>\n</tbody></table>\n<p>常用希腊字母转译字符对照表：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">特殊符号</th>\n<th align=\"center\">命名实体</th>\n<th align=\"center\">十进制编码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Φ</td>\n<td align=\"center\">&amp;Phi ;</td>\n<td align=\"center\">&#934;</td>\n</tr>\n<tr>\n<td align=\"center\">Ω</td>\n<td align=\"center\">&amp;Omega ;</td>\n<td align=\"center\">&#937;</td>\n</tr>\n<tr>\n<td align=\"center\">α</td>\n<td align=\"center\">&amp;alpha ;</td>\n<td align=\"center\">&#945;</td>\n</tr>\n<tr>\n<td align=\"center\">β</td>\n<td align=\"center\">&amp;beta ;</td>\n<td align=\"center\">&#946;</td>\n</tr>\n<tr>\n<td align=\"center\">γ</td>\n<td align=\"center\">&amp;gamma ;</td>\n<td align=\"center\">&#947;</td>\n</tr>\n<tr>\n<td align=\"center\">δ</td>\n<td align=\"center\">&amp;delta ;</td>\n<td align=\"center\">&amp;#948 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ε</td>\n<td align=\"center\">&amp;epsilon ;</td>\n<td align=\"center\">&amp;#949 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ζ</td>\n<td align=\"center\">&amp;zeta ;</td>\n<td align=\"center\">&amp;#950 ;</td>\n</tr>\n<tr>\n<td align=\"center\">η</td>\n<td align=\"center\">&amp;eta ;</td>\n<td align=\"center\">&amp;#951 ;</td>\n</tr>\n<tr>\n<td align=\"center\">θ</td>\n<td align=\"center\">&amp;theta ;</td>\n<td align=\"center\">&amp;#952 ;</td>\n</tr>\n<tr>\n<td align=\"center\">λ</td>\n<td align=\"center\">&amp;lambda ;</td>\n<td align=\"center\">&amp;#955 ;</td>\n</tr>\n<tr>\n<td align=\"center\">μ</td>\n<td align=\"center\">&amp;mu ;</td>\n<td align=\"center\">&amp;#956 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ξ</td>\n<td align=\"center\">&amp;xi ;</td>\n<td align=\"center\">&amp;#958 ;</td>\n</tr>\n<tr>\n<td align=\"center\">π</td>\n<td align=\"center\">&amp;pi ;</td>\n<td align=\"center\">&amp;#960 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ρ</td>\n<td align=\"center\">&amp;rho ;</td>\n<td align=\"center\">&amp;#961 ;</td>\n</tr>\n<tr>\n<td align=\"center\">σ</td>\n<td align=\"center\">&amp;sigma ;</td>\n<td align=\"center\">&amp;#963 ;</td>\n</tr>\n<tr>\n<td align=\"center\">φ</td>\n<td align=\"center\">&amp;phi ;</td>\n<td align=\"center\">&amp;#966 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ψ</td>\n<td align=\"center\">&amp;psi ;</td>\n<td align=\"center\">&amp;#968 ;</td>\n</tr>\n<tr>\n<td align=\"center\">ω</td>\n<td align=\"center\">&amp;omega ;</td>\n<td align=\"center\">&amp;#969 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∂</td>\n<td align=\"center\">&amp;part ;</td>\n<td align=\"center\">&amp;#8706 ;</td>\n</tr>\n<tr>\n<td align=\"center\">∅</td>\n<td align=\"center\">&amp;empty ;</td>\n<td align=\"center\">&amp;#8709 ;</td>\n</tr>\n</tbody></table>\n<p>原文出自：<a class=\"link\"   href=\"https://www.pandashen.com/\" >https://www.pandashen.com<i class=\"fas fa-external-link-alt\"></i></a> </p>\n"},{"title":"MAC升级Nodejs和Npm到最新版","_content":"今天使用HEXO  更新内容，发现node 版本太老了，所以就升级了下版本\n\n第一步，先查看本机node.js版本：\n\n```\nnode -v\n```\n\n第二步，清除node.js的cache：\n\n```\nsudo npm cache clean -f\n```\n\n第三步，安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 \"n\"\n\n```\nsudo npm install -g n\n```\n\n第四步，安装最新版本的node.js\n\n```\nsudo n stable\n```\n\n第五步，再次查看本机的node.js版本：\n\n```\nnode -v\n```\n\n第六步，更新npm到最新版：\n\n```\n$ sudo npm install npm@latest -g\n```\n\n第七步，验证\n\n\n\n```js\nnode -v\nnpm -v\n```\n\n \n\n","source":"_posts/study/MAC升级Nodejs和Npm到最新版.md","raw":"---\ntitle: MAC升级Nodejs和Npm到最新版\ncategories:\n  - study\n---\n今天使用HEXO  更新内容，发现node 版本太老了，所以就升级了下版本\n\n第一步，先查看本机node.js版本：\n\n```\nnode -v\n```\n\n第二步，清除node.js的cache：\n\n```\nsudo npm cache clean -f\n```\n\n第三步，安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 \"n\"\n\n```\nsudo npm install -g n\n```\n\n第四步，安装最新版本的node.js\n\n```\nsudo n stable\n```\n\n第五步，再次查看本机的node.js版本：\n\n```\nnode -v\n```\n\n第六步，更新npm到最新版：\n\n```\n$ sudo npm install npm@latest -g\n```\n\n第七步，验证\n\n\n\n```js\nnode -v\nnpm -v\n```\n\n \n\n","slug":"study/MAC升级Nodejs和Npm到最新版","published":1,"date":"2020-12-24T15:05:39.027Z","updated":"2020-12-24T16:01:00.455Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1op0008ap1i1n7h8nn6","content":"<p>今天使用HEXO  更新内容，发现node 版本太老了，所以就升级了下版本</p>\n<p>第一步，先查看本机node.js版本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>第二步，清除node.js的cache：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm cache clean -f</span><br></pre></td></tr></table></figure>\n<p>第三步，安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 “n”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g n</span><br></pre></td></tr></table></figure>\n<p>第四步，安装最新版本的node.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo n stable</span><br></pre></td></tr></table></figure>\n<p>第五步，再次查看本机的node.js版本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>第六步，更新npm到最新版：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo npm install npm@latest -g</span><br></pre></td></tr></table></figure>\n<p>第七步，验证</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>今天使用HEXO  更新内容，发现node 版本太老了，所以就升级了下版本</p>\n<p>第一步，先查看本机node.js版本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>第二步，清除node.js的cache：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm cache clean -f</span><br></pre></td></tr></table></figure>\n<p>第三步，安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 “n”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g n</span><br></pre></td></tr></table></figure>\n<p>第四步，安装最新版本的node.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo n stable</span><br></pre></td></tr></table></figure>\n<p>第五步，再次查看本机的node.js版本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>第六步，更新npm到最新版：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo npm install npm@latest -g</span><br></pre></td></tr></table></figure>\n<p>第七步，验证</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"X3 photo gallery 授权破解","_content":"## X3 photo gallery 另类破解\n\n这个软件用了很久，之前也用过破解版，但升级后接失效了，今天闲来无事，试着破解，搜索关键字，查看源码，自以为很简单，直接注销代码，看了下，底部链接是消失了，但是后来，点击上面的目录时才发现，会跳出授权经过....\n\n后来又试了另外的方法，终于成功了。就是把授权的文字直接把字体颜色改成背景色。具体方法如下：\n\n1.zai 源文件 templates 下76文件夹（因为通过搜索发现授权这行代码的class\"x3-footer-link\"在这个文件）\n\n![image-20201129184535600](https://raw.githubusercontent.com/markruan/cloudimg/master/img/image-20201129184535600.png)\n\n2.随便找一行代码，我是在131行 加入如下代码：\n\n```js\necho \"<style>.footer .x3-footer-link,.footer .x3-footer-link a {color:#e2d6d2;pointer-events: none;} </style>\";\n```\n\n 完成。\n\n方法很笨，但效果达到 \n\n \n\n\n\n","source":"_posts/study/X3 photo gallery 授权破解.md","raw":"---\ntitle: X3 photo gallery 授权破解\ncategories:\n  - study\ntag:\n  - 采坑\n---\n## X3 photo gallery 另类破解\n\n这个软件用了很久，之前也用过破解版，但升级后接失效了，今天闲来无事，试着破解，搜索关键字，查看源码，自以为很简单，直接注销代码，看了下，底部链接是消失了，但是后来，点击上面的目录时才发现，会跳出授权经过....\n\n后来又试了另外的方法，终于成功了。就是把授权的文字直接把字体颜色改成背景色。具体方法如下：\n\n1.zai 源文件 templates 下76文件夹（因为通过搜索发现授权这行代码的class\"x3-footer-link\"在这个文件）\n\n![image-20201129184535600](https://raw.githubusercontent.com/markruan/cloudimg/master/img/image-20201129184535600.png)\n\n2.随便找一行代码，我是在131行 加入如下代码：\n\n```js\necho \"<style>.footer .x3-footer-link,.footer .x3-footer-link a {color:#e2d6d2;pointer-events: none;} </style>\";\n```\n\n 完成。\n\n方法很笨，但效果达到 \n\n \n\n\n\n","slug":"study/X3 photo gallery 授权破解","published":1,"date":"2020-12-19T12:03:49.379Z","updated":"2020-12-24T16:01:48.487Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1ot0009ap1i4ttcf30s","content":"<h2 id=\"X3-photo-gallery-另类破解\"><a href=\"#X3-photo-gallery-另类破解\" class=\"headerlink\" title=\"X3 photo gallery 另类破解\"></a>X3 photo gallery 另类破解</h2><p>这个软件用了很久，之前也用过破解版，但升级后接失效了，今天闲来无事，试着破解，搜索关键字，查看源码，自以为很简单，直接注销代码，看了下，底部链接是消失了，但是后来，点击上面的目录时才发现，会跳出授权经过….</p>\n<p>后来又试了另外的方法，终于成功了。就是把授权的文字直接把字体颜色改成背景色。具体方法如下：</p>\n<p>1.zai 源文件 templates 下76文件夹（因为通过搜索发现授权这行代码的class”x3-footer-link”在这个文件）</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/image-20201129184535600.png\" alt=\"image-20201129184535600\"></p>\n<p>2.随便找一行代码，我是在131行 加入如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"string\">&quot;&lt;style&gt;.footer .x3-footer-link,.footer .x3-footer-link a &#123;color:#e2d6d2;pointer-events: none;&#125; &lt;/style&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p> 完成。</p>\n<p>方法很笨，但效果达到 </p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h2 id=\"X3-photo-gallery-另类破解\"><a href=\"#X3-photo-gallery-另类破解\" class=\"headerlink\" title=\"X3 photo gallery 另类破解\"></a>X3 photo gallery 另类破解</h2><p>这个软件用了很久，之前也用过破解版，但升级后接失效了，今天闲来无事，试着破解，搜索关键字，查看源码，自以为很简单，直接注销代码，看了下，底部链接是消失了，但是后来，点击上面的目录时才发现，会跳出授权经过….</p>\n<p>后来又试了另外的方法，终于成功了。就是把授权的文字直接把字体颜色改成背景色。具体方法如下：</p>\n<p>1.zai 源文件 templates 下76文件夹（因为通过搜索发现授权这行代码的class”x3-footer-link”在这个文件）</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/image-20201129184535600.png\" alt=\"image-20201129184535600\"></p>\n<p>2.随便找一行代码，我是在131行 加入如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"string\">&quot;&lt;style&gt;.footer .x3-footer-link,.footer .x3-footer-link a &#123;color:#e2d6d2;pointer-events: none;&#125; &lt;/style&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p> 完成。</p>\n<p>方法很笨，但效果达到 </p>\n"},{"title":"github 使用记录","_content":"\n使用github不是很久，把一些遇到的问题记录下来。\n\n**很简单的几个命令；**\n1：找到你要上传的文件夹，右键点击->选择git-bash-here;\n2：在弹出的命令窗口输入以下命令\n**git add .**\n我们知道git add命令是用来添加文件到缓存区的，这里使用 . 表示所有。所有这样就把所有的内容添加进去了\n**git commit -m “注释”**\n这表示提交到分支\n**git push origin master**\n把当前分支推送到远程仓库\n这样就可以了。\n下面再附上git的相关命令：\n**Git基本常用命令如下：**\n\nmkdir： XX (创建一个空目录 XX指目录名)\n\npwd： 显示当前目录的路径。\n\ngit init 把当前的目录变成可以管理的git仓库，生成隐藏.git文件。\n\ngit add XX 把xx文件添加到暂存区去。\n\ngit commit –m “XX” 提交文件 –m 后面的是注释。\n\ngit status 查看仓库状态\n\ngit diff XX 查看XX文件修改了那些内容\n\ngit log 查看历史记录\n\ngit reset –hard HEAD^ 或者 git reset –hard HEAD~ 回退到上一个版本\n\n```\n                    (如果想回退到100个版本，使用git reset –hard HEAD~100 )\n1\n```\n\ncat XX 查看XX文件内容\n\ngit reflog 查看历史记录的版本号id\n\ngit checkout — XX 把XX文件在工作区的修改全部撤销。\n\ngit rm XX 删除XX文件\n\ngit remote add origin https://github.com/zongyunqingfeng/testgit 关联一个远程库\n\ngit push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库\n\ngit clone https://github.com/zongyunqingfeng/testgit 从远程库中克隆\n\ngit checkout –b dev 创建dev分支 并切换到dev分支上\n\ngit branch 查看当前所有的分支\n\ngit checkout master 切换回master分支\n\ngit merge dev 在当前的分支上合并dev分支\n\ngit branch –d dev 删除dev分支\n\ngit branch name 创建分支\n\ngit stash 把当前的工作隐藏起来 等以后恢复现场后继续工作\n\ngit stash list 查看所有被隐藏的文件列表\n\ngit stash apply 恢复被隐藏的文件，但是内容不删除\n\ngit stash drop 删除文件\n\ngit stash pop 恢复文件的同时 也删除文件\n\ngit remote 查看远程库的信息\n\ngit remote –v 查看远程库的详细信息\n\ngit push origin master Git会把master分支推送到远程库对应的远程分支上\n\n\n\n在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决：\n\n首先进入你的master文件夹下, Git Bash Here ,打开命令窗口，以此输入以下命令：\n\n1. $ git --help 帮助命令\n2. $ git pull origin master 将远程仓库里面的项目拉下来\n3. $ dir 查看有哪些文件夹\n4. $ git rm -r --cached target 删除target文件\n5. $ git commit -m ‘删除了target’ 提交,添加操作说明","source":"_posts/study/github 使用记录.md","raw":"---\ntitle: github 使用记录\ntag:\n  - 采坑\ncategories:\n  - study\n---\n\n使用github不是很久，把一些遇到的问题记录下来。\n\n**很简单的几个命令；**\n1：找到你要上传的文件夹，右键点击->选择git-bash-here;\n2：在弹出的命令窗口输入以下命令\n**git add .**\n我们知道git add命令是用来添加文件到缓存区的，这里使用 . 表示所有。所有这样就把所有的内容添加进去了\n**git commit -m “注释”**\n这表示提交到分支\n**git push origin master**\n把当前分支推送到远程仓库\n这样就可以了。\n下面再附上git的相关命令：\n**Git基本常用命令如下：**\n\nmkdir： XX (创建一个空目录 XX指目录名)\n\npwd： 显示当前目录的路径。\n\ngit init 把当前的目录变成可以管理的git仓库，生成隐藏.git文件。\n\ngit add XX 把xx文件添加到暂存区去。\n\ngit commit –m “XX” 提交文件 –m 后面的是注释。\n\ngit status 查看仓库状态\n\ngit diff XX 查看XX文件修改了那些内容\n\ngit log 查看历史记录\n\ngit reset –hard HEAD^ 或者 git reset –hard HEAD~ 回退到上一个版本\n\n```\n                    (如果想回退到100个版本，使用git reset –hard HEAD~100 )\n1\n```\n\ncat XX 查看XX文件内容\n\ngit reflog 查看历史记录的版本号id\n\ngit checkout — XX 把XX文件在工作区的修改全部撤销。\n\ngit rm XX 删除XX文件\n\ngit remote add origin https://github.com/zongyunqingfeng/testgit 关联一个远程库\n\ngit push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库\n\ngit clone https://github.com/zongyunqingfeng/testgit 从远程库中克隆\n\ngit checkout –b dev 创建dev分支 并切换到dev分支上\n\ngit branch 查看当前所有的分支\n\ngit checkout master 切换回master分支\n\ngit merge dev 在当前的分支上合并dev分支\n\ngit branch –d dev 删除dev分支\n\ngit branch name 创建分支\n\ngit stash 把当前的工作隐藏起来 等以后恢复现场后继续工作\n\ngit stash list 查看所有被隐藏的文件列表\n\ngit stash apply 恢复被隐藏的文件，但是内容不删除\n\ngit stash drop 删除文件\n\ngit stash pop 恢复文件的同时 也删除文件\n\ngit remote 查看远程库的信息\n\ngit remote –v 查看远程库的详细信息\n\ngit push origin master Git会把master分支推送到远程库对应的远程分支上\n\n\n\n在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决：\n\n首先进入你的master文件夹下, Git Bash Here ,打开命令窗口，以此输入以下命令：\n\n1. $ git --help 帮助命令\n2. $ git pull origin master 将远程仓库里面的项目拉下来\n3. $ dir 查看有哪些文件夹\n4. $ git rm -r --cached target 删除target文件\n5. $ git commit -m ‘删除了target’ 提交,添加操作说明","slug":"study/github 使用记录","published":1,"date":"2020-12-19T13:11:29.812Z","updated":"2020-12-24T16:00:29.027Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1ow000cap1ie365530w","content":"<p>使用github不是很久，把一些遇到的问题记录下来。</p>\n<p><strong>很简单的几个命令；</strong><br>1：找到你要上传的文件夹，右键点击-&gt;选择git-bash-here;<br>2：在弹出的命令窗口输入以下命令<br><strong>git add .</strong><br>我们知道git add命令是用来添加文件到缓存区的，这里使用 . 表示所有。所有这样就把所有的内容添加进去了<br><strong>git commit -m “注释”</strong><br>这表示提交到分支<br><strong>git push origin master</strong><br>把当前分支推送到远程仓库<br>这样就可以了。<br>下面再附上git的相关命令：<br><strong>Git基本常用命令如下：</strong></p>\n<p>mkdir： XX (创建一个空目录 XX指目录名)</p>\n<p>pwd： 显示当前目录的路径。</p>\n<p>git init 把当前的目录变成可以管理的git仓库，生成隐藏.git文件。</p>\n<p>git add XX 把xx文件添加到暂存区去。</p>\n<p>git commit –m “XX” 提交文件 –m 后面的是注释。</p>\n<p>git status 查看仓库状态</p>\n<p>git diff XX 查看XX文件修改了那些内容</p>\n<p>git log 查看历史记录</p>\n<p>git reset –hard HEAD^ 或者 git reset –hard HEAD~ 回退到上一个版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                    (如果想回退到100个版本，使用git reset –hard HEAD~100 )</span><br><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p>cat XX 查看XX文件内容</p>\n<p>git reflog 查看历史记录的版本号id</p>\n<p>git checkout — XX 把XX文件在工作区的修改全部撤销。</p>\n<p>git rm XX 删除XX文件</p>\n<p>git remote add origin <a class=\"link\"   href=\"https://github.com/zongyunqingfeng/testgit\" >https://github.com/zongyunqingfeng/testgit<i class=\"fas fa-external-link-alt\"></i></a> 关联一个远程库</p>\n<p>git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库</p>\n<p>git clone <a class=\"link\"   href=\"https://github.com/zongyunqingfeng/testgit\" >https://github.com/zongyunqingfeng/testgit<i class=\"fas fa-external-link-alt\"></i></a> 从远程库中克隆</p>\n<p>git checkout –b dev 创建dev分支 并切换到dev分支上</p>\n<p>git branch 查看当前所有的分支</p>\n<p>git checkout master 切换回master分支</p>\n<p>git merge dev 在当前的分支上合并dev分支</p>\n<p>git branch –d dev 删除dev分支</p>\n<p>git branch name 创建分支</p>\n<p>git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作</p>\n<p>git stash list 查看所有被隐藏的文件列表</p>\n<p>git stash apply 恢复被隐藏的文件，但是内容不删除</p>\n<p>git stash drop 删除文件</p>\n<p>git stash pop 恢复文件的同时 也删除文件</p>\n<p>git remote 查看远程库的信息</p>\n<p>git remote –v 查看远程库的详细信息</p>\n<p>git push origin master Git会把master分支推送到远程库对应的远程分支上</p>\n<p>在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决：</p>\n<p>首先进入你的master文件夹下, Git Bash Here ,打开命令窗口，以此输入以下命令：</p>\n<ol>\n<li>$ git –help 帮助命令</li>\n<li>$ git pull origin master 将远程仓库里面的项目拉下来</li>\n<li>$ dir 查看有哪些文件夹</li>\n<li>$ git rm -r –cached target 删除target文件</li>\n<li>$ git commit -m ‘删除了target’ 提交,添加操作说明</li>\n</ol>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>使用github不是很久，把一些遇到的问题记录下来。</p>\n<p><strong>很简单的几个命令；</strong><br>1：找到你要上传的文件夹，右键点击-&gt;选择git-bash-here;<br>2：在弹出的命令窗口输入以下命令<br><strong>git add .</strong><br>我们知道git add命令是用来添加文件到缓存区的，这里使用 . 表示所有。所有这样就把所有的内容添加进去了<br><strong>git commit -m “注释”</strong><br>这表示提交到分支<br><strong>git push origin master</strong><br>把当前分支推送到远程仓库<br>这样就可以了。<br>下面再附上git的相关命令：<br><strong>Git基本常用命令如下：</strong></p>\n<p>mkdir： XX (创建一个空目录 XX指目录名)</p>\n<p>pwd： 显示当前目录的路径。</p>\n<p>git init 把当前的目录变成可以管理的git仓库，生成隐藏.git文件。</p>\n<p>git add XX 把xx文件添加到暂存区去。</p>\n<p>git commit –m “XX” 提交文件 –m 后面的是注释。</p>\n<p>git status 查看仓库状态</p>\n<p>git diff XX 查看XX文件修改了那些内容</p>\n<p>git log 查看历史记录</p>\n<p>git reset –hard HEAD^ 或者 git reset –hard HEAD~ 回退到上一个版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                    (如果想回退到100个版本，使用git reset –hard HEAD~100 )</span><br><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p>cat XX 查看XX文件内容</p>\n<p>git reflog 查看历史记录的版本号id</p>\n<p>git checkout — XX 把XX文件在工作区的修改全部撤销。</p>\n<p>git rm XX 删除XX文件</p>\n<p>git remote add origin <a class=\"link\"   href=\"https://github.com/zongyunqingfeng/testgit\" >https://github.com/zongyunqingfeng/testgit<i class=\"fas fa-external-link-alt\"></i></a> 关联一个远程库</p>\n<p>git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库</p>\n<p>git clone <a class=\"link\"   href=\"https://github.com/zongyunqingfeng/testgit\" >https://github.com/zongyunqingfeng/testgit<i class=\"fas fa-external-link-alt\"></i></a> 从远程库中克隆</p>\n<p>git checkout –b dev 创建dev分支 并切换到dev分支上</p>\n<p>git branch 查看当前所有的分支</p>\n<p>git checkout master 切换回master分支</p>\n<p>git merge dev 在当前的分支上合并dev分支</p>\n<p>git branch –d dev 删除dev分支</p>\n<p>git branch name 创建分支</p>\n<p>git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作</p>\n<p>git stash list 查看所有被隐藏的文件列表</p>\n<p>git stash apply 恢复被隐藏的文件，但是内容不删除</p>\n<p>git stash drop 删除文件</p>\n<p>git stash pop 恢复文件的同时 也删除文件</p>\n<p>git remote 查看远程库的信息</p>\n<p>git remote –v 查看远程库的详细信息</p>\n<p>git push origin master Git会把master分支推送到远程库对应的远程分支上</p>\n<p>在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决：</p>\n<p>首先进入你的master文件夹下, Git Bash Here ,打开命令窗口，以此输入以下命令：</p>\n<ol>\n<li>$ git –help 帮助命令</li>\n<li>$ git pull origin master 将远程仓库里面的项目拉下来</li>\n<li>$ dir 查看有哪些文件夹</li>\n<li>$ git rm -r –cached target 删除target文件</li>\n<li>$ git commit -m ‘删除了target’ 提交,添加操作说明</li>\n</ol>\n"},{"title":"particles.js","_content":"## particles.js学习\n\n  今天突发奇想优化下主题，想起了之前看过炫酷的星云效果，就搜索了下... \n\n效果见主页\n\n##  Installation\n\nTo install particles.js you can [download](https://github.com/marcbruederlin/particles.js/archive/master.zip) the latest version, install it via npm:\n\n```node\nnpm install particlesjs —-save\n```\n\nor use the CDN:\n\n```\nhttps://cdnjs.cloudflare.com/ajax/libs/particlesjs/2.2.2/particles.min.js\n```\n\n## Usage\n\n````html\n<body>\n  …   \n<script src=\n\"path/to/particles.min.js\"\n></script>\n</body>\n````\n\nAdd a canvas element to your markup (it should be the last element):\n\n```html\n<body>\n  …\n  \n<canvas class=\n\"background\"\n></canvas>\n  \n<script src=\n\"path/to/particles.min.js\"\n></script>\n</body>\n```\n\n\n\nAnd Initialize the plugin on DOM ready:\n\n```javascript\nwindow.onload = function() {\n    Particles. init\n        ({\n            selector: \n        '.background'\n          });\n};\n```\n\n\n\n## Options\n\n| Option           | Type               | Default | Description                                                  |\n| ---------------- | ------------------ | :-----: | ------------------------------------------------------------ |\n| selector         | string             |    -    | *Required:* CSS selector of your canvas element              |\n| maxParticles     | integer            |   100   | *Optional:* Maximum amount of particles                      |\n| sizeVariations   | integer            |    3    | *Optional:* Amount of size variations                        |\n| speed            | integer            |   0.5   | *Optional:* Movement speed of the particles                  |\n| color            | string or string[] | #000000 | *Optional:* Color(s) of the particles and connecting lines   |\n| minDistance      | integer            |   120   | *Optional:* Distance in px for connecting lines              |\n| connectParticles | boolean            |  false  | *Optional:* true/false if connecting lines should be drawn   |\n| responsive       | array              |  null   | *Optional:* Array of objects containing breakpoints and options |\n\n### Responsive option\n\nWith the responsive option, you can add or override options for different screen sizes:\n\n````json\nParticles. init ({ \n  // normal options\n  selector: '.background',\n  maxParticles:450,\n  \n// options for breakpoints\n  responsive: [\n    {\n      breakpoint: 768,\n      options: {\n        maxParticles: 200,\n        color: '#48F2E3',\n        connectParticles:false\n      }\n    }, {\n      breakpoint:425,\n      options: {\n        maxParticles: 100,\n        connectParticles: true\n      }\n    }, {\n      breakpoint: 320,\n      options: {\n        maxParticles:  0 // disables particles.js\n      }\n    }\n  ]\n});\n````\n\n\n\n## Methods\n\n| Method          | Description                         |\n| --------------- | ----------------------------------- |\n| pauseAnimation  | Pauses/stops the particle animation |\n| resumeAnimation | Continues the particle animation    |\n\n\n\n### Use the public methods\n\n \n\n \n\n ````json\nvar particles = Particles.init({\n// options\n});\n// E.g. gets called on a button click\nfunction pause () {\n  particles. pauseAnimation ();\n}\n// E.g. gets called on a button click\nfunction resume () {\n  particles. resumeAnimation ();\n}\n ````\n\n","source":"_posts/study/particles.js.md","raw":"---\ntitle: particles.js\ncategories:\n  - study\n---\n## particles.js学习\n\n  今天突发奇想优化下主题，想起了之前看过炫酷的星云效果，就搜索了下... \n\n效果见主页\n\n##  Installation\n\nTo install particles.js you can [download](https://github.com/marcbruederlin/particles.js/archive/master.zip) the latest version, install it via npm:\n\n```node\nnpm install particlesjs —-save\n```\n\nor use the CDN:\n\n```\nhttps://cdnjs.cloudflare.com/ajax/libs/particlesjs/2.2.2/particles.min.js\n```\n\n## Usage\n\n````html\n<body>\n  …   \n<script src=\n\"path/to/particles.min.js\"\n></script>\n</body>\n````\n\nAdd a canvas element to your markup (it should be the last element):\n\n```html\n<body>\n  …\n  \n<canvas class=\n\"background\"\n></canvas>\n  \n<script src=\n\"path/to/particles.min.js\"\n></script>\n</body>\n```\n\n\n\nAnd Initialize the plugin on DOM ready:\n\n```javascript\nwindow.onload = function() {\n    Particles. init\n        ({\n            selector: \n        '.background'\n          });\n};\n```\n\n\n\n## Options\n\n| Option           | Type               | Default | Description                                                  |\n| ---------------- | ------------------ | :-----: | ------------------------------------------------------------ |\n| selector         | string             |    -    | *Required:* CSS selector of your canvas element              |\n| maxParticles     | integer            |   100   | *Optional:* Maximum amount of particles                      |\n| sizeVariations   | integer            |    3    | *Optional:* Amount of size variations                        |\n| speed            | integer            |   0.5   | *Optional:* Movement speed of the particles                  |\n| color            | string or string[] | #000000 | *Optional:* Color(s) of the particles and connecting lines   |\n| minDistance      | integer            |   120   | *Optional:* Distance in px for connecting lines              |\n| connectParticles | boolean            |  false  | *Optional:* true/false if connecting lines should be drawn   |\n| responsive       | array              |  null   | *Optional:* Array of objects containing breakpoints and options |\n\n### Responsive option\n\nWith the responsive option, you can add or override options for different screen sizes:\n\n````json\nParticles. init ({ \n  // normal options\n  selector: '.background',\n  maxParticles:450,\n  \n// options for breakpoints\n  responsive: [\n    {\n      breakpoint: 768,\n      options: {\n        maxParticles: 200,\n        color: '#48F2E3',\n        connectParticles:false\n      }\n    }, {\n      breakpoint:425,\n      options: {\n        maxParticles: 100,\n        connectParticles: true\n      }\n    }, {\n      breakpoint: 320,\n      options: {\n        maxParticles:  0 // disables particles.js\n      }\n    }\n  ]\n});\n````\n\n\n\n## Methods\n\n| Method          | Description                         |\n| --------------- | ----------------------------------- |\n| pauseAnimation  | Pauses/stops the particle animation |\n| resumeAnimation | Continues the particle animation    |\n\n\n\n### Use the public methods\n\n \n\n \n\n ````json\nvar particles = Particles.init({\n// options\n});\n// E.g. gets called on a button click\nfunction pause () {\n  particles. pauseAnimation ();\n}\n// E.g. gets called on a button click\nfunction resume () {\n  particles. resumeAnimation ();\n}\n ````\n\n","slug":"study/particles.js","published":1,"date":"2020-12-19T12:03:49.380Z","updated":"2020-12-24T16:01:15.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1p3000eap1ig0bn2tv5","content":"<h2 id=\"particles-js学习\"><a href=\"#particles-js学习\" class=\"headerlink\" title=\"particles.js学习\"></a>particles.js学习</h2><p>  今天突发奇想优化下主题，想起了之前看过炫酷的星云效果，就搜索了下… </p>\n<p>效果见主页</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>To install particles.js you can <a class=\"link\"   href=\"https://github.com/marcbruederlin/particles.js/archive/master.zip\" >download<i class=\"fas fa-external-link-alt\"></i></a> the latest version, install it via npm:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install particlesjs —-save</span><br></pre></td></tr></table></figure>\n<p>or use the CDN:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;particlesjs&#x2F;2.2.2&#x2F;particles.min.js</span><br></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  …   </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=</span></span><br><span class=\"line\"><span class=\"tag\">&quot;<span class=\"attr\">path</span>/<span class=\"attr\">to</span>/<span class=\"attr\">particles.min.js</span>&quot;</span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Add a canvas element to your markup (it should be the last element):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=</span></span><br><span class=\"line\"><span class=\"tag\">&quot;<span class=\"attr\">background</span>&quot;</span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=</span></span><br><span class=\"line\"><span class=\"tag\">&quot;<span class=\"attr\">path</span>/<span class=\"attr\">to</span>/<span class=\"attr\">particles.min.js</span>&quot;</span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>And Initialize the plugin on DOM ready:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Particles. init</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            selector: </span><br><span class=\"line\">        <span class=\"string\">&#x27;.background&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th align=\"center\">Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>selector</td>\n<td>string</td>\n<td align=\"center\">-</td>\n<td><em>Required:</em> CSS selector of your canvas element</td>\n</tr>\n<tr>\n<td>maxParticles</td>\n<td>integer</td>\n<td align=\"center\">100</td>\n<td><em>Optional:</em> Maximum amount of particles</td>\n</tr>\n<tr>\n<td>sizeVariations</td>\n<td>integer</td>\n<td align=\"center\">3</td>\n<td><em>Optional:</em> Amount of size variations</td>\n</tr>\n<tr>\n<td>speed</td>\n<td>integer</td>\n<td align=\"center\">0.5</td>\n<td><em>Optional:</em> Movement speed of the particles</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string or string[]</td>\n<td align=\"center\">#000000</td>\n<td><em>Optional:</em> Color(s) of the particles and connecting lines</td>\n</tr>\n<tr>\n<td>minDistance</td>\n<td>integer</td>\n<td align=\"center\">120</td>\n<td><em>Optional:</em> Distance in px for connecting lines</td>\n</tr>\n<tr>\n<td>connectParticles</td>\n<td>boolean</td>\n<td align=\"center\">false</td>\n<td><em>Optional:</em> true/false if connecting lines should be drawn</td>\n</tr>\n<tr>\n<td>responsive</td>\n<td>array</td>\n<td align=\"center\">null</td>\n<td><em>Optional:</em> Array of objects containing breakpoints and options</td>\n</tr>\n</tbody></table>\n<h3 id=\"Responsive-option\"><a href=\"#Responsive-option\" class=\"headerlink\" title=\"Responsive option\"></a>Responsive option</h3><p>With the responsive option, you can add or override options for different screen sizes:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Particles. init (&#123; </span><br><span class=\"line\">  <span class=\"comment\">// normal options</span></span><br><span class=\"line\">  selector: &#x27;.background&#x27;,</span><br><span class=\"line\">  maxParticles:450,</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// options for breakpoints</span></span><br><span class=\"line\">  responsive: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      breakpoint: 768,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        maxParticles: 200,</span><br><span class=\"line\">        color: &#x27;#48F2E3&#x27;,</span><br><span class=\"line\">        connectParticles:false</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, &#123;</span><br><span class=\"line\">      breakpoint:425,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        maxParticles: 100,</span><br><span class=\"line\">        connectParticles: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, &#123;</span><br><span class=\"line\">      breakpoint: 320,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        maxParticles:  0 // disables particles.js</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Methods\"><a href=\"#Methods\" class=\"headerlink\" title=\"Methods\"></a>Methods</h2><table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pauseAnimation</td>\n<td>Pauses/stops the particle animation</td>\n</tr>\n<tr>\n<td>resumeAnimation</td>\n<td>Continues the particle animation</td>\n</tr>\n</tbody></table>\n<h3 id=\"Use-the-public-methods\"><a href=\"#Use-the-public-methods\" class=\"headerlink\" title=\"Use the public methods\"></a>Use the public methods</h3> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var particles = Particles.init(&#123;</span><br><span class=\"line\"><span class=\"comment\">// options</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// E.g. gets called on a button click</span></span><br><span class=\"line\">function pause () &#123;</span><br><span class=\"line\">  particles. pauseAnimation ();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// E.g. gets called on a button click</span></span><br><span class=\"line\">function resume () &#123;</span><br><span class=\"line\">  particles. resumeAnimation ();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h2 id=\"particles-js学习\"><a href=\"#particles-js学习\" class=\"headerlink\" title=\"particles.js学习\"></a>particles.js学习</h2><p>  今天突发奇想优化下主题，想起了之前看过炫酷的星云效果，就搜索了下… </p>\n<p>效果见主页</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>To install particles.js you can <a class=\"link\"   href=\"https://github.com/marcbruederlin/particles.js/archive/master.zip\" >download<i class=\"fas fa-external-link-alt\"></i></a> the latest version, install it via npm:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install particlesjs —-save</span><br></pre></td></tr></table></figure>\n<p>or use the CDN:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;particlesjs&#x2F;2.2.2&#x2F;particles.min.js</span><br></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  …   </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=</span></span><br><span class=\"line\"><span class=\"tag\">&quot;<span class=\"attr\">path</span>/<span class=\"attr\">to</span>/<span class=\"attr\">particles.min.js</span>&quot;</span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Add a canvas element to your markup (it should be the last element):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  …</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=</span></span><br><span class=\"line\"><span class=\"tag\">&quot;<span class=\"attr\">background</span>&quot;</span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=</span></span><br><span class=\"line\"><span class=\"tag\">&quot;<span class=\"attr\">path</span>/<span class=\"attr\">to</span>/<span class=\"attr\">particles.min.js</span>&quot;</span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>And Initialize the plugin on DOM ready:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Particles. init</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            selector: </span><br><span class=\"line\">        <span class=\"string\">&#x27;.background&#x27;</span></span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th align=\"center\">Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>selector</td>\n<td>string</td>\n<td align=\"center\">-</td>\n<td><em>Required:</em> CSS selector of your canvas element</td>\n</tr>\n<tr>\n<td>maxParticles</td>\n<td>integer</td>\n<td align=\"center\">100</td>\n<td><em>Optional:</em> Maximum amount of particles</td>\n</tr>\n<tr>\n<td>sizeVariations</td>\n<td>integer</td>\n<td align=\"center\">3</td>\n<td><em>Optional:</em> Amount of size variations</td>\n</tr>\n<tr>\n<td>speed</td>\n<td>integer</td>\n<td align=\"center\">0.5</td>\n<td><em>Optional:</em> Movement speed of the particles</td>\n</tr>\n<tr>\n<td>color</td>\n<td>string or string[]</td>\n<td align=\"center\">#000000</td>\n<td><em>Optional:</em> Color(s) of the particles and connecting lines</td>\n</tr>\n<tr>\n<td>minDistance</td>\n<td>integer</td>\n<td align=\"center\">120</td>\n<td><em>Optional:</em> Distance in px for connecting lines</td>\n</tr>\n<tr>\n<td>connectParticles</td>\n<td>boolean</td>\n<td align=\"center\">false</td>\n<td><em>Optional:</em> true/false if connecting lines should be drawn</td>\n</tr>\n<tr>\n<td>responsive</td>\n<td>array</td>\n<td align=\"center\">null</td>\n<td><em>Optional:</em> Array of objects containing breakpoints and options</td>\n</tr>\n</tbody></table>\n<h3 id=\"Responsive-option\"><a href=\"#Responsive-option\" class=\"headerlink\" title=\"Responsive option\"></a>Responsive option</h3><p>With the responsive option, you can add or override options for different screen sizes:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Particles. init (&#123; </span><br><span class=\"line\">  <span class=\"comment\">// normal options</span></span><br><span class=\"line\">  selector: &#x27;.background&#x27;,</span><br><span class=\"line\">  maxParticles:450,</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// options for breakpoints</span></span><br><span class=\"line\">  responsive: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      breakpoint: 768,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        maxParticles: 200,</span><br><span class=\"line\">        color: &#x27;#48F2E3&#x27;,</span><br><span class=\"line\">        connectParticles:false</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, &#123;</span><br><span class=\"line\">      breakpoint:425,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        maxParticles: 100,</span><br><span class=\"line\">        connectParticles: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, &#123;</span><br><span class=\"line\">      breakpoint: 320,</span><br><span class=\"line\">      options: &#123;</span><br><span class=\"line\">        maxParticles:  0 // disables particles.js</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Methods\"><a href=\"#Methods\" class=\"headerlink\" title=\"Methods\"></a>Methods</h2><table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pauseAnimation</td>\n<td>Pauses/stops the particle animation</td>\n</tr>\n<tr>\n<td>resumeAnimation</td>\n<td>Continues the particle animation</td>\n</tr>\n</tbody></table>\n<h3 id=\"Use-the-public-methods\"><a href=\"#Use-the-public-methods\" class=\"headerlink\" title=\"Use the public methods\"></a>Use the public methods</h3> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var particles = Particles.init(&#123;</span><br><span class=\"line\"><span class=\"comment\">// options</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// E.g. gets called on a button click</span></span><br><span class=\"line\">function pause () &#123;</span><br><span class=\"line\">  particles. pauseAnimation ();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// E.g. gets called on a button click</span></span><br><span class=\"line\">function resume () &#123;</span><br><span class=\"line\">  particles. resumeAnimation ();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"typora使用","_content":"## Typora介绍\n\nTypora是一款免费的轻量级Markdown编辑器，它没有[Mou](https://link.zhihu.com/?target=http%3A//25.io/mou/)，[Haroopad](https://link.zhihu.com/?target=http%3A//pad.haroopress.com/)等Markdown编辑器那么大名鼎鼎，但算是较为小众的一款产品。\n\nTypora作为一款离线Markdown无疑是非常棒的， 如果作为笔记工具的话，推荐你使用 cmd Markdown，因人而异。\n\n\n\n下载地址：**[Typora](https://link.zhihu.com/?target=https%3A//typora.io/)**\n\n@[TOC](https://link.zhihu.com/?target=https%3A//my.openwrite.cn/user/article/%E7%9B%AE%E5%BD%95%EF%BC%88Contens%EF%BC%89)\n\n## 标题\n\n\\#一阶标题 （快捷键Ctrl+1）\n\n\\##二阶标题 （快捷键Ctrl+2）\n\n\\###三阶标题 （快捷键Ctrl+3）\n\n\\####四阶标题 （快捷键Ctrl+4）\n\n\\#####五阶标题 （快捷键Ctrl+5）\n\n\\######六阶标题 （快捷键Ctrl+6）\n\n## 如何生成目录\n\n```text\n@[TOC]目录\n\n在文章开始地方输入[toc]，即可在对应位置插入目录\n@[TOC]目录\n\n以下不用写，直接写@[TOC](目录)即可自动获到目录中\n#一阶标题 （快捷键Ctrl+1）\n##二阶标题 （快捷键Ctrl+2）\n###三阶标题 （快捷键Ctrl+3）\n####四阶标题 （快捷键Ctrl+4）\n#####五阶标题 （快捷键Ctrl+5）\n######六阶标题 （快捷键Ctrl+6）\n注：凡是文章标题带有#（1-n个）的都会被捕获到目录中。\n```\n\n## 文本居中\n\n这是要居中的文本内容\\\n\n**注**：Typora目前并不会直接预览居中效果——相应的效果只有输出文本的时候才会显现。\n\n## 下划线\n\n下划线使用格式 下划线的内容<\\u> 或者快捷键Ctrl+U\n\n下划线在Typora显示形式是 这就是我亲测的下划线\n\n## 删除线\n\n删除线使用格式：~~ 删除线的内容\n\n## 字体加粗\n\n前面某个字段使用两个*，\\*加粗字体* 或者快捷键Ctrl+B\n\n## 字体倾斜\n\n使用一个”星“，*字体倾斜了* 或者快捷键Ctrl+I\n\n## 图片的插入\n\n直接拖你想要图片进来即可\n\n## 超链接\n\n- 使用快捷键Ctrl+K\n- 使用2个反斜杠\"\"，\n  [百度][[https://www.baidu.com/](https://link.zhihu.com/?target=https%3A//www.baidu.com/)]\n\n[百度一下](https://link.zhihu.com/?target=https%3A//www.baidu.com/)\n\n**注**：按住Ctrl键+点击上面链接就可以直接访问该链接\n\n## 代码区域\n\n三个反引号个（```）+编程语言即可\n\n```text\n//设置线程名字\nthread.setName(\"线程1\"); \nthread1.setName(\"线程2\");\n```\n\n## 表格的使用\n\n第一种：快捷键**Ctrl+T**\n\n第二种：|ID|name|age|回车即可\n\n学号姓名年龄20200506MarkerHunJava35\n\n## 任务列表\n\n\\- [ ] 文字 （**注**：注意用空格隔开）\n\n- [x] Java\n- [x] 大数据\n- [ ] 人工智能\n- [ ] 机器学习\n\n## 有序无序列表\n\n**创建无序列** :+ 、- 、* （后面加空格）\n\n**多行无序列表**:\n\n- Java\n\n- - 容器\n\n  - - HashMap\n\n**有序列表**:(1.)空格\n\n1. Java\n2. Biodata\n\n**多行有序列表：**\n\n```text\n1. Java\n2. Biodata\n    1. Java\n    2. Biodata\n```\n\n## 水平分割线\n\n```text\n***或者- - -\n```\n\n## 引用的使用格式\n\n```text\n>+空格\n```\n\n## 表情\n\n```text\n:单词\n```\n\n## 数学表达式\n\nTypora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染，数学公式分为两种参考**[Mathpix Snip](https://link.zhihu.com/?target=https%3A//mathpix.com/)**\n\n- 行内公式 `$ ... $`\n- 行间公式 `$$ ... $$`,（或者$$+回车）\n  **注**：行间公式形式是将数学式插在文本行之间（多行公式、公式组和微积分方程等复杂的数学式都是采用行间） **注**：行内公式形式是将数学式插入文本行之内（适合编写简 短的数学式） **如**：将公式插入到本行内，符号：`$公式内容$`，$xyz$或“$$”+回车即可\n\n\\#### 1、上标、下标、求和、括号、分式、根号\n\n**语法**：行内公式输入在两个`$$`之间，行外公公式`$$内容公式$$`或`$$`+回车即可输入。\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-fc1eb7e3e05ef1b0bbb7a47975db5de2_720w-20201107100422676.jpg)\n\n### 2、基本运算符\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-c3703593a2e990069e3834247b437206_720w-20201107100449798.jpg)\n\n### 3、三角函数、指数、对数\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f525471ca6da7be4fe0cfb25717b7411_720w-20201107100303444.jpg)\n\n### 4、高等数学相关运算符\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-a3e3be0b70dc25c0d09a22544136174f_720w-20201107100312691.jpg)\n\n### 6、希腊字母\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f8cf4f5d21042f66e5ecc0c4f1c415cb_720w-20201107100321024.jpg)\n\n### 甘特图\n\n~~~text\n```mermaid\n\tgantt\n\t        dateFormat  YYYY-MM-DD\n\t        title Adding GANTT diagram functionality to mermaid\n\t        section 现有任务\n\t        已完成               :done,    des1, 2019-09-02,220-01-20\n\t        进行中               :active,  des2, 2020-05-06, 3d\n\t        计划一               :         des3, after des2, 5d\n\t        计划二               :         des4, after des3, 5d\n　```\n~~~\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg)\n\n### Mermaid流程图\n\n~~~text\n```mermaid\n\tgraph LR\n\tgraph LR\n\tA[老鹰] -- 吃 --> B((小鸡))\n\tA -- 吃 --> C(蛇)\n\tB -- 吃--> D{虫}\n\tC --> D\n\t```\n~~~\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-10220c614d3474fbea35b656187271e9_720w-20201107100342942.jpg)\n\n[更多参考文档](https://link.zhihu.com/?target=https%3A//mermaid-js.github.io/mermaid/%23/)\n\n### Flowchart流程图\n\n![](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg)","source":"_posts/study/typora使用.md","raw":"---\ntitle: typora使用\ncategories:\n  - study\n---\n## Typora介绍\n\nTypora是一款免费的轻量级Markdown编辑器，它没有[Mou](https://link.zhihu.com/?target=http%3A//25.io/mou/)，[Haroopad](https://link.zhihu.com/?target=http%3A//pad.haroopress.com/)等Markdown编辑器那么大名鼎鼎，但算是较为小众的一款产品。\n\nTypora作为一款离线Markdown无疑是非常棒的， 如果作为笔记工具的话，推荐你使用 cmd Markdown，因人而异。\n\n\n\n下载地址：**[Typora](https://link.zhihu.com/?target=https%3A//typora.io/)**\n\n@[TOC](https://link.zhihu.com/?target=https%3A//my.openwrite.cn/user/article/%E7%9B%AE%E5%BD%95%EF%BC%88Contens%EF%BC%89)\n\n## 标题\n\n\\#一阶标题 （快捷键Ctrl+1）\n\n\\##二阶标题 （快捷键Ctrl+2）\n\n\\###三阶标题 （快捷键Ctrl+3）\n\n\\####四阶标题 （快捷键Ctrl+4）\n\n\\#####五阶标题 （快捷键Ctrl+5）\n\n\\######六阶标题 （快捷键Ctrl+6）\n\n## 如何生成目录\n\n```text\n@[TOC]目录\n\n在文章开始地方输入[toc]，即可在对应位置插入目录\n@[TOC]目录\n\n以下不用写，直接写@[TOC](目录)即可自动获到目录中\n#一阶标题 （快捷键Ctrl+1）\n##二阶标题 （快捷键Ctrl+2）\n###三阶标题 （快捷键Ctrl+3）\n####四阶标题 （快捷键Ctrl+4）\n#####五阶标题 （快捷键Ctrl+5）\n######六阶标题 （快捷键Ctrl+6）\n注：凡是文章标题带有#（1-n个）的都会被捕获到目录中。\n```\n\n## 文本居中\n\n这是要居中的文本内容\\\n\n**注**：Typora目前并不会直接预览居中效果——相应的效果只有输出文本的时候才会显现。\n\n## 下划线\n\n下划线使用格式 下划线的内容<\\u> 或者快捷键Ctrl+U\n\n下划线在Typora显示形式是 这就是我亲测的下划线\n\n## 删除线\n\n删除线使用格式：~~ 删除线的内容\n\n## 字体加粗\n\n前面某个字段使用两个*，\\*加粗字体* 或者快捷键Ctrl+B\n\n## 字体倾斜\n\n使用一个”星“，*字体倾斜了* 或者快捷键Ctrl+I\n\n## 图片的插入\n\n直接拖你想要图片进来即可\n\n## 超链接\n\n- 使用快捷键Ctrl+K\n- 使用2个反斜杠\"\"，\n  [百度][[https://www.baidu.com/](https://link.zhihu.com/?target=https%3A//www.baidu.com/)]\n\n[百度一下](https://link.zhihu.com/?target=https%3A//www.baidu.com/)\n\n**注**：按住Ctrl键+点击上面链接就可以直接访问该链接\n\n## 代码区域\n\n三个反引号个（```）+编程语言即可\n\n```text\n//设置线程名字\nthread.setName(\"线程1\"); \nthread1.setName(\"线程2\");\n```\n\n## 表格的使用\n\n第一种：快捷键**Ctrl+T**\n\n第二种：|ID|name|age|回车即可\n\n学号姓名年龄20200506MarkerHunJava35\n\n## 任务列表\n\n\\- [ ] 文字 （**注**：注意用空格隔开）\n\n- [x] Java\n- [x] 大数据\n- [ ] 人工智能\n- [ ] 机器学习\n\n## 有序无序列表\n\n**创建无序列** :+ 、- 、* （后面加空格）\n\n**多行无序列表**:\n\n- Java\n\n- - 容器\n\n  - - HashMap\n\n**有序列表**:(1.)空格\n\n1. Java\n2. Biodata\n\n**多行有序列表：**\n\n```text\n1. Java\n2. Biodata\n    1. Java\n    2. Biodata\n```\n\n## 水平分割线\n\n```text\n***或者- - -\n```\n\n## 引用的使用格式\n\n```text\n>+空格\n```\n\n## 表情\n\n```text\n:单词\n```\n\n## 数学表达式\n\nTypora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染，数学公式分为两种参考**[Mathpix Snip](https://link.zhihu.com/?target=https%3A//mathpix.com/)**\n\n- 行内公式 `$ ... $`\n- 行间公式 `$$ ... $$`,（或者$$+回车）\n  **注**：行间公式形式是将数学式插在文本行之间（多行公式、公式组和微积分方程等复杂的数学式都是采用行间） **注**：行内公式形式是将数学式插入文本行之内（适合编写简 短的数学式） **如**：将公式插入到本行内，符号：`$公式内容$`，$xyz$或“$$”+回车即可\n\n\\#### 1、上标、下标、求和、括号、分式、根号\n\n**语法**：行内公式输入在两个`$$`之间，行外公公式`$$内容公式$$`或`$$`+回车即可输入。\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-fc1eb7e3e05ef1b0bbb7a47975db5de2_720w-20201107100422676.jpg)\n\n### 2、基本运算符\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-c3703593a2e990069e3834247b437206_720w-20201107100449798.jpg)\n\n### 3、三角函数、指数、对数\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f525471ca6da7be4fe0cfb25717b7411_720w-20201107100303444.jpg)\n\n### 4、高等数学相关运算符\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-a3e3be0b70dc25c0d09a22544136174f_720w-20201107100312691.jpg)\n\n### 6、希腊字母\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f8cf4f5d21042f66e5ecc0c4f1c415cb_720w-20201107100321024.jpg)\n\n### 甘特图\n\n~~~text\n```mermaid\n\tgantt\n\t        dateFormat  YYYY-MM-DD\n\t        title Adding GANTT diagram functionality to mermaid\n\t        section 现有任务\n\t        已完成               :done,    des1, 2019-09-02,220-01-20\n\t        进行中               :active,  des2, 2020-05-06, 3d\n\t        计划一               :         des3, after des2, 5d\n\t        计划二               :         des4, after des3, 5d\n　```\n~~~\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg)\n\n### Mermaid流程图\n\n~~~text\n```mermaid\n\tgraph LR\n\tgraph LR\n\tA[老鹰] -- 吃 --> B((小鸡))\n\tA -- 吃 --> C(蛇)\n\tB -- 吃--> D{虫}\n\tC --> D\n\t```\n~~~\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-10220c614d3474fbea35b656187271e9_720w-20201107100342942.jpg)\n\n[更多参考文档](https://link.zhihu.com/?target=https%3A//mermaid-js.github.io/mermaid/%23/)\n\n### Flowchart流程图\n\n![](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg)","slug":"study/typora使用","published":1,"date":"2020-12-19T12:03:49.381Z","updated":"2020-12-24T16:01:30.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1p9000gap1i61ua1nw3","content":"<h2 id=\"Typora介绍\"><a href=\"#Typora介绍\" class=\"headerlink\" title=\"Typora介绍\"></a>Typora介绍</h2><p>Typora是一款免费的轻量级Markdown编辑器，它没有<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://25.io/mou/\" >Mou<i class=\"fas fa-external-link-alt\"></i></a>，<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://pad.haroopress.com/\" >Haroopad<i class=\"fas fa-external-link-alt\"></i></a>等Markdown编辑器那么大名鼎鼎，但算是较为小众的一款产品。</p>\n<p>Typora作为一款离线Markdown无疑是非常棒的， 如果作为笔记工具的话，推荐你使用 cmd Markdown，因人而异。</p>\n<p>下载地址：**<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://typora.io/\" >Typora<i class=\"fas fa-external-link-alt\"></i></a>**</p>\n<p>@<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://my.openwrite.cn/user/article/%E7%9B%AE%E5%BD%95%EF%BC%88Contens%EF%BC%89\" >TOC<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><p>#一阶标题 （快捷键Ctrl+1）</p>\n<p>##二阶标题 （快捷键Ctrl+2）</p>\n<p>###三阶标题 （快捷键Ctrl+3）</p>\n<p>####四阶标题 （快捷键Ctrl+4）</p>\n<p>#####五阶标题 （快捷键Ctrl+5）</p>\n<p>######六阶标题 （快捷键Ctrl+6）</p>\n<h2 id=\"如何生成目录\"><a href=\"#如何生成目录\" class=\"headerlink\" title=\"如何生成目录\"></a>如何生成目录</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@[TOC]目录</span><br><span class=\"line\"></span><br><span class=\"line\">在文章开始地方输入[toc]，即可在对应位置插入目录</span><br><span class=\"line\">@[TOC]目录</span><br><span class=\"line\"></span><br><span class=\"line\">以下不用写，直接写@[TOC](目录)即可自动获到目录中</span><br><span class=\"line\">#一阶标题 （快捷键Ctrl+1）</span><br><span class=\"line\">##二阶标题 （快捷键Ctrl+2）</span><br><span class=\"line\">###三阶标题 （快捷键Ctrl+3）</span><br><span class=\"line\">####四阶标题 （快捷键Ctrl+4）</span><br><span class=\"line\">#####五阶标题 （快捷键Ctrl+5）</span><br><span class=\"line\">######六阶标题 （快捷键Ctrl+6）</span><br><span class=\"line\">注：凡是文章标题带有#（1-n个）的都会被捕获到目录中。</span><br></pre></td></tr></table></figure>\n<h2 id=\"文本居中\"><a href=\"#文本居中\" class=\"headerlink\" title=\"文本居中\"></a>文本居中</h2><p>这是要居中的文本内容\\</p>\n<p><strong>注</strong>：Typora目前并不会直接预览居中效果——相应的效果只有输出文本的时候才会显现。</p>\n<h2 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h2><p>下划线使用格式 下划线的内容&lt;\\u&gt; 或者快捷键Ctrl+U</p>\n<p>下划线在Typora显示形式是 这就是我亲测的下划线</p>\n<h2 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h2><p>删除线使用格式：~~ 删除线的内容</p>\n<h2 id=\"字体加粗\"><a href=\"#字体加粗\" class=\"headerlink\" title=\"字体加粗\"></a>字体加粗</h2><p>前面某个字段使用两个<em>，\\</em>加粗字体* 或者快捷键Ctrl+B</p>\n<h2 id=\"字体倾斜\"><a href=\"#字体倾斜\" class=\"headerlink\" title=\"字体倾斜\"></a>字体倾斜</h2><p>使用一个”星“，<em>字体倾斜了</em> 或者快捷键Ctrl+I</p>\n<h2 id=\"图片的插入\"><a href=\"#图片的插入\" class=\"headerlink\" title=\"图片的插入\"></a>图片的插入</h2><p>直接拖你想要图片进来即可</p>\n<h2 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h2><ul>\n<li>使用快捷键Ctrl+K</li>\n<li>使用2个反斜杠””，<br>[百度][<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.baidu.com/\" >https://www.baidu.com/<i class=\"fas fa-external-link-alt\"></i></a>]</li>\n</ul>\n<p><a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.baidu.com/\" >百度一下<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><strong>注</strong>：按住Ctrl键+点击上面链接就可以直接访问该链接</p>\n<h2 id=\"代码区域\"><a href=\"#代码区域\" class=\"headerlink\" title=\"代码区域\"></a>代码区域</h2><p>三个反引号个（```）+编程语言即可</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//设置线程名字</span><br><span class=\"line\">thread.setName(&quot;线程1&quot;); </span><br><span class=\"line\">thread1.setName(&quot;线程2&quot;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"表格的使用\"><a href=\"#表格的使用\" class=\"headerlink\" title=\"表格的使用\"></a>表格的使用</h2><p>第一种：快捷键<strong>Ctrl+T</strong></p>\n<p>第二种：|ID|name|age|回车即可</p>\n<p>学号姓名年龄20200506MarkerHunJava35</p>\n<h2 id=\"任务列表\"><a href=\"#任务列表\" class=\"headerlink\" title=\"任务列表\"></a>任务列表</h2><p>- [ ] 文字 （<strong>注</strong>：注意用空格隔开）</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Java</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 大数据</li>\n<li><input disabled=\"\" type=\"checkbox\"> 人工智能</li>\n<li><input disabled=\"\" type=\"checkbox\"> 机器学习</li>\n</ul>\n<h2 id=\"有序无序列表\"><a href=\"#有序无序列表\" class=\"headerlink\" title=\"有序无序列表\"></a>有序无序列表</h2><p><strong>创建无序列</strong> :+ 、- 、* （后面加空格）</p>\n<p><strong>多行无序列表</strong>:</p>\n<ul>\n<li><p>Java</p>\n</li>\n<li><ul>\n<li><p>容器</p>\n</li>\n<li><ul>\n<li>HashMap</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>有序列表</strong>:(1.)空格</p>\n<ol>\n<li>Java</li>\n<li>Biodata</li>\n</ol>\n<p><strong>多行有序列表：</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. Java</span><br><span class=\"line\">2. Biodata</span><br><span class=\"line\">    1. Java</span><br><span class=\"line\">    2. Biodata</span><br></pre></td></tr></table></figure>\n<h2 id=\"水平分割线\"><a href=\"#水平分割线\" class=\"headerlink\" title=\"水平分割线\"></a>水平分割线</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">***或者- - -</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用的使用格式\"><a href=\"#引用的使用格式\" class=\"headerlink\" title=\"引用的使用格式\"></a>引用的使用格式</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;+空格</span><br></pre></td></tr></table></figure>\n<h2 id=\"表情\"><a href=\"#表情\" class=\"headerlink\" title=\"表情\"></a>表情</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:单词</span><br></pre></td></tr></table></figure>\n<h2 id=\"数学表达式\"><a href=\"#数学表达式\" class=\"headerlink\" title=\"数学表达式\"></a>数学表达式</h2><p>Typora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染，数学公式分为两种参考**<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://mathpix.com/\" >Mathpix Snip<i class=\"fas fa-external-link-alt\"></i></a>**</p>\n<ul>\n<li>行内公式 <code>$ ... $</code></li>\n<li>行间公式 <code>$$ ... $$</code>,（或者$$+回车）<br><strong>注</strong>：行间公式形式是将数学式插在文本行之间（多行公式、公式组和微积分方程等复杂的数学式都是采用行间） <strong>注</strong>：行内公式形式是将数学式插入文本行之内（适合编写简 短的数学式） <strong>如</strong>：将公式插入到本行内，符号：<code>$公式内容$</code>，$xyz$或“$$”+回车即可</li>\n</ul>\n<p>#### 1、上标、下标、求和、括号、分式、根号</p>\n<p><strong>语法</strong>：行内公式输入在两个<code>$$</code>之间，行外公公式<code>$$内容公式$$</code>或<code>$$</code>+回车即可输入。</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-fc1eb7e3e05ef1b0bbb7a47975db5de2_720w-20201107100422676.jpg\" alt=\"img\"></p>\n<h3 id=\"2、基本运算符\"><a href=\"#2、基本运算符\" class=\"headerlink\" title=\"2、基本运算符\"></a>2、基本运算符</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-c3703593a2e990069e3834247b437206_720w-20201107100449798.jpg\" alt=\"img\"></p>\n<h3 id=\"3、三角函数、指数、对数\"><a href=\"#3、三角函数、指数、对数\" class=\"headerlink\" title=\"3、三角函数、指数、对数\"></a>3、三角函数、指数、对数</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f525471ca6da7be4fe0cfb25717b7411_720w-20201107100303444.jpg\" alt=\"img\"></p>\n<h3 id=\"4、高等数学相关运算符\"><a href=\"#4、高等数学相关运算符\" class=\"headerlink\" title=\"4、高等数学相关运算符\"></a>4、高等数学相关运算符</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-a3e3be0b70dc25c0d09a22544136174f_720w-20201107100312691.jpg\" alt=\"img\"></p>\n<h3 id=\"6、希腊字母\"><a href=\"#6、希腊字母\" class=\"headerlink\" title=\"6、希腊字母\"></a>6、希腊字母</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f8cf4f5d21042f66e5ecc0c4f1c415cb_720w-20201107100321024.jpg\" alt=\"img\"></p>\n<h3 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h3><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```mermaid</span><br><span class=\"line\">\tgantt</span><br><span class=\"line\">\t        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">\t        title Adding GANTT diagram functionality to mermaid</span><br><span class=\"line\">\t        section 现有任务</span><br><span class=\"line\">\t        已完成               :done,    des1, 2019-09-02,220-01-20</span><br><span class=\"line\">\t        进行中               :active,  des2, 2020-05-06, 3d</span><br><span class=\"line\">\t        计划一               :         des3, after des2, 5d</span><br><span class=\"line\">\t        计划二               :         des4, after des3, 5d</span><br><span class=\"line\">　```</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg\" alt=\"img\"></p>\n<h3 id=\"Mermaid流程图\"><a href=\"#Mermaid流程图\" class=\"headerlink\" title=\"Mermaid流程图\"></a>Mermaid流程图</h3><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```mermaid</span><br><span class=\"line\">\tgraph LR</span><br><span class=\"line\">\tgraph LR</span><br><span class=\"line\">\tA[老鹰] -- 吃 --&gt; B((小鸡))</span><br><span class=\"line\">\tA -- 吃 --&gt; C(蛇)</span><br><span class=\"line\">\tB -- 吃--&gt; D&#123;虫&#125;</span><br><span class=\"line\">\tC --&gt; D</span><br><span class=\"line\">\t```</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-10220c614d3474fbea35b656187271e9_720w-20201107100342942.jpg\" alt=\"img\"></p>\n<p><a class=\"link\"   href=\"https://link.zhihu.com/?target=https://mermaid-js.github.io/mermaid/%23/\" >更多参考文档<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"Flowchart流程图\"><a href=\"#Flowchart流程图\" class=\"headerlink\" title=\"Flowchart流程图\"></a>Flowchart流程图</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg\"></p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h2 id=\"Typora介绍\"><a href=\"#Typora介绍\" class=\"headerlink\" title=\"Typora介绍\"></a>Typora介绍</h2><p>Typora是一款免费的轻量级Markdown编辑器，它没有<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://25.io/mou/\" >Mou<i class=\"fas fa-external-link-alt\"></i></a>，<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://pad.haroopress.com/\" >Haroopad<i class=\"fas fa-external-link-alt\"></i></a>等Markdown编辑器那么大名鼎鼎，但算是较为小众的一款产品。</p>\n<p>Typora作为一款离线Markdown无疑是非常棒的， 如果作为笔记工具的话，推荐你使用 cmd Markdown，因人而异。</p>\n<p>下载地址：**<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://typora.io/\" >Typora<i class=\"fas fa-external-link-alt\"></i></a>**</p>\n<p>@<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://my.openwrite.cn/user/article/%E7%9B%AE%E5%BD%95%EF%BC%88Contens%EF%BC%89\" >TOC<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><p>#一阶标题 （快捷键Ctrl+1）</p>\n<p>##二阶标题 （快捷键Ctrl+2）</p>\n<p>###三阶标题 （快捷键Ctrl+3）</p>\n<p>####四阶标题 （快捷键Ctrl+4）</p>\n<p>#####五阶标题 （快捷键Ctrl+5）</p>\n<p>######六阶标题 （快捷键Ctrl+6）</p>\n<h2 id=\"如何生成目录\"><a href=\"#如何生成目录\" class=\"headerlink\" title=\"如何生成目录\"></a>如何生成目录</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@[TOC]目录</span><br><span class=\"line\"></span><br><span class=\"line\">在文章开始地方输入[toc]，即可在对应位置插入目录</span><br><span class=\"line\">@[TOC]目录</span><br><span class=\"line\"></span><br><span class=\"line\">以下不用写，直接写@[TOC](目录)即可自动获到目录中</span><br><span class=\"line\">#一阶标题 （快捷键Ctrl+1）</span><br><span class=\"line\">##二阶标题 （快捷键Ctrl+2）</span><br><span class=\"line\">###三阶标题 （快捷键Ctrl+3）</span><br><span class=\"line\">####四阶标题 （快捷键Ctrl+4）</span><br><span class=\"line\">#####五阶标题 （快捷键Ctrl+5）</span><br><span class=\"line\">######六阶标题 （快捷键Ctrl+6）</span><br><span class=\"line\">注：凡是文章标题带有#（1-n个）的都会被捕获到目录中。</span><br></pre></td></tr></table></figure>\n<h2 id=\"文本居中\"><a href=\"#文本居中\" class=\"headerlink\" title=\"文本居中\"></a>文本居中</h2><p>这是要居中的文本内容\\</p>\n<p><strong>注</strong>：Typora目前并不会直接预览居中效果——相应的效果只有输出文本的时候才会显现。</p>\n<h2 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h2><p>下划线使用格式 下划线的内容&lt;\\u&gt; 或者快捷键Ctrl+U</p>\n<p>下划线在Typora显示形式是 这就是我亲测的下划线</p>\n<h2 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h2><p>删除线使用格式：~~ 删除线的内容</p>\n<h2 id=\"字体加粗\"><a href=\"#字体加粗\" class=\"headerlink\" title=\"字体加粗\"></a>字体加粗</h2><p>前面某个字段使用两个<em>，\\</em>加粗字体* 或者快捷键Ctrl+B</p>\n<h2 id=\"字体倾斜\"><a href=\"#字体倾斜\" class=\"headerlink\" title=\"字体倾斜\"></a>字体倾斜</h2><p>使用一个”星“，<em>字体倾斜了</em> 或者快捷键Ctrl+I</p>\n<h2 id=\"图片的插入\"><a href=\"#图片的插入\" class=\"headerlink\" title=\"图片的插入\"></a>图片的插入</h2><p>直接拖你想要图片进来即可</p>\n<h2 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h2><ul>\n<li>使用快捷键Ctrl+K</li>\n<li>使用2个反斜杠””，<br>[百度][<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.baidu.com/\" >https://www.baidu.com/<i class=\"fas fa-external-link-alt\"></i></a>]</li>\n</ul>\n<p><a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.baidu.com/\" >百度一下<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><strong>注</strong>：按住Ctrl键+点击上面链接就可以直接访问该链接</p>\n<h2 id=\"代码区域\"><a href=\"#代码区域\" class=\"headerlink\" title=\"代码区域\"></a>代码区域</h2><p>三个反引号个（```）+编程语言即可</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//设置线程名字</span><br><span class=\"line\">thread.setName(&quot;线程1&quot;); </span><br><span class=\"line\">thread1.setName(&quot;线程2&quot;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"表格的使用\"><a href=\"#表格的使用\" class=\"headerlink\" title=\"表格的使用\"></a>表格的使用</h2><p>第一种：快捷键<strong>Ctrl+T</strong></p>\n<p>第二种：|ID|name|age|回车即可</p>\n<p>学号姓名年龄20200506MarkerHunJava35</p>\n<h2 id=\"任务列表\"><a href=\"#任务列表\" class=\"headerlink\" title=\"任务列表\"></a>任务列表</h2><p>- [ ] 文字 （<strong>注</strong>：注意用空格隔开）</p>\n<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Java</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 大数据</li>\n<li><input disabled=\"\" type=\"checkbox\"> 人工智能</li>\n<li><input disabled=\"\" type=\"checkbox\"> 机器学习</li>\n</ul>\n<h2 id=\"有序无序列表\"><a href=\"#有序无序列表\" class=\"headerlink\" title=\"有序无序列表\"></a>有序无序列表</h2><p><strong>创建无序列</strong> :+ 、- 、* （后面加空格）</p>\n<p><strong>多行无序列表</strong>:</p>\n<ul>\n<li><p>Java</p>\n</li>\n<li><ul>\n<li><p>容器</p>\n</li>\n<li><ul>\n<li>HashMap</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>有序列表</strong>:(1.)空格</p>\n<ol>\n<li>Java</li>\n<li>Biodata</li>\n</ol>\n<p><strong>多行有序列表：</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. Java</span><br><span class=\"line\">2. Biodata</span><br><span class=\"line\">    1. Java</span><br><span class=\"line\">    2. Biodata</span><br></pre></td></tr></table></figure>\n<h2 id=\"水平分割线\"><a href=\"#水平分割线\" class=\"headerlink\" title=\"水平分割线\"></a>水平分割线</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">***或者- - -</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用的使用格式\"><a href=\"#引用的使用格式\" class=\"headerlink\" title=\"引用的使用格式\"></a>引用的使用格式</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;+空格</span><br></pre></td></tr></table></figure>\n<h2 id=\"表情\"><a href=\"#表情\" class=\"headerlink\" title=\"表情\"></a>表情</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:单词</span><br></pre></td></tr></table></figure>\n<h2 id=\"数学表达式\"><a href=\"#数学表达式\" class=\"headerlink\" title=\"数学表达式\"></a>数学表达式</h2><p>Typora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染，数学公式分为两种参考**<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://mathpix.com/\" >Mathpix Snip<i class=\"fas fa-external-link-alt\"></i></a>**</p>\n<ul>\n<li>行内公式 <code>$ ... $</code></li>\n<li>行间公式 <code>$$ ... $$</code>,（或者$$+回车）<br><strong>注</strong>：行间公式形式是将数学式插在文本行之间（多行公式、公式组和微积分方程等复杂的数学式都是采用行间） <strong>注</strong>：行内公式形式是将数学式插入文本行之内（适合编写简 短的数学式） <strong>如</strong>：将公式插入到本行内，符号：<code>$公式内容$</code>，$xyz$或“$$”+回车即可</li>\n</ul>\n<p>#### 1、上标、下标、求和、括号、分式、根号</p>\n<p><strong>语法</strong>：行内公式输入在两个<code>$$</code>之间，行外公公式<code>$$内容公式$$</code>或<code>$$</code>+回车即可输入。</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-fc1eb7e3e05ef1b0bbb7a47975db5de2_720w-20201107100422676.jpg\" alt=\"img\"></p>\n<h3 id=\"2、基本运算符\"><a href=\"#2、基本运算符\" class=\"headerlink\" title=\"2、基本运算符\"></a>2、基本运算符</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-c3703593a2e990069e3834247b437206_720w-20201107100449798.jpg\" alt=\"img\"></p>\n<h3 id=\"3、三角函数、指数、对数\"><a href=\"#3、三角函数、指数、对数\" class=\"headerlink\" title=\"3、三角函数、指数、对数\"></a>3、三角函数、指数、对数</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f525471ca6da7be4fe0cfb25717b7411_720w-20201107100303444.jpg\" alt=\"img\"></p>\n<h3 id=\"4、高等数学相关运算符\"><a href=\"#4、高等数学相关运算符\" class=\"headerlink\" title=\"4、高等数学相关运算符\"></a>4、高等数学相关运算符</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-a3e3be0b70dc25c0d09a22544136174f_720w-20201107100312691.jpg\" alt=\"img\"></p>\n<h3 id=\"6、希腊字母\"><a href=\"#6、希腊字母\" class=\"headerlink\" title=\"6、希腊字母\"></a>6、希腊字母</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f8cf4f5d21042f66e5ecc0c4f1c415cb_720w-20201107100321024.jpg\" alt=\"img\"></p>\n<h3 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a>甘特图</h3><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```mermaid</span><br><span class=\"line\">\tgantt</span><br><span class=\"line\">\t        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">\t        title Adding GANTT diagram functionality to mermaid</span><br><span class=\"line\">\t        section 现有任务</span><br><span class=\"line\">\t        已完成               :done,    des1, 2019-09-02,220-01-20</span><br><span class=\"line\">\t        进行中               :active,  des2, 2020-05-06, 3d</span><br><span class=\"line\">\t        计划一               :         des3, after des2, 5d</span><br><span class=\"line\">\t        计划二               :         des4, after des3, 5d</span><br><span class=\"line\">　```</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg\" alt=\"img\"></p>\n<h3 id=\"Mermaid流程图\"><a href=\"#Mermaid流程图\" class=\"headerlink\" title=\"Mermaid流程图\"></a>Mermaid流程图</h3><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```mermaid</span><br><span class=\"line\">\tgraph LR</span><br><span class=\"line\">\tgraph LR</span><br><span class=\"line\">\tA[老鹰] -- 吃 --&gt; B((小鸡))</span><br><span class=\"line\">\tA -- 吃 --&gt; C(蛇)</span><br><span class=\"line\">\tB -- 吃--&gt; D&#123;虫&#125;</span><br><span class=\"line\">\tC --&gt; D</span><br><span class=\"line\">\t```</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-10220c614d3474fbea35b656187271e9_720w-20201107100342942.jpg\" alt=\"img\"></p>\n<p><a class=\"link\"   href=\"https://link.zhihu.com/?target=https://mermaid-js.github.io/mermaid/%23/\" >更多参考文档<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"Flowchart流程图\"><a href=\"#Flowchart流程图\" class=\"headerlink\" title=\"Flowchart流程图\"></a>Flowchart流程图</h3><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg\"></p>\n"},{"title":"利用css媒体查询media","_content":"\n\n\n为了实现手机与电脑网页宽度自适应，在css3中新增了 media query属性用于增强media type属性。因此当css3问世后，使media type可以进行条件判断输出对应的css。\n\n核心代码：\n\n```css\n <style>\n .wap{display: none;}\n @media screen and (max-width:768px){\n    .wrap{display: none;}\n    .wap{display: block;}\n }\n </style>\n```\n\nwap是手机端的的css最外的盒子；wrap是pc端对外的盒子；@media screen and (max-width:768px)的意思是当屏幕的分辨率低于768px的时候css生效，这个媒体外部的全部css不生效；\n\n因此，当设备分辨率为手机，媒体里面的手机端的css自动生效，当分辨率大于768px时，css就自动渲染外部的css。\n\n**@media具体语法：**\n\n```css\n@media screen and (min-width: 769px) {\n    /* CSS样式定义部分 */\n}\n@media screen and (min-device-width: 481px) and (max-device-width: 768px) {\n    /* CSS样式定义部分 */\n}\n@media only screen and (max-device-width: 480px) {\n    /* CSS样式定义部分 */\n}\n```\n\n**一、判断不同的显示设备，跳转到不同的网页。**\n\n```css\n<link rel=\"alternate\" media=\"only screen and (max-width: 640px)\" href=\"https://x.iqimeng.com/\">\n```\n\n\n\n**二、判断媒体类型，引用不同的样式表**\n\n```css\n<link rel=”stylesheet” media=”screen and (判断条件)” herf=”需要调用的样式表文件” />\n```\n\n通过设定屏幕的判断条件，调用对应的css文件。该实例多用于整页面不同风格的css调用与选取，使用该方法可能需要为一个页面制作多份个css文件。\n\n**三、判断媒体横向与纵向，引用不同的样式**\n\n```css\n@media screen and (orientation:portrait){横向样式}\n@media screen and (orientation:landscape){纵向样式}\n```\n\n**四、判断媒体类型，执行不同的css样式属性**\n\n```css\n@media screen and (max-width:240px){\n.box{width:200px;}\n.title{color:red;}\n}\n```\n\nBootstrap响应式设计中几个临界点的分辨率，运用这几个分辨率，我们就可以轻松的用CSS3来写自己的自适应代码了\n\n```css\n@media (min-width: 768px){ //>=768的设备 }\n@media (min-width: 992px){ //>=992的设备 }\n@media (min-width: 1200px){//>=1200的设备}\n```\n\n注意下顺序，如果你把@media (min-width: 768px)写在了下面那么就会出错，因为如果是1440,由于1440>768那么你的1200就会失效。\n\n所以我们用min-width时，小的放上面大的在下面，同理如果是用max-width那么就是大的在上面，小的在下面\n\n```css\n@media (max-width: 1199px){//<=1199的设备}\n@media (max-width: 991px){ //<=991的设备 }\n@media (max-width: 767px){ //<=768的设备 }\n```\n\n\n\n重要的内容重复3次：顺序是min-width从小到大，max-width从大到小。\n\n","source":"_posts/study/利用css媒体查询media.md","raw":"---\ntitle: 利用css媒体查询media\ntags:\n  - html\n  - css\ncategories:\n  - study\n---\n\n\n\n为了实现手机与电脑网页宽度自适应，在css3中新增了 media query属性用于增强media type属性。因此当css3问世后，使media type可以进行条件判断输出对应的css。\n\n核心代码：\n\n```css\n <style>\n .wap{display: none;}\n @media screen and (max-width:768px){\n    .wrap{display: none;}\n    .wap{display: block;}\n }\n </style>\n```\n\nwap是手机端的的css最外的盒子；wrap是pc端对外的盒子；@media screen and (max-width:768px)的意思是当屏幕的分辨率低于768px的时候css生效，这个媒体外部的全部css不生效；\n\n因此，当设备分辨率为手机，媒体里面的手机端的css自动生效，当分辨率大于768px时，css就自动渲染外部的css。\n\n**@media具体语法：**\n\n```css\n@media screen and (min-width: 769px) {\n    /* CSS样式定义部分 */\n}\n@media screen and (min-device-width: 481px) and (max-device-width: 768px) {\n    /* CSS样式定义部分 */\n}\n@media only screen and (max-device-width: 480px) {\n    /* CSS样式定义部分 */\n}\n```\n\n**一、判断不同的显示设备，跳转到不同的网页。**\n\n```css\n<link rel=\"alternate\" media=\"only screen and (max-width: 640px)\" href=\"https://x.iqimeng.com/\">\n```\n\n\n\n**二、判断媒体类型，引用不同的样式表**\n\n```css\n<link rel=”stylesheet” media=”screen and (判断条件)” herf=”需要调用的样式表文件” />\n```\n\n通过设定屏幕的判断条件，调用对应的css文件。该实例多用于整页面不同风格的css调用与选取，使用该方法可能需要为一个页面制作多份个css文件。\n\n**三、判断媒体横向与纵向，引用不同的样式**\n\n```css\n@media screen and (orientation:portrait){横向样式}\n@media screen and (orientation:landscape){纵向样式}\n```\n\n**四、判断媒体类型，执行不同的css样式属性**\n\n```css\n@media screen and (max-width:240px){\n.box{width:200px;}\n.title{color:red;}\n}\n```\n\nBootstrap响应式设计中几个临界点的分辨率，运用这几个分辨率，我们就可以轻松的用CSS3来写自己的自适应代码了\n\n```css\n@media (min-width: 768px){ //>=768的设备 }\n@media (min-width: 992px){ //>=992的设备 }\n@media (min-width: 1200px){//>=1200的设备}\n```\n\n注意下顺序，如果你把@media (min-width: 768px)写在了下面那么就会出错，因为如果是1440,由于1440>768那么你的1200就会失效。\n\n所以我们用min-width时，小的放上面大的在下面，同理如果是用max-width那么就是大的在上面，小的在下面\n\n```css\n@media (max-width: 1199px){//<=1199的设备}\n@media (max-width: 991px){ //<=991的设备 }\n@media (max-width: 767px){ //<=768的设备 }\n```\n\n\n\n重要的内容重复3次：顺序是min-width从小到大，max-width从大到小。\n\n","slug":"study/利用css媒体查询media","published":1,"date":"2020-12-24T13:06:34.478Z","updated":"2020-12-24T16:00:14.222Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1ph000jap1idmkneq0p","content":"<p>为了实现手机与电脑网页宽度自适应，在css3中新增了 media query属性用于增强media type属性。因此当css3问世后，使media type可以进行条件判断输出对应的css。</p>\n<p>核心代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.wap</span>&#123;<span class=\"attribute\">display</span>: none;&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width:</span><span class=\"number\">768px</span>)&#123;</span><br><span class=\"line\">   <span class=\"selector-class\">.wrap</span>&#123;<span class=\"attribute\">display</span>: none;&#125;</span><br><span class=\"line\">   <span class=\"selector-class\">.wap</span>&#123;<span class=\"attribute\">display</span>: block;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">style</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>wap是手机端的的css最外的盒子；wrap是pc端对外的盒子；@media screen and (max-width:768px)的意思是当屏幕的分辨率低于768px的时候css生效，这个媒体外部的全部css不生效；</p>\n<p>因此，当设备分辨率为手机，媒体里面的手机端的css自动生效，当分辨率大于768px时，css就自动渲染外部的css。</p>\n<p><strong>@media具体语法：</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width:</span> <span class=\"number\">769px</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* CSS样式定义部分 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-device-width:</span> <span class=\"number\">481px</span>) <span class=\"keyword\">and</span> (<span class=\"attribute\">max-device-width:</span> <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* CSS样式定义部分 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> <span class=\"keyword\">only</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-device-width:</span> <span class=\"number\">480px</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* CSS样式定义部分 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>一、判断不同的显示设备，跳转到不同的网页。</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;alternate&quot; media=&quot;only screen and (max-width: 640px)&quot; href=&quot;https://x.iqimeng.com/&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>二、判断媒体类型，引用不同的样式表</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=”stylesheet” media=”screen and (判断条件)” herf=”需要调用的样式表文件” /&gt;</span><br></pre></td></tr></table></figure>\n<p>通过设定屏幕的判断条件，调用对应的css文件。该实例多用于整页面不同风格的css调用与选取，使用该方法可能需要为一个页面制作多份个css文件。</p>\n<p><strong>三、判断媒体横向与纵向，引用不同的样式</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span>portrait)&#123;横向样式&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span>landscape)&#123;纵向样式&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>四、判断媒体类型，执行不同的css样式属性</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width:</span><span class=\"number\">240px</span>)&#123;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.title</span>&#123;<span class=\"attribute\">color</span>:red;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Bootstrap响应式设计中几个临界点的分辨率，运用这几个分辨率，我们就可以轻松的用CSS3来写自己的自适应代码了</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media (min-width: 768px)&#123; //&gt;=768的设备 &#125;</span><br><span class=\"line\">@media (min-width: 992px)&#123; //&gt;=992的设备 &#125;</span><br><span class=\"line\">@media (min-width: 1200px)&#123;//&gt;=1200的设备&#125;</span><br></pre></td></tr></table></figure>\n<p>注意下顺序，如果你把@media (min-width: 768px)写在了下面那么就会出错，因为如果是1440,由于1440&gt;768那么你的1200就会失效。</p>\n<p>所以我们用min-width时，小的放上面大的在下面，同理如果是用max-width那么就是大的在上面，小的在下面</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media (max-width: 1199px)&#123;//&lt;=1199的设备&#125;</span><br><span class=\"line\">@media (max-width: 991px)&#123; //&lt;=991的设备 &#125;</span><br><span class=\"line\">@media (max-width: 767px)&#123; //&lt;=768的设备 &#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>重要的内容重复3次：顺序是min-width从小到大，max-width从大到小。</p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>为了实现手机与电脑网页宽度自适应，在css3中新增了 media query属性用于增强media type属性。因此当css3问世后，使media type可以进行条件判断输出对应的css。</p>\n<p>核心代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.wap</span>&#123;<span class=\"attribute\">display</span>: none;&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width:</span><span class=\"number\">768px</span>)&#123;</span><br><span class=\"line\">   <span class=\"selector-class\">.wrap</span>&#123;<span class=\"attribute\">display</span>: none;&#125;</span><br><span class=\"line\">   <span class=\"selector-class\">.wap</span>&#123;<span class=\"attribute\">display</span>: block;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">style</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>wap是手机端的的css最外的盒子；wrap是pc端对外的盒子；@media screen and (max-width:768px)的意思是当屏幕的分辨率低于768px的时候css生效，这个媒体外部的全部css不生效；</p>\n<p>因此，当设备分辨率为手机，媒体里面的手机端的css自动生效，当分辨率大于768px时，css就自动渲染外部的css。</p>\n<p><strong>@media具体语法：</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width:</span> <span class=\"number\">769px</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* CSS样式定义部分 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-device-width:</span> <span class=\"number\">481px</span>) <span class=\"keyword\">and</span> (<span class=\"attribute\">max-device-width:</span> <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* CSS样式定义部分 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> <span class=\"keyword\">only</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-device-width:</span> <span class=\"number\">480px</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* CSS样式定义部分 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>一、判断不同的显示设备，跳转到不同的网页。</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;alternate&quot; media=&quot;only screen and (max-width: 640px)&quot; href=&quot;https://x.iqimeng.com/&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>二、判断媒体类型，引用不同的样式表</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=”stylesheet” media=”screen and (判断条件)” herf=”需要调用的样式表文件” /&gt;</span><br></pre></td></tr></table></figure>\n<p>通过设定屏幕的判断条件，调用对应的css文件。该实例多用于整页面不同风格的css调用与选取，使用该方法可能需要为一个页面制作多份个css文件。</p>\n<p><strong>三、判断媒体横向与纵向，引用不同的样式</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span>portrait)&#123;横向样式&#125;</span><br><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">orientation:</span>landscape)&#123;纵向样式&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>四、判断媒体类型，执行不同的css样式属性</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width:</span><span class=\"number\">240px</span>)&#123;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.title</span>&#123;<span class=\"attribute\">color</span>:red;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Bootstrap响应式设计中几个临界点的分辨率，运用这几个分辨率，我们就可以轻松的用CSS3来写自己的自适应代码了</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media (min-width: 768px)&#123; //&gt;=768的设备 &#125;</span><br><span class=\"line\">@media (min-width: 992px)&#123; //&gt;=992的设备 &#125;</span><br><span class=\"line\">@media (min-width: 1200px)&#123;//&gt;=1200的设备&#125;</span><br></pre></td></tr></table></figure>\n<p>注意下顺序，如果你把@media (min-width: 768px)写在了下面那么就会出错，因为如果是1440,由于1440&gt;768那么你的1200就会失效。</p>\n<p>所以我们用min-width时，小的放上面大的在下面，同理如果是用max-width那么就是大的在上面，小的在下面</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media (max-width: 1199px)&#123;//&lt;=1199的设备&#125;</span><br><span class=\"line\">@media (max-width: 991px)&#123; //&lt;=991的设备 &#125;</span><br><span class=\"line\">@media (max-width: 767px)&#123; //&lt;=768的设备 &#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>重要的内容重复3次：顺序是min-width从小到大，max-width从大到小。</p>\n"},{"title":"vue中使用H5的audio","_content":"## \n\nH5audio标签有许多事件\n\n![](https://raw.githubusercontent.com/markruan/cloudimg/master/img/20190127152315247-20201106152816056-20201106153001803.png)\n\n 在应用到vue中后的使用如下：\n\n比如在使用onplay时，要去掉on，用@play派发时间，在methods中定义方法执行体\n\n```vue\n<template>\n    <div>\n        <audio src=\"../../static/1.mp3\" @play=\"ready\" @pause=\"pause\" controls></audio>\n    </div>\n</template>\n \n<script>\n    export default {\n        name: 'musci',\n        data() {\n            return {\n            }\n        },\n        methods:{\n            ready(){\n                console.log(\"play click\");\n            },\n            pause(){\n                console.log(\"pause click\");\n            }\n        }\n    }\n</script>\n\n```\n\n","source":"_posts/Vue/vue中使用H5的audio.md","raw":"---\ntitle: vue中使用H5的audio\ncategories:\n  - Vue\n---\n## \n\nH5audio标签有许多事件\n\n![](https://raw.githubusercontent.com/markruan/cloudimg/master/img/20190127152315247-20201106152816056-20201106153001803.png)\n\n 在应用到vue中后的使用如下：\n\n比如在使用onplay时，要去掉on，用@play派发时间，在methods中定义方法执行体\n\n```vue\n<template>\n    <div>\n        <audio src=\"../../static/1.mp3\" @play=\"ready\" @pause=\"pause\" controls></audio>\n    </div>\n</template>\n \n<script>\n    export default {\n        name: 'musci',\n        data() {\n            return {\n            }\n        },\n        methods:{\n            ready(){\n                console.log(\"play click\");\n            },\n            pause(){\n                console.log(\"pause click\");\n            }\n        }\n    }\n</script>\n\n```\n\n","slug":"Vue/vue中使用H5的audio","published":1,"date":"2020-12-19T12:03:49.336Z","updated":"2020-12-24T16:04:08.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1pj000map1igb916cw0","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>H5audio标签有许多事件</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/20190127152315247-20201106152816056-20201106153001803.png\"></p>\n<p> 在应用到vue中后的使用如下：</p>\n<p>比如在使用onplay时，要去掉on，用@play派发时间，在methods中定义方法执行体</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;audio src&#x3D;&quot;..&#x2F;..&#x2F;static&#x2F;1.mp3&quot; @play&#x3D;&quot;ready&quot; @pause&#x3D;&quot;pause&quot; controls&gt;&lt;&#x2F;audio&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;template&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    export default &#123;</span><br><span class=\"line\">        name: &#39;musci&#39;,</span><br><span class=\"line\">        data() &#123;</span><br><span class=\"line\">            return &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        methods:&#123;</span><br><span class=\"line\">            ready()&#123;</span><br><span class=\"line\">                console.log(&quot;play click&quot;);</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            pause()&#123;</span><br><span class=\"line\">                console.log(&quot;pause click&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>H5audio标签有许多事件</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/20190127152315247-20201106152816056-20201106153001803.png\"></p>\n<p> 在应用到vue中后的使用如下：</p>\n<p>比如在使用onplay时，要去掉on，用@play派发时间，在methods中定义方法执行体</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;audio src&#x3D;&quot;..&#x2F;..&#x2F;static&#x2F;1.mp3&quot; @play&#x3D;&quot;ready&quot; @pause&#x3D;&quot;pause&quot; controls&gt;&lt;&#x2F;audio&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;template&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    export default &#123;</span><br><span class=\"line\">        name: &#39;musci&#39;,</span><br><span class=\"line\">        data() &#123;</span><br><span class=\"line\">            return &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        methods:&#123;</span><br><span class=\"line\">            ready()&#123;</span><br><span class=\"line\">                console.log(&quot;play click&quot;);</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            pause()&#123;</span><br><span class=\"line\">                console.log(&quot;pause click&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"解决跨域","_content":"### 生产环境和开发环境一次解决跨域问题\n\n \n\n在config 文件夹里面新建一个 api.config.js 配置文件\n\n```ruby\nconst isPro = Object.is(process.env.NODE_ENV, 'production')\n\nconst baseUrl=isPro ? 'https://api.iqimeng.com' : 'api/'\nexport default baseUrl;\n```\n\n#### 然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀\n\n```ruby\nimport apiConfig from '../config/api.config'\n\nimport Axios from 'axios'\nimport VueAxios from 'vue-axios'\n\nVue.use(VueAxios, Axios)\nAxios.defaults.baseURL = apiConfig\n```\n\n","source":"_posts/Vue/解决跨域.md","raw":"---\ntitle: 解决跨域\ncategories:\n  - Vue\ntag:\n  - 采坑\n---\n### 生产环境和开发环境一次解决跨域问题\n\n \n\n在config 文件夹里面新建一个 api.config.js 配置文件\n\n```ruby\nconst isPro = Object.is(process.env.NODE_ENV, 'production')\n\nconst baseUrl=isPro ? 'https://api.iqimeng.com' : 'api/'\nexport default baseUrl;\n```\n\n#### 然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀\n\n```ruby\nimport apiConfig from '../config/api.config'\n\nimport Axios from 'axios'\nimport VueAxios from 'vue-axios'\n\nVue.use(VueAxios, Axios)\nAxios.defaults.baseURL = apiConfig\n```\n\n","slug":"Vue/解决跨域","published":1,"date":"2020-12-19T12:03:49.353Z","updated":"2020-12-24T16:02:03.778Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1pm000oap1i1fo87kfg","content":"<h3 id=\"生产环境和开发环境一次解决跨域问题\"><a href=\"#生产环境和开发环境一次解决跨域问题\" class=\"headerlink\" title=\"生产环境和开发环境一次解决跨域问题\"></a>生产环境和开发环境一次解决跨域问题</h3><p>在config 文件夹里面新建一个 api.config.js 配置文件</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const isPro = Object.is(process.env.NODE_ENV, <span class=\"string\">&#x27;production&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">const baseUrl=isPro ? <span class=\"string\">&#x27;https://api.iqimeng.com&#x27;</span> : <span class=\"string\">&#x27;api/&#x27;</span></span><br><span class=\"line\">export default baseUrl;</span><br></pre></td></tr></table></figure>\n<h4 id=\"然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀\"><a href=\"#然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀\" class=\"headerlink\" title=\"然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀\"></a>然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import apiConfig from <span class=\"string\">&#x27;../config/api.config&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">import Axios from <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\">import VueAxios from <span class=\"string\">&#x27;vue-axios&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(VueAxios, Axios)</span><br><span class=\"line\">Axios.defaults.baseURL = apiConfig</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h3 id=\"生产环境和开发环境一次解决跨域问题\"><a href=\"#生产环境和开发环境一次解决跨域问题\" class=\"headerlink\" title=\"生产环境和开发环境一次解决跨域问题\"></a>生产环境和开发环境一次解决跨域问题</h3><p>在config 文件夹里面新建一个 api.config.js 配置文件</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const isPro = Object.is(process.env.NODE_ENV, <span class=\"string\">&#x27;production&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">const baseUrl=isPro ? <span class=\"string\">&#x27;https://api.iqimeng.com&#x27;</span> : <span class=\"string\">&#x27;api/&#x27;</span></span><br><span class=\"line\">export default baseUrl;</span><br></pre></td></tr></table></figure>\n<h4 id=\"然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀\"><a href=\"#然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀\" class=\"headerlink\" title=\"然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀\"></a>然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import apiConfig from <span class=\"string\">&#x27;../config/api.config&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">import Axios from <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\">import VueAxios from <span class=\"string\">&#x27;vue-axios&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(VueAxios, Axios)</span><br><span class=\"line\">Axios.defaults.baseURL = apiConfig</span><br></pre></td></tr></table></figure>\n"},{"title":"shopify 图片CDN 详解","_content":"对于刚入手shopify 的小白来说，shopify 图片是一个急需了解的点。\n对于大企业来说资源管理是必须优化到极致的，目前对于资源管理比较有效的方式是 CDN 资源管理。shopify 自然也会为它的资源搭建CDN服务，而对图片则做图片CDN，图片CDN与传统CDN的区别在于，它是专门为图片做优化的，通常包含缩放、格式转换等。你可以把它看成是一个API，通过传入尺寸、质量、格式等参数，获取到对应的图片内容。这也使得我们在使用上非常方便，适用于多种不同的场景。\n\n下面我们则针对 shopify 图片CDN的使用做讲解\n\n## Shopify 图片的参数使用\n\n下面花括号里面使用的 [image 是指 shopify 的图片对象](https://shopify.dev/docs/themes/liquid/reference/objects/image）\n\n### 图片尺寸参数\n\n您可以为图像的宽度和高度指定精确的像素尺寸，最大5760 x 5760 px。除非[裁剪](https://shopify.dev/docs/themes/liquid/reference/filters/url-filters/#crop)图像，否则图像的原始长宽比将保留。（无论您指定什么尺寸，都不能将图像的大小调整为大于其原始尺寸。如果大于原始尺寸则返回原始尺寸大下的图片）\n\n#### 固定尺寸\n\n根据设置的 宽高 返回对应尺寸的图片\n\n**格式**\n\n```\n{{ image | img_url: '<宽>x<高>' }} \n```\n\n**输入**\n\n```html\n{{ image | img_url: '720x720' }} \n```\n\n**CDN**\n\n```html\nhttps://cdn.shopify.com/s/files/1/1183/1048/products/boat-shoes_720x720.jpeg\n```\n\n#### 英文名称尺寸\n\n与固定尺寸一样的意义，只不过，值使用英文名称替代\n\n| 英文名称 | 示例                                                 | 返回尺寸 |\n| -------- | ---------------------------------------------------- | -------- |\n| <空>     | &#123;&#123; image \\| img_url &#125;&#125;           | 100x100  |\n| small    | &#123;&#123;image \\| img_url : ‘small’ &#125;&#125;  | 100x100  |\n| medium   | &#123;&#123; image \\| img_url: ‘medium’ &#125;&#125; | 240x240  |\n| large    | &#123;&#123; image \\| img_url: ‘large’ &#125;&#125;  | 480x480  |\n| master   | &#123;&#123; image \\| img_url: ‘master’ &#125;&#125; | 原始尺寸 |\n\n#### 仅宽或高尺寸\n\n您只能指定宽度或高度，Shopify会根据原始图像的尺寸计算其他尺寸，并**保持原始图像的长宽比**：\n\n例子 图片尺寸为 400x300\n\n**仅宽度**\n\n```json\n{{ image | img_url: '200x' }} //返回 图片尺寸为 200x150\n```\n\n**仅高度**\n\n```json\n{{ image | img_url: 'x150' }} //返回 图片尺寸为 200x150\n```\n\n### 图片剪切参数 crop\n\n您可以指定`crop`参数以确保生成的图像的尺寸与请求的尺寸匹配。如果整个图像都不适合您要求的尺寸，则该`crop`参数指定要显示图像的哪一部分。有效选项包括：`top`、`centent`、`bottom`、`left`、`right`\n\n列子 图片 宽高 为 100x300，（按竖直方式平分为三个，分别为 上中下）\n\n```json\n{{ image | img_url: '100x100', crop: 'bottom' }} // 显示部分 为 下\n```\n\n#### 示例\n\n##### **原图** - 九宫格\n\n尺寸：900x900\n\n![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x300.jpg)\n\n##### **1、不带 crop，则根据固定尺寸原则，返回原始尺寸**\n\n**输入**\n\n```json\n{{ image | img_url: '900x300' }} \n```\n\n**CDN**\n\n```\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_900x300.jpg\n```\n\n**效果图**\n\n![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_900x300.jpg)\n\n##### 2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\n\n**输入**\n\n```json\n{{ image | img_url: '300x100', crop: 'top' }} \n{{ image | img_url: '300x100', crop: 'center'}} \n{{ image | img_url: '300x100', crop: 'bottom'}} \n{{ image | img_url: '100x300', crop: 'left' }} \n{{ image | img_url: '100x300', crop: 'center'}} \n{{ image | img_url: '100x300', crop: 'right'}} \n```\n\n**CDN**\n\n```\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_top.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_center.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_bottom.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_left.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_cen300x150\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_right.jpg\n```\n\n**图片**\n\n| 300x100 top                                                  | 300x100 center                                               | 300x100 right                                                |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_top.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_center.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_bottom.jpg) |\n\n| 100x300 left                                                 | 100x300 center                                               | 100x300 right                                                |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_left.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_center.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_right.jpg) |\n\n### 图片比例（倍数）参数 scale\n\n*谷歌翻译 为 亲密度，但是从效果来看我觉得翻译为比例或者倍数更加恰当*\n\n该`scale`参数使您可以指定图像的像素密度。（返回img_url设置的尺寸的scale倍数的图片尺寸，这里我可能解释的不是很清楚，我们还是直接看示例）\n\n##### 示例\n\n**输入**\n\n```json\n{{ image | img_url: '150x150' }}\n{{ image | img_url: '150x150', scale: 2 }}\n```\n\n**CDN**\n\n```html\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg\n```\n\n**效果图**\n\n| &#123;&#123; image \\| img_url: ‘150x150’ &#125;&#125;        | &#123;&#123; image \\| img_url: ‘150x150’, scale: 2 &#125;&#125; |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg) |\n| 图片尺寸：150x150                                            | 图片尺寸：300x300                                            |\n\n根据上述例子，相信你应该能明白 **scale** 的作用了\n\n### 图片格式参数 format\n\n该`format`参数使您可以指定要用于显示图像的文件格式。有效选项包括：`jpg`、`pjpg`([渐进式JPEG](https://en.wikipedia.org/wiki/JPEG#JPEG_compression)。浏览器以逐渐提高的质量加载全尺寸的渐进式JPEG，而不是像传统JPEG那样从上到下加载完整质量的图像。)\n\nShopify可以为您执行以下格式转换：PNG 转 JPG、PNG 转 PJPG、JPG 转 PJPG\n\n#### 示例\n\n**输入**\n\n```json\n{{ image | img_url, format: 'jpg'  }} \n{{ image | img_url, format: 'pjpg' }}\n{{ image | img_url, format: 'pjpg'  }}\n```\n\n**CDN**\n\n```json\n/* PNG 转 JPG */\nhttps://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.png.jpg \n/* PNG 转 PJPG */\nhttps://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.png.jpg\n/* JPG 转 PJPG */\nhttps://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.jpg\n```\n\n**效果图**\n\n| PNG 转 JPG                                                   | PNG 转 PJPG                                                  | JPG 转 PJPG                                                  |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| &#123;&#123; image \\| img_url, format: ‘jpg’ &#125;&#125;&#125; | &#123;&#123;image \\| img_url, format: ‘pjpg’ &#125;&#125;    | &#123;&#123;image \\| img_url, format: ‘pjpg’ &#125;&#125;    |\n| ![img](https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png) | ![img](https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png) | ![img](https://img-blog.csdnimg.cn/img_convert/af27185e6344fa9e237d57f87d48f858.png) |\n| ![img](https://img-blog.csdnimg.cn/img_convert/70c761fd11c6c783542b745340ba4b0a.png) | ![img](https://img-blog.csdnimg.cn/img_convert/0369ae7f97d6b7011609e8d4ec8ec295.png) | ![img](https://img-blog.csdnimg.cn/img_convert/6c9061c123da783eeabd183d1db2ba45.png) |","source":"_posts/shopify/shopify 图片CDN 详解.md","raw":"---\ntitle: shopify 图片CDN 详解\ncategories:\n  - shopify\n---\n对于刚入手shopify 的小白来说，shopify 图片是一个急需了解的点。\n对于大企业来说资源管理是必须优化到极致的，目前对于资源管理比较有效的方式是 CDN 资源管理。shopify 自然也会为它的资源搭建CDN服务，而对图片则做图片CDN，图片CDN与传统CDN的区别在于，它是专门为图片做优化的，通常包含缩放、格式转换等。你可以把它看成是一个API，通过传入尺寸、质量、格式等参数，获取到对应的图片内容。这也使得我们在使用上非常方便，适用于多种不同的场景。\n\n下面我们则针对 shopify 图片CDN的使用做讲解\n\n## Shopify 图片的参数使用\n\n下面花括号里面使用的 [image 是指 shopify 的图片对象](https://shopify.dev/docs/themes/liquid/reference/objects/image）\n\n### 图片尺寸参数\n\n您可以为图像的宽度和高度指定精确的像素尺寸，最大5760 x 5760 px。除非[裁剪](https://shopify.dev/docs/themes/liquid/reference/filters/url-filters/#crop)图像，否则图像的原始长宽比将保留。（无论您指定什么尺寸，都不能将图像的大小调整为大于其原始尺寸。如果大于原始尺寸则返回原始尺寸大下的图片）\n\n#### 固定尺寸\n\n根据设置的 宽高 返回对应尺寸的图片\n\n**格式**\n\n```\n{{ image | img_url: '<宽>x<高>' }} \n```\n\n**输入**\n\n```html\n{{ image | img_url: '720x720' }} \n```\n\n**CDN**\n\n```html\nhttps://cdn.shopify.com/s/files/1/1183/1048/products/boat-shoes_720x720.jpeg\n```\n\n#### 英文名称尺寸\n\n与固定尺寸一样的意义，只不过，值使用英文名称替代\n\n| 英文名称 | 示例                                                 | 返回尺寸 |\n| -------- | ---------------------------------------------------- | -------- |\n| <空>     | &#123;&#123; image \\| img_url &#125;&#125;           | 100x100  |\n| small    | &#123;&#123;image \\| img_url : ‘small’ &#125;&#125;  | 100x100  |\n| medium   | &#123;&#123; image \\| img_url: ‘medium’ &#125;&#125; | 240x240  |\n| large    | &#123;&#123; image \\| img_url: ‘large’ &#125;&#125;  | 480x480  |\n| master   | &#123;&#123; image \\| img_url: ‘master’ &#125;&#125; | 原始尺寸 |\n\n#### 仅宽或高尺寸\n\n您只能指定宽度或高度，Shopify会根据原始图像的尺寸计算其他尺寸，并**保持原始图像的长宽比**：\n\n例子 图片尺寸为 400x300\n\n**仅宽度**\n\n```json\n{{ image | img_url: '200x' }} //返回 图片尺寸为 200x150\n```\n\n**仅高度**\n\n```json\n{{ image | img_url: 'x150' }} //返回 图片尺寸为 200x150\n```\n\n### 图片剪切参数 crop\n\n您可以指定`crop`参数以确保生成的图像的尺寸与请求的尺寸匹配。如果整个图像都不适合您要求的尺寸，则该`crop`参数指定要显示图像的哪一部分。有效选项包括：`top`、`centent`、`bottom`、`left`、`right`\n\n列子 图片 宽高 为 100x300，（按竖直方式平分为三个，分别为 上中下）\n\n```json\n{{ image | img_url: '100x100', crop: 'bottom' }} // 显示部分 为 下\n```\n\n#### 示例\n\n##### **原图** - 九宫格\n\n尺寸：900x900\n\n![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x300.jpg)\n\n##### **1、不带 crop，则根据固定尺寸原则，返回原始尺寸**\n\n**输入**\n\n```json\n{{ image | img_url: '900x300' }} \n```\n\n**CDN**\n\n```\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_900x300.jpg\n```\n\n**效果图**\n\n![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_900x300.jpg)\n\n##### 2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\n\n**输入**\n\n```json\n{{ image | img_url: '300x100', crop: 'top' }} \n{{ image | img_url: '300x100', crop: 'center'}} \n{{ image | img_url: '300x100', crop: 'bottom'}} \n{{ image | img_url: '100x300', crop: 'left' }} \n{{ image | img_url: '100x300', crop: 'center'}} \n{{ image | img_url: '100x300', crop: 'right'}} \n```\n\n**CDN**\n\n```\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_top.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_center.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_bottom.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_left.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_cen300x150\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_right.jpg\n```\n\n**图片**\n\n| 300x100 top                                                  | 300x100 center                                               | 300x100 right                                                |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_top.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_center.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_bottom.jpg) |\n\n| 100x300 left                                                 | 100x300 center                                               | 100x300 right                                                |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_left.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_center.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_right.jpg) |\n\n### 图片比例（倍数）参数 scale\n\n*谷歌翻译 为 亲密度，但是从效果来看我觉得翻译为比例或者倍数更加恰当*\n\n该`scale`参数使您可以指定图像的像素密度。（返回img_url设置的尺寸的scale倍数的图片尺寸，这里我可能解释的不是很清楚，我们还是直接看示例）\n\n##### 示例\n\n**输入**\n\n```json\n{{ image | img_url: '150x150' }}\n{{ image | img_url: '150x150', scale: 2 }}\n```\n\n**CDN**\n\n```html\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg\n//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg\n```\n\n**效果图**\n\n| &#123;&#123; image \\| img_url: ‘150x150’ &#125;&#125;        | &#123;&#123; image \\| img_url: ‘150x150’, scale: 2 &#125;&#125; |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg) | ![img](https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg) |\n| 图片尺寸：150x150                                            | 图片尺寸：300x300                                            |\n\n根据上述例子，相信你应该能明白 **scale** 的作用了\n\n### 图片格式参数 format\n\n该`format`参数使您可以指定要用于显示图像的文件格式。有效选项包括：`jpg`、`pjpg`([渐进式JPEG](https://en.wikipedia.org/wiki/JPEG#JPEG_compression)。浏览器以逐渐提高的质量加载全尺寸的渐进式JPEG，而不是像传统JPEG那样从上到下加载完整质量的图像。)\n\nShopify可以为您执行以下格式转换：PNG 转 JPG、PNG 转 PJPG、JPG 转 PJPG\n\n#### 示例\n\n**输入**\n\n```json\n{{ image | img_url, format: 'jpg'  }} \n{{ image | img_url, format: 'pjpg' }}\n{{ image | img_url, format: 'pjpg'  }}\n```\n\n**CDN**\n\n```json\n/* PNG 转 JPG */\nhttps://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.png.jpg \n/* PNG 转 PJPG */\nhttps://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.png.jpg\n/* JPG 转 PJPG */\nhttps://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.jpg\n```\n\n**效果图**\n\n| PNG 转 JPG                                                   | PNG 转 PJPG                                                  | JPG 转 PJPG                                                  |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| &#123;&#123; image \\| img_url, format: ‘jpg’ &#125;&#125;&#125; | &#123;&#123;image \\| img_url, format: ‘pjpg’ &#125;&#125;    | &#123;&#123;image \\| img_url, format: ‘pjpg’ &#125;&#125;    |\n| ![img](https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png) | ![img](https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png) | ![img](https://img-blog.csdnimg.cn/img_convert/af27185e6344fa9e237d57f87d48f858.png) |\n| ![img](https://img-blog.csdnimg.cn/img_convert/70c761fd11c6c783542b745340ba4b0a.png) | ![img](https://img-blog.csdnimg.cn/img_convert/0369ae7f97d6b7011609e8d4ec8ec295.png) | ![img](https://img-blog.csdnimg.cn/img_convert/6c9061c123da783eeabd183d1db2ba45.png) |","slug":"shopify/shopify 图片CDN 详解","published":1,"date":"2020-12-19T12:03:49.356Z","updated":"2020-12-24T15:58:41.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1pt000sap1i3kww06r4","content":"<p>对于刚入手shopify 的小白来说，shopify 图片是一个急需了解的点。<br>对于大企业来说资源管理是必须优化到极致的，目前对于资源管理比较有效的方式是 CDN 资源管理。shopify 自然也会为它的资源搭建CDN服务，而对图片则做图片CDN，图片CDN与传统CDN的区别在于，它是专门为图片做优化的，通常包含缩放、格式转换等。你可以把它看成是一个API，通过传入尺寸、质量、格式等参数，获取到对应的图片内容。这也使得我们在使用上非常方便，适用于多种不同的场景。</p>\n<p>下面我们则针对 shopify 图片CDN的使用做讲解</p>\n<h2 id=\"Shopify-图片的参数使用\"><a href=\"#Shopify-图片的参数使用\" class=\"headerlink\" title=\"Shopify 图片的参数使用\"></a>Shopify 图片的参数使用</h2><p>下面花括号里面使用的 [image 是指 shopify 的图片对象](<a class=\"link\"   href=\"https://shopify.dev/docs/themes/liquid/reference/objects/image%EF%BC%89\" >https://shopify.dev/docs/themes/liquid/reference/objects/image）<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"图片尺寸参数\"><a href=\"#图片尺寸参数\" class=\"headerlink\" title=\"图片尺寸参数\"></a>图片尺寸参数</h3><p>您可以为图像的宽度和高度指定精确的像素尺寸，最大5760 x 5760 px。除非<a class=\"link\"   href=\"https://shopify.dev/docs/themes/liquid/reference/filters/url-filters/#crop\" >裁剪<i class=\"fas fa-external-link-alt\"></i></a>图像，否则图像的原始长宽比将保留。（无论您指定什么尺寸，都不能将图像的大小调整为大于其原始尺寸。如果大于原始尺寸则返回原始尺寸大下的图片）</p>\n<h4 id=\"固定尺寸\"><a href=\"#固定尺寸\" class=\"headerlink\" title=\"固定尺寸\"></a>固定尺寸</h4><p>根据设置的 宽高 返回对应尺寸的图片</p>\n<p><strong>格式</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#39;&lt;宽&gt;x&lt;高&gt;&#39; &#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>输入</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;720x720&#x27; &#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cdn.shopify.com/s/files/1/1183/1048/products/boat-shoes_720x720.jpeg</span><br></pre></td></tr></table></figure>\n<h4 id=\"英文名称尺寸\"><a href=\"#英文名称尺寸\" class=\"headerlink\" title=\"英文名称尺寸\"></a>英文名称尺寸</h4><p>与固定尺寸一样的意义，只不过，值使用英文名称替代</p>\n<table>\n<thead>\n<tr>\n<th>英文名称</th>\n<th>示例</th>\n<th>返回尺寸</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&lt;空&gt;</td>\n<td>&#123;&#123; image | img_url &#125;&#125;</td>\n<td>100x100</td>\n</tr>\n<tr>\n<td>small</td>\n<td>&#123;&#123;image | img_url : ‘small’ &#125;&#125;</td>\n<td>100x100</td>\n</tr>\n<tr>\n<td>medium</td>\n<td>&#123;&#123; image | img_url: ‘medium’ &#125;&#125;</td>\n<td>240x240</td>\n</tr>\n<tr>\n<td>large</td>\n<td>&#123;&#123; image | img_url: ‘large’ &#125;&#125;</td>\n<td>480x480</td>\n</tr>\n<tr>\n<td>master</td>\n<td>&#123;&#123; image | img_url: ‘master’ &#125;&#125;</td>\n<td>原始尺寸</td>\n</tr>\n</tbody></table>\n<h4 id=\"仅宽或高尺寸\"><a href=\"#仅宽或高尺寸\" class=\"headerlink\" title=\"仅宽或高尺寸\"></a>仅宽或高尺寸</h4><p>您只能指定宽度或高度，Shopify会根据原始图像的尺寸计算其他尺寸，并<strong>保持原始图像的长宽比</strong>：</p>\n<p>例子 图片尺寸为 400x300</p>\n<p><strong>仅宽度</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;200x&#x27; &#125;&#125; //返回 图片尺寸为 200x150</span><br></pre></td></tr></table></figure>\n<p><strong>仅高度</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;x150&#x27; &#125;&#125; //返回 图片尺寸为 200x150</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片剪切参数-crop\"><a href=\"#图片剪切参数-crop\" class=\"headerlink\" title=\"图片剪切参数 crop\"></a>图片剪切参数 crop</h3><p>您可以指定<code>crop</code>参数以确保生成的图像的尺寸与请求的尺寸匹配。如果整个图像都不适合您要求的尺寸，则该<code>crop</code>参数指定要显示图像的哪一部分。有效选项包括：<code>top</code>、<code>centent</code>、<code>bottom</code>、<code>left</code>、<code>right</code></p>\n<p>列子 图片 宽高 为 100x300，（按竖直方式平分为三个，分别为 上中下）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x100&#x27;, crop: &#x27;bottom&#x27; &#125;&#125; // 显示部分 为 下</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><h5 id=\"原图-九宫格\"><a href=\"#原图-九宫格\" class=\"headerlink\" title=\"原图 - 九宫格\"></a><strong>原图</strong> - 九宫格</h5><p>尺寸：900x900</p>\n<p><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x300.jpg\" alt=\"img\"></p>\n<h5 id=\"1、不带-crop，则根据固定尺寸原则，返回原始尺寸\"><a href=\"#1、不带-crop，则根据固定尺寸原则，返回原始尺寸\" class=\"headerlink\" title=\"1、不带 crop，则根据固定尺寸原则，返回原始尺寸\"></a><strong>1、不带 crop，则根据固定尺寸原则，返回原始尺寸</strong></h5><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;900x300&#x27; &#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_900x300.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>效果图</strong></p>\n<p><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_900x300.jpg\" alt=\"img\"></p>\n<h5 id=\"2、带-crop，-图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\"><a href=\"#2、带-crop，-图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\" class=\"headerlink\" title=\"2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\"></a>2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分</h5><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;top&#x27; &#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;center&#x27;&#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;bottom&#x27;&#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;left&#x27; &#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;center&#x27;&#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;right&#x27;&#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_top.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_center.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_bottom.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_left.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_cen300x150</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_right.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>图片</strong></p>\n<table>\n<thead>\n<tr>\n<th>300x100 top</th>\n<th>300x100 center</th>\n<th>300x100 right</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_top.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_center.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_bottom.jpg\" alt=\"img\"></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>100x300 left</th>\n<th>100x300 center</th>\n<th>100x300 right</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_left.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_center.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_right.jpg\" alt=\"img\"></td>\n</tr>\n</tbody></table>\n<h3 id=\"图片比例（倍数）参数-scale\"><a href=\"#图片比例（倍数）参数-scale\" class=\"headerlink\" title=\"图片比例（倍数）参数 scale\"></a>图片比例（倍数）参数 scale</h3><p><em>谷歌翻译 为 亲密度，但是从效果来看我觉得翻译为比例或者倍数更加恰当</em></p>\n<p>该<code>scale</code>参数使您可以指定图像的像素密度。（返回img_url设置的尺寸的scale倍数的图片尺寸，这里我可能解释的不是很清楚，我们还是直接看示例）</p>\n<h5 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;150x150&#x27; &#125;&#125;</span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;150x150&#x27;, scale: 2 &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg</span><br><span class=\"line\">//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>效果图</strong></p>\n<table>\n<thead>\n<tr>\n<th>&#123;&#123; image | img_url: ‘150x150’ &#125;&#125;</th>\n<th>&#123;&#123; image | img_url: ‘150x150’, scale: 2 &#125;&#125;</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg\" alt=\"img\"></td>\n</tr>\n<tr>\n<td>图片尺寸：150x150</td>\n<td>图片尺寸：300x300</td>\n</tr>\n</tbody></table>\n<p>根据上述例子，相信你应该能明白 <strong>scale</strong> 的作用了</p>\n<h3 id=\"图片格式参数-format\"><a href=\"#图片格式参数-format\" class=\"headerlink\" title=\"图片格式参数 format\"></a>图片格式参数 format</h3><p>该<code>format</code>参数使您可以指定要用于显示图像的文件格式。有效选项包括：<code>jpg</code>、<code>pjpg</code>(<a class=\"link\"   href=\"https://en.wikipedia.org/wiki/JPEG#JPEG_compression\" >渐进式JPEG<i class=\"fas fa-external-link-alt\"></i></a>。浏览器以逐渐提高的质量加载全尺寸的渐进式JPEG，而不是像传统JPEG那样从上到下加载完整质量的图像。)</p>\n<p>Shopify可以为您执行以下格式转换：PNG 转 JPG、PNG 转 PJPG、JPG 转 PJPG</p>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url, format: &#x27;jpg&#x27;  &#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url, format: &#x27;pjpg&#x27; &#125;&#125;</span><br><span class=\"line\">&#123;&#123; image | img_url, format: &#x27;pjpg&#x27;  &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* PNG 转 JPG */</span></span><br><span class=\"line\">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.png.jpg </span><br><span class=\"line\"><span class=\"comment\">/* PNG 转 PJPG */</span></span><br><span class=\"line\">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.png.jpg</span><br><span class=\"line\"><span class=\"comment\">/* JPG 转 PJPG */</span></span><br><span class=\"line\">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>效果图</strong></p>\n<table>\n<thead>\n<tr>\n<th>PNG 转 JPG</th>\n<th>PNG 转 PJPG</th>\n<th>JPG 转 PJPG</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#123;&#123; image | img_url, format: ‘jpg’ &#125;&#125;&#125;</td>\n<td>&#123;&#123;image | img_url, format: ‘pjpg’ &#125;&#125;</td>\n<td>&#123;&#123;image | img_url, format: ‘pjpg’ &#125;&#125;</td>\n</tr>\n<tr>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/af27185e6344fa9e237d57f87d48f858.png\" alt=\"img\"></td>\n</tr>\n<tr>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/70c761fd11c6c783542b745340ba4b0a.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/0369ae7f97d6b7011609e8d4ec8ec295.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/6c9061c123da783eeabd183d1db2ba45.png\" alt=\"img\"></td>\n</tr>\n</tbody></table>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>对于刚入手shopify 的小白来说，shopify 图片是一个急需了解的点。<br>对于大企业来说资源管理是必须优化到极致的，目前对于资源管理比较有效的方式是 CDN 资源管理。shopify 自然也会为它的资源搭建CDN服务，而对图片则做图片CDN，图片CDN与传统CDN的区别在于，它是专门为图片做优化的，通常包含缩放、格式转换等。你可以把它看成是一个API，通过传入尺寸、质量、格式等参数，获取到对应的图片内容。这也使得我们在使用上非常方便，适用于多种不同的场景。</p>\n<p>下面我们则针对 shopify 图片CDN的使用做讲解</p>\n<h2 id=\"Shopify-图片的参数使用\"><a href=\"#Shopify-图片的参数使用\" class=\"headerlink\" title=\"Shopify 图片的参数使用\"></a>Shopify 图片的参数使用</h2><p>下面花括号里面使用的 [image 是指 shopify 的图片对象](<a class=\"link\"   href=\"https://shopify.dev/docs/themes/liquid/reference/objects/image%EF%BC%89\" >https://shopify.dev/docs/themes/liquid/reference/objects/image）<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"图片尺寸参数\"><a href=\"#图片尺寸参数\" class=\"headerlink\" title=\"图片尺寸参数\"></a>图片尺寸参数</h3><p>您可以为图像的宽度和高度指定精确的像素尺寸，最大5760 x 5760 px。除非<a class=\"link\"   href=\"https://shopify.dev/docs/themes/liquid/reference/filters/url-filters/#crop\" >裁剪<i class=\"fas fa-external-link-alt\"></i></a>图像，否则图像的原始长宽比将保留。（无论您指定什么尺寸，都不能将图像的大小调整为大于其原始尺寸。如果大于原始尺寸则返回原始尺寸大下的图片）</p>\n<h4 id=\"固定尺寸\"><a href=\"#固定尺寸\" class=\"headerlink\" title=\"固定尺寸\"></a>固定尺寸</h4><p>根据设置的 宽高 返回对应尺寸的图片</p>\n<p><strong>格式</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#39;&lt;宽&gt;x&lt;高&gt;&#39; &#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>输入</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;720x720&#x27; &#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cdn.shopify.com/s/files/1/1183/1048/products/boat-shoes_720x720.jpeg</span><br></pre></td></tr></table></figure>\n<h4 id=\"英文名称尺寸\"><a href=\"#英文名称尺寸\" class=\"headerlink\" title=\"英文名称尺寸\"></a>英文名称尺寸</h4><p>与固定尺寸一样的意义，只不过，值使用英文名称替代</p>\n<table>\n<thead>\n<tr>\n<th>英文名称</th>\n<th>示例</th>\n<th>返回尺寸</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&lt;空&gt;</td>\n<td>&#123;&#123; image | img_url &#125;&#125;</td>\n<td>100x100</td>\n</tr>\n<tr>\n<td>small</td>\n<td>&#123;&#123;image | img_url : ‘small’ &#125;&#125;</td>\n<td>100x100</td>\n</tr>\n<tr>\n<td>medium</td>\n<td>&#123;&#123; image | img_url: ‘medium’ &#125;&#125;</td>\n<td>240x240</td>\n</tr>\n<tr>\n<td>large</td>\n<td>&#123;&#123; image | img_url: ‘large’ &#125;&#125;</td>\n<td>480x480</td>\n</tr>\n<tr>\n<td>master</td>\n<td>&#123;&#123; image | img_url: ‘master’ &#125;&#125;</td>\n<td>原始尺寸</td>\n</tr>\n</tbody></table>\n<h4 id=\"仅宽或高尺寸\"><a href=\"#仅宽或高尺寸\" class=\"headerlink\" title=\"仅宽或高尺寸\"></a>仅宽或高尺寸</h4><p>您只能指定宽度或高度，Shopify会根据原始图像的尺寸计算其他尺寸，并<strong>保持原始图像的长宽比</strong>：</p>\n<p>例子 图片尺寸为 400x300</p>\n<p><strong>仅宽度</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;200x&#x27; &#125;&#125; //返回 图片尺寸为 200x150</span><br></pre></td></tr></table></figure>\n<p><strong>仅高度</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;x150&#x27; &#125;&#125; //返回 图片尺寸为 200x150</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片剪切参数-crop\"><a href=\"#图片剪切参数-crop\" class=\"headerlink\" title=\"图片剪切参数 crop\"></a>图片剪切参数 crop</h3><p>您可以指定<code>crop</code>参数以确保生成的图像的尺寸与请求的尺寸匹配。如果整个图像都不适合您要求的尺寸，则该<code>crop</code>参数指定要显示图像的哪一部分。有效选项包括：<code>top</code>、<code>centent</code>、<code>bottom</code>、<code>left</code>、<code>right</code></p>\n<p>列子 图片 宽高 为 100x300，（按竖直方式平分为三个，分别为 上中下）</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x100&#x27;, crop: &#x27;bottom&#x27; &#125;&#125; // 显示部分 为 下</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><h5 id=\"原图-九宫格\"><a href=\"#原图-九宫格\" class=\"headerlink\" title=\"原图 - 九宫格\"></a><strong>原图</strong> - 九宫格</h5><p>尺寸：900x900</p>\n<p><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x300.jpg\" alt=\"img\"></p>\n<h5 id=\"1、不带-crop，则根据固定尺寸原则，返回原始尺寸\"><a href=\"#1、不带-crop，则根据固定尺寸原则，返回原始尺寸\" class=\"headerlink\" title=\"1、不带 crop，则根据固定尺寸原则，返回原始尺寸\"></a><strong>1、不带 crop，则根据固定尺寸原则，返回原始尺寸</strong></h5><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;900x300&#x27; &#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_900x300.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>效果图</strong></p>\n<p><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_900x300.jpg\" alt=\"img\"></p>\n<h5 id=\"2、带-crop，-图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\"><a href=\"#2、带-crop，-图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\" class=\"headerlink\" title=\"2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分\"></a>2、带 crop， 图片不符合尺寸时，则根据crop指定的位置，截取要显示的部分</h5><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;top&#x27; &#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;center&#x27;&#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;300x100&#x27;, crop: &#x27;bottom&#x27;&#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;left&#x27; &#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;center&#x27;&#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;100x300&#x27;, crop: &#x27;right&#x27;&#125;&#125; </span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_top.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_center.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_300x100_crop_bottom.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_left.jpg</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_cen300x150</span><br><span class=\"line\">&#x2F;&#x2F;cdn.shopify.com&#x2F;s&#x2F;files&#x2F;1&#x2F;0449&#x2F;5491&#x2F;0874&#x2F;files&#x2F;sudoku_100x300_crop_right.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>图片</strong></p>\n<table>\n<thead>\n<tr>\n<th>300x100 top</th>\n<th>300x100 center</th>\n<th>300x100 right</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_top.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_center.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_300x100_crop_bottom.jpg\" alt=\"img\"></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>100x300 left</th>\n<th>100x300 center</th>\n<th>100x300 right</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_left.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_center.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_100x300_crop_right.jpg\" alt=\"img\"></td>\n</tr>\n</tbody></table>\n<h3 id=\"图片比例（倍数）参数-scale\"><a href=\"#图片比例（倍数）参数-scale\" class=\"headerlink\" title=\"图片比例（倍数）参数 scale\"></a>图片比例（倍数）参数 scale</h3><p><em>谷歌翻译 为 亲密度，但是从效果来看我觉得翻译为比例或者倍数更加恰当</em></p>\n<p>该<code>scale</code>参数使您可以指定图像的像素密度。（返回img_url设置的尺寸的scale倍数的图片尺寸，这里我可能解释的不是很清楚，我们还是直接看示例）</p>\n<h5 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url: &#x27;150x150&#x27; &#125;&#125;</span><br><span class=\"line\">&#123;&#123; image | img_url: &#x27;150x150&#x27;, scale: 2 &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg</span><br><span class=\"line\">//cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>效果图</strong></p>\n<table>\n<thead>\n<tr>\n<th>&#123;&#123; image | img_url: ‘150x150’ &#125;&#125;</th>\n<th>&#123;&#123; image | img_url: ‘150x150’, scale: 2 &#125;&#125;</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150.jpg\" alt=\"img\"></td>\n<td><img src=\"https://cdn.shopify.com/s/files/1/0449/5491/0874/files/sudoku_150x150@2x.jpg\" alt=\"img\"></td>\n</tr>\n<tr>\n<td>图片尺寸：150x150</td>\n<td>图片尺寸：300x300</td>\n</tr>\n</tbody></table>\n<p>根据上述例子，相信你应该能明白 <strong>scale</strong> 的作用了</p>\n<h3 id=\"图片格式参数-format\"><a href=\"#图片格式参数-format\" class=\"headerlink\" title=\"图片格式参数 format\"></a>图片格式参数 format</h3><p>该<code>format</code>参数使您可以指定要用于显示图像的文件格式。有效选项包括：<code>jpg</code>、<code>pjpg</code>(<a class=\"link\"   href=\"https://en.wikipedia.org/wiki/JPEG#JPEG_compression\" >渐进式JPEG<i class=\"fas fa-external-link-alt\"></i></a>。浏览器以逐渐提高的质量加载全尺寸的渐进式JPEG，而不是像传统JPEG那样从上到下加载完整质量的图像。)</p>\n<p>Shopify可以为您执行以下格式转换：PNG 转 JPG、PNG 转 PJPG、JPG 转 PJPG</p>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p><strong>输入</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; image | img_url, format: &#x27;jpg&#x27;  &#125;&#125; </span><br><span class=\"line\">&#123;&#123; image | img_url, format: &#x27;pjpg&#x27; &#125;&#125;</span><br><span class=\"line\">&#123;&#123; image | img_url, format: &#x27;pjpg&#x27;  &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>CDN</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* PNG 转 JPG */</span></span><br><span class=\"line\">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.png.jpg </span><br><span class=\"line\"><span class=\"comment\">/* PNG 转 PJPG */</span></span><br><span class=\"line\">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.png.jpg</span><br><span class=\"line\"><span class=\"comment\">/* JPG 转 PJPG */</span></span><br><span class=\"line\">https://cdn.shopify.com/s/files/1/0449/5491/0874/files/baymax_100x100.progressive.jpg</span><br></pre></td></tr></table></figure>\n<p><strong>效果图</strong></p>\n<table>\n<thead>\n<tr>\n<th>PNG 转 JPG</th>\n<th>PNG 转 PJPG</th>\n<th>JPG 转 PJPG</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#123;&#123; image | img_url, format: ‘jpg’ &#125;&#125;&#125;</td>\n<td>&#123;&#123;image | img_url, format: ‘pjpg’ &#125;&#125;</td>\n<td>&#123;&#123;image | img_url, format: ‘pjpg’ &#125;&#125;</td>\n</tr>\n<tr>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/9e71f5c9dfdc27044f53d3600b702398.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/af27185e6344fa9e237d57f87d48f858.png\" alt=\"img\"></td>\n</tr>\n<tr>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/70c761fd11c6c783542b745340ba4b0a.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/0369ae7f97d6b7011609e8d4ec8ec295.png\" alt=\"img\"></td>\n<td><img src=\"https://img-blog.csdnimg.cn/img_convert/6c9061c123da783eeabd183d1db2ba45.png\" alt=\"img\"></td>\n</tr>\n</tbody></table>\n"},{"title":"shopify产品页面数据获取","_content":"### 获取产品数据\n\n\n\n#### 获取标题\n\n```\n{{ product.title }}\n```\n\n#### 获取最低价和最高价\n\n```\n{{ product.price_min | money }} - {{ product.price_max | money }}\n```\n\n#### 获取 variant （后面我将叫它为变体），并获取关联数据\n\n这里我先讲一下 我的选购逻辑，因为这里的代码数据应该如何获取与我的选购逻辑有关系。我的选购逻辑与速卖通的有点像，速卖通是有个选项可以绑定图片，这样用户可以更直观的知道他的选择。而为我的逻辑是通过选择图片进行选购，不一样的是我的图片可以通过选择属性进行筛选，而不是不同属性的图片是一样的，下面是速卖通的截图\n\n![速卖通图片选项](https://img-blog.csdnimg.cn/20200330124554589.gif)\n\n####  **获取 variant 和关联数据，图片，标题，ID**\n\n这里我规定 多重属性 的 第一个option 是 image 第二个是 size，因为我的项目选项是固定的，可以这样做，当然你也可以写成灵活的，只是这样你需要做的工作量比较多而已\n\n~~~\n{% for variant in product.variants %}\n  {% assign id = variant.id %}\n  {% assign title = variant.title %}\n  {% assign image = variant.image %}\n  {% assign size = variant.option2 %}\n{% endfor%}\n~~~\n\n#### 获取选项数据\n\n这里可以根据我根据我的项目需求进行获取，我的项目需求可以简单的认为只有 图片 和 尺寸\n图片上面已经有了，所以这里我只需要得到 size。这里是有条件，要求你在上传产品的时候设置多重属性的时候就要对应名称，我这里是 image 和 color。\n\n```\n// 获取 size\n{% for value in product.options_by_name['size'].values %}\n  <li>{{ value }}</li>\n{% endfor %}\n\n```\n\n#### 数据绑定\n\n数据绑定还是比较简单的，讲获取到的数据通过 data- 绑定在dom上就好了，后面我们通过js来读取即可，可根据自己需要进行绑定\n\n对于大部分人来说可能更加喜欢通过 js 渲染数据。这里给大家提供以下如何在js中获取产品数据的代码，如果你需要考虑SEO,那你就的主意一下，因为爬虫是无法读取js渲染的数据\n\n````\n// 记得必须是在产品页面下才有效 需要访问得到 {{ product }}\n<script>\n  // 获取 product 的json数据\n  let product = {};\n  product.data = {{ product | json }};\n</script>\n````\n\n","source":"_posts/shopify/shopify产品页面数据获取.md","raw":"---\ntitle: shopify产品页面数据获取\ncategories:\n  - shopify\n---\n### 获取产品数据\n\n\n\n#### 获取标题\n\n```\n{{ product.title }}\n```\n\n#### 获取最低价和最高价\n\n```\n{{ product.price_min | money }} - {{ product.price_max | money }}\n```\n\n#### 获取 variant （后面我将叫它为变体），并获取关联数据\n\n这里我先讲一下 我的选购逻辑，因为这里的代码数据应该如何获取与我的选购逻辑有关系。我的选购逻辑与速卖通的有点像，速卖通是有个选项可以绑定图片，这样用户可以更直观的知道他的选择。而为我的逻辑是通过选择图片进行选购，不一样的是我的图片可以通过选择属性进行筛选，而不是不同属性的图片是一样的，下面是速卖通的截图\n\n![速卖通图片选项](https://img-blog.csdnimg.cn/20200330124554589.gif)\n\n####  **获取 variant 和关联数据，图片，标题，ID**\n\n这里我规定 多重属性 的 第一个option 是 image 第二个是 size，因为我的项目选项是固定的，可以这样做，当然你也可以写成灵活的，只是这样你需要做的工作量比较多而已\n\n~~~\n{% for variant in product.variants %}\n  {% assign id = variant.id %}\n  {% assign title = variant.title %}\n  {% assign image = variant.image %}\n  {% assign size = variant.option2 %}\n{% endfor%}\n~~~\n\n#### 获取选项数据\n\n这里可以根据我根据我的项目需求进行获取，我的项目需求可以简单的认为只有 图片 和 尺寸\n图片上面已经有了，所以这里我只需要得到 size。这里是有条件，要求你在上传产品的时候设置多重属性的时候就要对应名称，我这里是 image 和 color。\n\n```\n// 获取 size\n{% for value in product.options_by_name['size'].values %}\n  <li>{{ value }}</li>\n{% endfor %}\n\n```\n\n#### 数据绑定\n\n数据绑定还是比较简单的，讲获取到的数据通过 data- 绑定在dom上就好了，后面我们通过js来读取即可，可根据自己需要进行绑定\n\n对于大部分人来说可能更加喜欢通过 js 渲染数据。这里给大家提供以下如何在js中获取产品数据的代码，如果你需要考虑SEO,那你就的主意一下，因为爬虫是无法读取js渲染的数据\n\n````\n// 记得必须是在产品页面下才有效 需要访问得到 {{ product }}\n<script>\n  // 获取 product 的json数据\n  let product = {};\n  product.data = {{ product | json }};\n</script>\n````\n\n","slug":"shopify/shopify产品页面数据获取","published":1,"date":"2020-12-19T12:03:49.357Z","updated":"2020-12-24T16:04:34.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1pv000vap1i2dh67tcu","content":"<h3 id=\"获取产品数据\"><a href=\"#获取产品数据\" class=\"headerlink\" title=\"获取产品数据\"></a>获取产品数据</h3><h4 id=\"获取标题\"><a href=\"#获取标题\" class=\"headerlink\" title=\"获取标题\"></a>获取标题</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; product.title &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取最低价和最高价\"><a href=\"#获取最低价和最高价\" class=\"headerlink\" title=\"获取最低价和最高价\"></a>获取最低价和最高价</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; product.price_min | money &#125;&#125; - &#123;&#123; product.price_max | money &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取-variant-（后面我将叫它为变体），并获取关联数据\"><a href=\"#获取-variant-（后面我将叫它为变体），并获取关联数据\" class=\"headerlink\" title=\"获取 variant （后面我将叫它为变体），并获取关联数据\"></a>获取 variant （后面我将叫它为变体），并获取关联数据</h4><p>这里我先讲一下 我的选购逻辑，因为这里的代码数据应该如何获取与我的选购逻辑有关系。我的选购逻辑与速卖通的有点像，速卖通是有个选项可以绑定图片，这样用户可以更直观的知道他的选择。而为我的逻辑是通过选择图片进行选购，不一样的是我的图片可以通过选择属性进行筛选，而不是不同属性的图片是一样的，下面是速卖通的截图</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200330124554589.gif\" alt=\"速卖通图片选项\"></p>\n<h4 id=\"获取-variant-和关联数据，图片，标题，ID\"><a href=\"#获取-variant-和关联数据，图片，标题，ID\" class=\"headerlink\" title=\"获取 variant 和关联数据，图片，标题，ID\"></a><strong>获取 variant 和关联数据，图片，标题，ID</strong></h4><p>这里我规定 多重属性 的 第一个option 是 image 第二个是 size，因为我的项目选项是固定的，可以这样做，当然你也可以写成灵活的，只是这样你需要做的工作量比较多而已</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for variant in product.variants %&#125;</span><br><span class=\"line\">  &#123;% assign id &#x3D; variant.id %&#125;</span><br><span class=\"line\">  &#123;% assign title &#x3D; variant.title %&#125;</span><br><span class=\"line\">  &#123;% assign image &#x3D; variant.image %&#125;</span><br><span class=\"line\">  &#123;% assign size &#x3D; variant.option2 %&#125;</span><br><span class=\"line\">&#123;% endfor%&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取选项数据\"><a href=\"#获取选项数据\" class=\"headerlink\" title=\"获取选项数据\"></a>获取选项数据</h4><p>这里可以根据我根据我的项目需求进行获取，我的项目需求可以简单的认为只有 图片 和 尺寸<br>图片上面已经有了，所以这里我只需要得到 size。这里是有条件，要求你在上传产品的时候设置多重属性的时候就要对应名称，我这里是 image 和 color。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 获取 size</span><br><span class=\"line\">&#123;% for value in product.options_by_name[&#39;size&#39;].values %&#125;</span><br><span class=\"line\">  &lt;li&gt;&#123;&#123; value &#125;&#125;&lt;&#x2F;li&gt;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h4><p>数据绑定还是比较简单的，讲获取到的数据通过 data- 绑定在dom上就好了，后面我们通过js来读取即可，可根据自己需要进行绑定</p>\n<p>对于大部分人来说可能更加喜欢通过 js 渲染数据。这里给大家提供以下如何在js中获取产品数据的代码，如果你需要考虑SEO,那你就的主意一下，因为爬虫是无法读取js渲染的数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 记得必须是在产品页面下才有效 需要访问得到 &#123;&#123; product &#125;&#125;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  &#x2F;&#x2F; 获取 product 的json数据</span><br><span class=\"line\">  let product &#x3D; &#123;&#125;;</span><br><span class=\"line\">  product.data &#x3D; &#123;&#123; product | json &#125;&#125;;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h3 id=\"获取产品数据\"><a href=\"#获取产品数据\" class=\"headerlink\" title=\"获取产品数据\"></a>获取产品数据</h3><h4 id=\"获取标题\"><a href=\"#获取标题\" class=\"headerlink\" title=\"获取标题\"></a>获取标题</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; product.title &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取最低价和最高价\"><a href=\"#获取最低价和最高价\" class=\"headerlink\" title=\"获取最低价和最高价\"></a>获取最低价和最高价</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; product.price_min | money &#125;&#125; - &#123;&#123; product.price_max | money &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取-variant-（后面我将叫它为变体），并获取关联数据\"><a href=\"#获取-variant-（后面我将叫它为变体），并获取关联数据\" class=\"headerlink\" title=\"获取 variant （后面我将叫它为变体），并获取关联数据\"></a>获取 variant （后面我将叫它为变体），并获取关联数据</h4><p>这里我先讲一下 我的选购逻辑，因为这里的代码数据应该如何获取与我的选购逻辑有关系。我的选购逻辑与速卖通的有点像，速卖通是有个选项可以绑定图片，这样用户可以更直观的知道他的选择。而为我的逻辑是通过选择图片进行选购，不一样的是我的图片可以通过选择属性进行筛选，而不是不同属性的图片是一样的，下面是速卖通的截图</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200330124554589.gif\" alt=\"速卖通图片选项\"></p>\n<h4 id=\"获取-variant-和关联数据，图片，标题，ID\"><a href=\"#获取-variant-和关联数据，图片，标题，ID\" class=\"headerlink\" title=\"获取 variant 和关联数据，图片，标题，ID\"></a><strong>获取 variant 和关联数据，图片，标题，ID</strong></h4><p>这里我规定 多重属性 的 第一个option 是 image 第二个是 size，因为我的项目选项是固定的，可以这样做，当然你也可以写成灵活的，只是这样你需要做的工作量比较多而已</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for variant in product.variants %&#125;</span><br><span class=\"line\">  &#123;% assign id &#x3D; variant.id %&#125;</span><br><span class=\"line\">  &#123;% assign title &#x3D; variant.title %&#125;</span><br><span class=\"line\">  &#123;% assign image &#x3D; variant.image %&#125;</span><br><span class=\"line\">  &#123;% assign size &#x3D; variant.option2 %&#125;</span><br><span class=\"line\">&#123;% endfor%&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取选项数据\"><a href=\"#获取选项数据\" class=\"headerlink\" title=\"获取选项数据\"></a>获取选项数据</h4><p>这里可以根据我根据我的项目需求进行获取，我的项目需求可以简单的认为只有 图片 和 尺寸<br>图片上面已经有了，所以这里我只需要得到 size。这里是有条件，要求你在上传产品的时候设置多重属性的时候就要对应名称，我这里是 image 和 color。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 获取 size</span><br><span class=\"line\">&#123;% for value in product.options_by_name[&#39;size&#39;].values %&#125;</span><br><span class=\"line\">  &lt;li&gt;&#123;&#123; value &#125;&#125;&lt;&#x2F;li&gt;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h4><p>数据绑定还是比较简单的，讲获取到的数据通过 data- 绑定在dom上就好了，后面我们通过js来读取即可，可根据自己需要进行绑定</p>\n<p>对于大部分人来说可能更加喜欢通过 js 渲染数据。这里给大家提供以下如何在js中获取产品数据的代码，如果你需要考虑SEO,那你就的主意一下，因为爬虫是无法读取js渲染的数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 记得必须是在产品页面下才有效 需要访问得到 &#123;&#123; product &#125;&#125;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  &#x2F;&#x2F; 获取 product 的json数据</span><br><span class=\"line\">  let product &#x3D; &#123;&#125;;</span><br><span class=\"line\">  product.data &#x3D; &#123;&#123; product | json &#125;&#125;;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"shopify模板开发学习-自定义配置文件","_content":"\n\n\n在创建主题时，可以为客户预留一些自定义的配置，是Shopify主题模板常用的做法。Shopify使用settings_schema.json文件提供了这个自定义配置的方式。\n\n在Shopify主题的config目录中，在此文件中定义一些对象属性，就可以实现自定义的配置选项。当你选择在线商店 》 模板 》自定义按钮，就可以看到控制面板中这些选项。\n\n## 配置文件的文件格式\n\nsettings_schema.json文件，本身是个JSON文件，那么他需要遵守JSON文件规范，这里所有的数据都用[]括起来。在此范围内，你可以将相关选项组合在一起。每个分组都有一个名称，然后是定义这个组的配置。比如：\n\n```javascript\n[\n    {\n        \"name\" : \"颜色\",\n        \"settings\" : [ ]\n    }\n]\n123456\n```\n\n然后，每个选项都是设置数组中的一个对象。 像这样的东西：\n\n```json\n[\n  {\n    \"name\": \"Shopify119\",\n    \"theme_name\": \"Shopify119 theme\",\n    \"theme_version\": \"1.0.0\",\n    \"theme_author\": \"Leo\",\n    \"theme_documentation_url\": \"https://shopify119.blog.csdn.net\",\n    \"theme_support_url\": \"https://shopify119.blog.csdn.net\"\n  },\n  {\n    \"name\" : \"颜色\",\n    \"settings\" : [\n      {\n        \"type\": \"color\",\n        \"id\": \"color_background\",\n        \"label\": \"背景颜色\",\n        \"default\": \"#e5e5e5\",\n        \"info\" : \"这个将调整背景颜色\"\n      },\n      {\n        \"type\": \"color\",\n        \"id\": \"color_body_text\",\n        \"label\": \"内容文字颜色\",\n        \"default\": \"#2980b9\",\n        \"info\" : \"这个将调整内容文字颜色\"\n      }\n    ]\n  },\n  {\n    \"name\": \"Logo\",\n    \"settings\": [\n      {\n        \"type\": \"image\",\n        \"id\": \"logo.png\",\n        \"label\": \"Logo\",\n        \"info\": \"这里可以改变店铺的Logo\"\n      }\n    ]\n  }\n]\n \n```\n\n上面的例子中，在自定义设置的侧栏上，你可以看到标签“颜色”，当你单击他时，可以选择设置背景颜色和内容文字颜色；选择Logo可以更改店铺的Logo。\n![在这里插入图片描述](https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200305144403759.gif)\n\n## 配置文件的属性\n\n每个设置都有5个属性：type、id、label、default、info\n\n\n\n| 类型 | 是否必填 | 描述                   |\n| ---- | -------- | ---------------------- |\n| type | 必填     | 定义选项所需的输入类型 |\n|id |必填| id必须唯一，这将在主题中引用它|\n| label | 必填 | 向用户描述了该选项的用途，可以用中文 |\n|placeholder| 可选| 输入的占位符文本的值。这仅适用于基于文本的设置类型。|\n|default| 可选| 该选项的默认值|\n|info| 可选| 为用户提供该选项的详细使用信息|\n\n\n\n## 常规设置类型\n\n下表描述了允许的常规输入类型，每个值在type属性中设置。\n\n| 值   | 说明 |\n| ---- | ---- |\n| text | 允许用户输入单行文本字段 |\n|textarea| 允许用户输入多行文本字段|\n|image| 允许用户上传图片|\n|radio |允许用户使用单选按钮|\n|select| 允许用户从下拉列表中进行选择|\n|checkbox| 允许用户选中一个框，返回true或false值|\n\nimage type\n需要注意的是，用这种方式上传的图片将保存在模板的assets文件夹中。该文件使用id中定义的名称和格式进行保存。所以，即使上传的是.jpg文件，但是id定义的是logo.png，图片也将会保存为.png文件。\n\nradio和select type\n由于radio和select有多个值可提供选择，因此还需要设置额外的属性。比如：\n\n```json\n{\n\t\t  \"type\":      \"radio\",\n\t\t  \"id\":        \"id\",\n\t\t  \"label\":     \"Text\",\n\t\t  \"options\": [\n\t\t    { \"value\": \"one\", \"label\": \"Radio One\" },\n\t\t    { \"value\": \"two\", \"label\": \"Radio Two\" }\n\t\t  ],\n\t\t  \"default\":   \"one\",\n\t\t  \"info\":      \"Text\"\n} \n```\n\n## 特殊设置类型\n\n特殊设置类型的定义访问和常规设置类型相似，不同之处在于这些设置，将为用户提供内置或特定的选择信息。比如：产品类型是下拉列表，但只允许用户从已经在商店中定义的产品类型中进行选择。\n\n| 值   | 说明 |\n| ---- | ---- |\n|color| 允许用户使用颜色选择器窗口小部件选择颜色|\n| font | 允许用户从可用字体列表中进行选择 |\n| collection | 允许用户选择商店中可用的产品系列 |\n|product| 允许用户选择商店中可用的产品|\n|blog| 允许用户从商店中设置的博客列表中进行选择|\n|link_list| 允许用户从可用菜单中进行选择|\n|page |允许用户选择商店中定义的特定页面|\n|snippets| 允许用户选择主题中可用的特定代码段|\n\n## Blog Type\n\nShopify内置了博客，你可以添加博客文章。还可以把这些博客文章添加到不同的博客中。blog type设置下拉列表允许你选择要用于改设置的博客。\n\n## Snippet Type\n\n代码片段在模板中的snippets目录里面定义。\n\n### 信息设置\n\n\n\nShopify还允许将创建主题的作者信息放入侧边栏中，它们只有3个属性：type, content, info\n\n| 类型 | 是否必填 | 描述 |\n| ---- | -------- | ---- |\n| type | 必填 | 定义选项所需的输入类型。 对于侧边栏设置，这只能是标题或段落 |\n| content | 必填 | 文本内容 |\n| info | 可选 | 向用户提供有关该选项的其他信息。 |\n\n\n在模板中调用配置信息\n现在已经可以创建设置信息了，但是如何在实际的模板中调用并使用它们？这将是下篇文章的内容。","source":"_posts/shopify/shopify模板开发学习-自定义配置文件.md","raw":"---\ntitle: shopify模板开发学习-自定义配置文件\ncategories:\n  - shopify\n---\n\n\n\n在创建主题时，可以为客户预留一些自定义的配置，是Shopify主题模板常用的做法。Shopify使用settings_schema.json文件提供了这个自定义配置的方式。\n\n在Shopify主题的config目录中，在此文件中定义一些对象属性，就可以实现自定义的配置选项。当你选择在线商店 》 模板 》自定义按钮，就可以看到控制面板中这些选项。\n\n## 配置文件的文件格式\n\nsettings_schema.json文件，本身是个JSON文件，那么他需要遵守JSON文件规范，这里所有的数据都用[]括起来。在此范围内，你可以将相关选项组合在一起。每个分组都有一个名称，然后是定义这个组的配置。比如：\n\n```javascript\n[\n    {\n        \"name\" : \"颜色\",\n        \"settings\" : [ ]\n    }\n]\n123456\n```\n\n然后，每个选项都是设置数组中的一个对象。 像这样的东西：\n\n```json\n[\n  {\n    \"name\": \"Shopify119\",\n    \"theme_name\": \"Shopify119 theme\",\n    \"theme_version\": \"1.0.0\",\n    \"theme_author\": \"Leo\",\n    \"theme_documentation_url\": \"https://shopify119.blog.csdn.net\",\n    \"theme_support_url\": \"https://shopify119.blog.csdn.net\"\n  },\n  {\n    \"name\" : \"颜色\",\n    \"settings\" : [\n      {\n        \"type\": \"color\",\n        \"id\": \"color_background\",\n        \"label\": \"背景颜色\",\n        \"default\": \"#e5e5e5\",\n        \"info\" : \"这个将调整背景颜色\"\n      },\n      {\n        \"type\": \"color\",\n        \"id\": \"color_body_text\",\n        \"label\": \"内容文字颜色\",\n        \"default\": \"#2980b9\",\n        \"info\" : \"这个将调整内容文字颜色\"\n      }\n    ]\n  },\n  {\n    \"name\": \"Logo\",\n    \"settings\": [\n      {\n        \"type\": \"image\",\n        \"id\": \"logo.png\",\n        \"label\": \"Logo\",\n        \"info\": \"这里可以改变店铺的Logo\"\n      }\n    ]\n  }\n]\n \n```\n\n上面的例子中，在自定义设置的侧栏上，你可以看到标签“颜色”，当你单击他时，可以选择设置背景颜色和内容文字颜色；选择Logo可以更改店铺的Logo。\n![在这里插入图片描述](https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200305144403759.gif)\n\n## 配置文件的属性\n\n每个设置都有5个属性：type、id、label、default、info\n\n\n\n| 类型 | 是否必填 | 描述                   |\n| ---- | -------- | ---------------------- |\n| type | 必填     | 定义选项所需的输入类型 |\n|id |必填| id必须唯一，这将在主题中引用它|\n| label | 必填 | 向用户描述了该选项的用途，可以用中文 |\n|placeholder| 可选| 输入的占位符文本的值。这仅适用于基于文本的设置类型。|\n|default| 可选| 该选项的默认值|\n|info| 可选| 为用户提供该选项的详细使用信息|\n\n\n\n## 常规设置类型\n\n下表描述了允许的常规输入类型，每个值在type属性中设置。\n\n| 值   | 说明 |\n| ---- | ---- |\n| text | 允许用户输入单行文本字段 |\n|textarea| 允许用户输入多行文本字段|\n|image| 允许用户上传图片|\n|radio |允许用户使用单选按钮|\n|select| 允许用户从下拉列表中进行选择|\n|checkbox| 允许用户选中一个框，返回true或false值|\n\nimage type\n需要注意的是，用这种方式上传的图片将保存在模板的assets文件夹中。该文件使用id中定义的名称和格式进行保存。所以，即使上传的是.jpg文件，但是id定义的是logo.png，图片也将会保存为.png文件。\n\nradio和select type\n由于radio和select有多个值可提供选择，因此还需要设置额外的属性。比如：\n\n```json\n{\n\t\t  \"type\":      \"radio\",\n\t\t  \"id\":        \"id\",\n\t\t  \"label\":     \"Text\",\n\t\t  \"options\": [\n\t\t    { \"value\": \"one\", \"label\": \"Radio One\" },\n\t\t    { \"value\": \"two\", \"label\": \"Radio Two\" }\n\t\t  ],\n\t\t  \"default\":   \"one\",\n\t\t  \"info\":      \"Text\"\n} \n```\n\n## 特殊设置类型\n\n特殊设置类型的定义访问和常规设置类型相似，不同之处在于这些设置，将为用户提供内置或特定的选择信息。比如：产品类型是下拉列表，但只允许用户从已经在商店中定义的产品类型中进行选择。\n\n| 值   | 说明 |\n| ---- | ---- |\n|color| 允许用户使用颜色选择器窗口小部件选择颜色|\n| font | 允许用户从可用字体列表中进行选择 |\n| collection | 允许用户选择商店中可用的产品系列 |\n|product| 允许用户选择商店中可用的产品|\n|blog| 允许用户从商店中设置的博客列表中进行选择|\n|link_list| 允许用户从可用菜单中进行选择|\n|page |允许用户选择商店中定义的特定页面|\n|snippets| 允许用户选择主题中可用的特定代码段|\n\n## Blog Type\n\nShopify内置了博客，你可以添加博客文章。还可以把这些博客文章添加到不同的博客中。blog type设置下拉列表允许你选择要用于改设置的博客。\n\n## Snippet Type\n\n代码片段在模板中的snippets目录里面定义。\n\n### 信息设置\n\n\n\nShopify还允许将创建主题的作者信息放入侧边栏中，它们只有3个属性：type, content, info\n\n| 类型 | 是否必填 | 描述 |\n| ---- | -------- | ---- |\n| type | 必填 | 定义选项所需的输入类型。 对于侧边栏设置，这只能是标题或段落 |\n| content | 必填 | 文本内容 |\n| info | 可选 | 向用户提供有关该选项的其他信息。 |\n\n\n在模板中调用配置信息\n现在已经可以创建设置信息了，但是如何在实际的模板中调用并使用它们？这将是下篇文章的内容。","slug":"shopify/shopify模板开发学习-自定义配置文件","published":1,"date":"2020-12-19T12:03:49.361Z","updated":"2020-12-24T15:59:54.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1px000yap1i6vrw1kch","content":"<p>在创建主题时，可以为客户预留一些自定义的配置，是Shopify主题模板常用的做法。Shopify使用settings_schema.json文件提供了这个自定义配置的方式。</p>\n<p>在Shopify主题的config目录中，在此文件中定义一些对象属性，就可以实现自定义的配置选项。当你选择在线商店 》 模板 》自定义按钮，就可以看到控制面板中这些选项。</p>\n<h2 id=\"配置文件的文件格式\"><a href=\"#配置文件的文件格式\" class=\"headerlink\" title=\"配置文件的文件格式\"></a>配置文件的文件格式</h2><p>settings_schema.json文件，本身是个JSON文件，那么他需要遵守JSON文件规范，这里所有的数据都用[]括起来。在此范围内，你可以将相关选项组合在一起。每个分组都有一个名称，然后是定义这个组的配置。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;settings&quot;</span> : [ ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"number\">123456</span></span><br></pre></td></tr></table></figure>\n<p>然后，每个选项都是设置数组中的一个对象。 像这样的东西：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Shopify119&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_name&quot;</span>: <span class=\"string\">&quot;Shopify119 theme&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_version&quot;</span>: <span class=\"string\">&quot;1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_author&quot;</span>: <span class=\"string\">&quot;Leo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_documentation_url&quot;</span>: <span class=\"string\">&quot;https://shopify119.blog.csdn.net&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_support_url&quot;</span>: <span class=\"string\">&quot;https://shopify119.blog.csdn.net&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span> : <span class=\"string\">&quot;颜色&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;settings&quot;</span> : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_background&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;背景颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;default&quot;</span>: <span class=\"string\">&quot;#e5e5e5&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整背景颜色&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_body_text&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;内容文字颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;default&quot;</span>: <span class=\"string\">&quot;#2980b9&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整内容文字颜色&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Logo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;settings&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;image&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;logo.png&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;Logo&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;info&quot;</span>: <span class=\"string\">&quot;这里可以改变店铺的Logo&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<p>上面的例子中，在自定义设置的侧栏上，你可以看到标签“颜色”，当你单击他时，可以选择设置背景颜色和内容文字颜色；选择Logo可以更改店铺的Logo。<br><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200305144403759.gif\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"配置文件的属性\"><a href=\"#配置文件的属性\" class=\"headerlink\" title=\"配置文件的属性\"></a>配置文件的属性</h2><p>每个设置都有5个属性：type、id、label、default、info</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>是否必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type</td>\n<td>必填</td>\n<td>定义选项所需的输入类型</td>\n</tr>\n<tr>\n<td>id</td>\n<td>必填</td>\n<td>id必须唯一，这将在主题中引用它</td>\n</tr>\n<tr>\n<td>label</td>\n<td>必填</td>\n<td>向用户描述了该选项的用途，可以用中文</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>可选</td>\n<td>输入的占位符文本的值。这仅适用于基于文本的设置类型。</td>\n</tr>\n<tr>\n<td>default</td>\n<td>可选</td>\n<td>该选项的默认值</td>\n</tr>\n<tr>\n<td>info</td>\n<td>可选</td>\n<td>为用户提供该选项的详细使用信息</td>\n</tr>\n</tbody></table>\n<h2 id=\"常规设置类型\"><a href=\"#常规设置类型\" class=\"headerlink\" title=\"常规设置类型\"></a>常规设置类型</h2><p>下表描述了允许的常规输入类型，每个值在type属性中设置。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>text</td>\n<td>允许用户输入单行文本字段</td>\n</tr>\n<tr>\n<td>textarea</td>\n<td>允许用户输入多行文本字段</td>\n</tr>\n<tr>\n<td>image</td>\n<td>允许用户上传图片</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>允许用户使用单选按钮</td>\n</tr>\n<tr>\n<td>select</td>\n<td>允许用户从下拉列表中进行选择</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>允许用户选中一个框，返回true或false值</td>\n</tr>\n</tbody></table>\n<p>image type<br>需要注意的是，用这种方式上传的图片将保存在模板的assets文件夹中。该文件使用id中定义的名称和格式进行保存。所以，即使上传的是.jpg文件，但是id定义的是logo.png，图片也将会保存为.png文件。</p>\n<p>radio和select type<br>由于radio和select有多个值可提供选择，因此还需要设置额外的属性。比如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;type&quot;</span>:      <span class=\"string\">&quot;radio&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;id&quot;</span>:        <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;label&quot;</span>:     <span class=\"string\">&quot;Text&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;options&quot;</span>: [</span><br><span class=\"line\">\t\t    &#123; <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;one&quot;</span>, <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;Radio One&quot;</span> &#125;,</span><br><span class=\"line\">\t\t    &#123; <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;two&quot;</span>, <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;Radio Two&quot;</span> &#125;</span><br><span class=\"line\">\t\t  ],</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;default&quot;</span>:   <span class=\"string\">&quot;one&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;info&quot;</span>:      <span class=\"string\">&quot;Text&quot;</span></span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<h2 id=\"特殊设置类型\"><a href=\"#特殊设置类型\" class=\"headerlink\" title=\"特殊设置类型\"></a>特殊设置类型</h2><p>特殊设置类型的定义访问和常规设置类型相似，不同之处在于这些设置，将为用户提供内置或特定的选择信息。比如：产品类型是下拉列表，但只允许用户从已经在商店中定义的产品类型中进行选择。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>color</td>\n<td>允许用户使用颜色选择器窗口小部件选择颜色</td>\n</tr>\n<tr>\n<td>font</td>\n<td>允许用户从可用字体列表中进行选择</td>\n</tr>\n<tr>\n<td>collection</td>\n<td>允许用户选择商店中可用的产品系列</td>\n</tr>\n<tr>\n<td>product</td>\n<td>允许用户选择商店中可用的产品</td>\n</tr>\n<tr>\n<td>blog</td>\n<td>允许用户从商店中设置的博客列表中进行选择</td>\n</tr>\n<tr>\n<td>link_list</td>\n<td>允许用户从可用菜单中进行选择</td>\n</tr>\n<tr>\n<td>page</td>\n<td>允许用户选择商店中定义的特定页面</td>\n</tr>\n<tr>\n<td>snippets</td>\n<td>允许用户选择主题中可用的特定代码段</td>\n</tr>\n</tbody></table>\n<h2 id=\"Blog-Type\"><a href=\"#Blog-Type\" class=\"headerlink\" title=\"Blog Type\"></a>Blog Type</h2><p>Shopify内置了博客，你可以添加博客文章。还可以把这些博客文章添加到不同的博客中。blog type设置下拉列表允许你选择要用于改设置的博客。</p>\n<h2 id=\"Snippet-Type\"><a href=\"#Snippet-Type\" class=\"headerlink\" title=\"Snippet Type\"></a>Snippet Type</h2><p>代码片段在模板中的snippets目录里面定义。</p>\n<h3 id=\"信息设置\"><a href=\"#信息设置\" class=\"headerlink\" title=\"信息设置\"></a>信息设置</h3><p>Shopify还允许将创建主题的作者信息放入侧边栏中，它们只有3个属性：type, content, info</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>是否必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type</td>\n<td>必填</td>\n<td>定义选项所需的输入类型。 对于侧边栏设置，这只能是标题或段落</td>\n</tr>\n<tr>\n<td>content</td>\n<td>必填</td>\n<td>文本内容</td>\n</tr>\n<tr>\n<td>info</td>\n<td>可选</td>\n<td>向用户提供有关该选项的其他信息。</td>\n</tr>\n</tbody></table>\n<p>在模板中调用配置信息<br>现在已经可以创建设置信息了，但是如何在实际的模板中调用并使用它们？这将是下篇文章的内容。</p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p>在创建主题时，可以为客户预留一些自定义的配置，是Shopify主题模板常用的做法。Shopify使用settings_schema.json文件提供了这个自定义配置的方式。</p>\n<p>在Shopify主题的config目录中，在此文件中定义一些对象属性，就可以实现自定义的配置选项。当你选择在线商店 》 模板 》自定义按钮，就可以看到控制面板中这些选项。</p>\n<h2 id=\"配置文件的文件格式\"><a href=\"#配置文件的文件格式\" class=\"headerlink\" title=\"配置文件的文件格式\"></a>配置文件的文件格式</h2><p>settings_schema.json文件，本身是个JSON文件，那么他需要遵守JSON文件规范，这里所有的数据都用[]括起来。在此范围内，你可以将相关选项组合在一起。每个分组都有一个名称，然后是定义这个组的配置。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;settings&quot;</span> : [ ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"number\">123456</span></span><br></pre></td></tr></table></figure>\n<p>然后，每个选项都是设置数组中的一个对象。 像这样的东西：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Shopify119&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_name&quot;</span>: <span class=\"string\">&quot;Shopify119 theme&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_version&quot;</span>: <span class=\"string\">&quot;1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_author&quot;</span>: <span class=\"string\">&quot;Leo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_documentation_url&quot;</span>: <span class=\"string\">&quot;https://shopify119.blog.csdn.net&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;theme_support_url&quot;</span>: <span class=\"string\">&quot;https://shopify119.blog.csdn.net&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span> : <span class=\"string\">&quot;颜色&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;settings&quot;</span> : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_background&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;背景颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;default&quot;</span>: <span class=\"string\">&quot;#e5e5e5&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整背景颜色&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_body_text&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;内容文字颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;default&quot;</span>: <span class=\"string\">&quot;#2980b9&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整内容文字颜色&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;Logo&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;settings&quot;</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;image&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;logo.png&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;Logo&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;info&quot;</span>: <span class=\"string\">&quot;这里可以改变店铺的Logo&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<p>上面的例子中，在自定义设置的侧栏上，你可以看到标签“颜色”，当你单击他时，可以选择设置背景颜色和内容文字颜色；选择Logo可以更改店铺的Logo。<br><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200305144403759.gif\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"配置文件的属性\"><a href=\"#配置文件的属性\" class=\"headerlink\" title=\"配置文件的属性\"></a>配置文件的属性</h2><p>每个设置都有5个属性：type、id、label、default、info</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>是否必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type</td>\n<td>必填</td>\n<td>定义选项所需的输入类型</td>\n</tr>\n<tr>\n<td>id</td>\n<td>必填</td>\n<td>id必须唯一，这将在主题中引用它</td>\n</tr>\n<tr>\n<td>label</td>\n<td>必填</td>\n<td>向用户描述了该选项的用途，可以用中文</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>可选</td>\n<td>输入的占位符文本的值。这仅适用于基于文本的设置类型。</td>\n</tr>\n<tr>\n<td>default</td>\n<td>可选</td>\n<td>该选项的默认值</td>\n</tr>\n<tr>\n<td>info</td>\n<td>可选</td>\n<td>为用户提供该选项的详细使用信息</td>\n</tr>\n</tbody></table>\n<h2 id=\"常规设置类型\"><a href=\"#常规设置类型\" class=\"headerlink\" title=\"常规设置类型\"></a>常规设置类型</h2><p>下表描述了允许的常规输入类型，每个值在type属性中设置。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>text</td>\n<td>允许用户输入单行文本字段</td>\n</tr>\n<tr>\n<td>textarea</td>\n<td>允许用户输入多行文本字段</td>\n</tr>\n<tr>\n<td>image</td>\n<td>允许用户上传图片</td>\n</tr>\n<tr>\n<td>radio</td>\n<td>允许用户使用单选按钮</td>\n</tr>\n<tr>\n<td>select</td>\n<td>允许用户从下拉列表中进行选择</td>\n</tr>\n<tr>\n<td>checkbox</td>\n<td>允许用户选中一个框，返回true或false值</td>\n</tr>\n</tbody></table>\n<p>image type<br>需要注意的是，用这种方式上传的图片将保存在模板的assets文件夹中。该文件使用id中定义的名称和格式进行保存。所以，即使上传的是.jpg文件，但是id定义的是logo.png，图片也将会保存为.png文件。</p>\n<p>radio和select type<br>由于radio和select有多个值可提供选择，因此还需要设置额外的属性。比如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;type&quot;</span>:      <span class=\"string\">&quot;radio&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;id&quot;</span>:        <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;label&quot;</span>:     <span class=\"string\">&quot;Text&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;options&quot;</span>: [</span><br><span class=\"line\">\t\t    &#123; <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;one&quot;</span>, <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;Radio One&quot;</span> &#125;,</span><br><span class=\"line\">\t\t    &#123; <span class=\"attr\">&quot;value&quot;</span>: <span class=\"string\">&quot;two&quot;</span>, <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;Radio Two&quot;</span> &#125;</span><br><span class=\"line\">\t\t  ],</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;default&quot;</span>:   <span class=\"string\">&quot;one&quot;</span>,</span><br><span class=\"line\">\t\t  <span class=\"attr\">&quot;info&quot;</span>:      <span class=\"string\">&quot;Text&quot;</span></span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<h2 id=\"特殊设置类型\"><a href=\"#特殊设置类型\" class=\"headerlink\" title=\"特殊设置类型\"></a>特殊设置类型</h2><p>特殊设置类型的定义访问和常规设置类型相似，不同之处在于这些设置，将为用户提供内置或特定的选择信息。比如：产品类型是下拉列表，但只允许用户从已经在商店中定义的产品类型中进行选择。</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>color</td>\n<td>允许用户使用颜色选择器窗口小部件选择颜色</td>\n</tr>\n<tr>\n<td>font</td>\n<td>允许用户从可用字体列表中进行选择</td>\n</tr>\n<tr>\n<td>collection</td>\n<td>允许用户选择商店中可用的产品系列</td>\n</tr>\n<tr>\n<td>product</td>\n<td>允许用户选择商店中可用的产品</td>\n</tr>\n<tr>\n<td>blog</td>\n<td>允许用户从商店中设置的博客列表中进行选择</td>\n</tr>\n<tr>\n<td>link_list</td>\n<td>允许用户从可用菜单中进行选择</td>\n</tr>\n<tr>\n<td>page</td>\n<td>允许用户选择商店中定义的特定页面</td>\n</tr>\n<tr>\n<td>snippets</td>\n<td>允许用户选择主题中可用的特定代码段</td>\n</tr>\n</tbody></table>\n<h2 id=\"Blog-Type\"><a href=\"#Blog-Type\" class=\"headerlink\" title=\"Blog Type\"></a>Blog Type</h2><p>Shopify内置了博客，你可以添加博客文章。还可以把这些博客文章添加到不同的博客中。blog type设置下拉列表允许你选择要用于改设置的博客。</p>\n<h2 id=\"Snippet-Type\"><a href=\"#Snippet-Type\" class=\"headerlink\" title=\"Snippet Type\"></a>Snippet Type</h2><p>代码片段在模板中的snippets目录里面定义。</p>\n<h3 id=\"信息设置\"><a href=\"#信息设置\" class=\"headerlink\" title=\"信息设置\"></a>信息设置</h3><p>Shopify还允许将创建主题的作者信息放入侧边栏中，它们只有3个属性：type, content, info</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>是否必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type</td>\n<td>必填</td>\n<td>定义选项所需的输入类型。 对于侧边栏设置，这只能是标题或段落</td>\n</tr>\n<tr>\n<td>content</td>\n<td>必填</td>\n<td>文本内容</td>\n</tr>\n<tr>\n<td>info</td>\n<td>可选</td>\n<td>向用户提供有关该选项的其他信息。</td>\n</tr>\n</tbody></table>\n<p>在模板中调用配置信息<br>现在已经可以创建设置信息了，但是如何在实际的模板中调用并使用它们？这将是下篇文章的内容。</p>\n"},{"title":"shopify调用配置信息","_content":"\n### 调用配置\n\n```javascript\n要调用模板中的配置信息，需要使用 liquid 语言。可以使用{%%}逻辑标签和{{}}显示标签。在这两种标签里，都可以使用settings.id，其中id就是配置中定义的属性。比如配置文件里是这样写的：\n\n[\n{\n    \"name\" : \"颜色\",\n    \"settings\" : [\n      {\n        \"type\": \"color\",\n        \"id\": \"color_background\",\n        \"label\": \"背景颜色\",\n        \"default\": \"#e5e5e5\",\n        \"info\" : \"这个将调整背景颜色\"\n      },\n      {\n        \"type\": \"color\",\n        \"id\": \"color_body_text\",\n        \"label\": \"内容文字颜色\",\n        \"default\": \"#2980b9\",\n        \"info\" : \"这个将调整内容文字颜色\"\n      }\n    ]\n  }\n]\n```\n\n你可以这样调用背景颜色：\n\n```jade\n{{ settings.color_background }}\n```\n\n#### 常规配置类型\n\n常规配置类型包括：text, textarea, image, radio, select, checkbox。每种类型都允许用户选择来修改模板。这些配置用一组liquid标签来调用。 \n\n```\n{{}}  //将会把信息显示在页面上\n{{ settings.your_id }}\n\n{%%}可以把配置信息用于逻辑处理上。\n\n    {% if settings.product_order == true %}\n      <p>可以下单!</p>\n    {% else %}\n      <p>不能下单 :(</p>\n    {% endif %}\n```\n\n\n\n## 特殊设置类型\n\n特殊设置类型包括：`color`, `font`, `collection`, `product`, `blog`, `page`, `link_list`,  `snippet。要调用他们，比常规配置稍微复杂一些。`\n\n### `Color和Font`\n\n```\ncolor和font和上面的调用方式相同，如果你在页面上直接调用，那么它将在页面上显示16进制，然而对于我们来说并没有什么卵用，我们需要在样式表中调用这个才有意义，比如将我们的sass文件保存成application.scss.liquid，就可以使用liquid语法来调用它。\nbody{\n\n\n\n    background-color: #{'{{ settings.color_background }}'} \n\n\n\n}\n```\n\n**注意：这里用#{''}包裹。**\n\n同样，字体也可以用这种方式调用：\n\n```\nbody {\n  font-family: #{'{{ settings.header_font }}'};\n }\n```\n\n## Collections\n\ncollections的调用方式会更复杂一些，首先要注意的是，当你将设置的类型为Collections是，选择面板中将显示用户的collections下拉列表，其中包括已经在商店中定义的所有Collections。这意味着必须至少已经定义了2个集合。其次，需要知道shopify都有哪些特殊配置的标签，这里有个表 http://cheat.markdunkley.com/，可以方便查看。\n\n比如，我们在这里找到了collection.liquid部分，上面有用什么标签全局访问。\n\n```\ncollections['the-handle'].variable\n```\n\n这里，the-handle是集合的名称，或者说是集合的slug。在settings_schema.json配置文件中，id的名称将定于这个属性。比如：\n\n```javascript\n [\n     {\n      \"name\": \"Collection\",\n      \"settings\" : [\n      {\n     \"type\": \"collection\",\n     \"id\": \"feature_collection\",\n      \"label\": \"Feature collection\"\n      }\n    ]\n  }\n ]\n```\n\n那么就这样调用：\n\n```\n{{ collections[settings.feature_collection] }}\n```\n\n但是，上面的代码只会显示为CollectionDrop。 为了获得有意义的东西，需要选择集合的属性（可在http://cheat.markdunkley.com/上获得），例如标题或产品。\n\n```\n{{ collections[settings.feature_collection].title }}\n```\n\n您可能还想访问该集合中每个产品的信息。 这可以通过引用集合上的products属性然后循环遍历这些来轻松实现。\n\n```html\n{% for product in collections[settings.feature_collection].products %}\n  <p>{{ product.title }} | {{ product.price }}</p>\n {% endfor %}\n```\n\n通过liquid循环语句，可以把集合中的每个产品遍历出来，并显示产品的标题和价格。\n\n## Products\n\n产品和集合的使用方式类似，查一下表，看看如何调用这个products。\n\n```\nall_products['the-handle'].variable\n```\n\n注意这里是all_products，而不是products。 所以，这样调用产品的标题和价格：\n\n```\n{{ all_products[settings.feature_product].title }} | {{ all_products[settings.feature_product].price }}\n```\n\n如果要调用产品的头图，这样来。\n\n```\n<img src=\"{{ all_products[settings.feature_product].featured_image | img_url: 'small' }}\" alt=\"{{ a\n```\n\n","source":"_posts/shopify/shopify调用配置信息.md","raw":"---\ntitle: shopify调用配置信息\ncategories:\n  - shopify\n---\n\n### 调用配置\n\n```javascript\n要调用模板中的配置信息，需要使用 liquid 语言。可以使用{%%}逻辑标签和{{}}显示标签。在这两种标签里，都可以使用settings.id，其中id就是配置中定义的属性。比如配置文件里是这样写的：\n\n[\n{\n    \"name\" : \"颜色\",\n    \"settings\" : [\n      {\n        \"type\": \"color\",\n        \"id\": \"color_background\",\n        \"label\": \"背景颜色\",\n        \"default\": \"#e5e5e5\",\n        \"info\" : \"这个将调整背景颜色\"\n      },\n      {\n        \"type\": \"color\",\n        \"id\": \"color_body_text\",\n        \"label\": \"内容文字颜色\",\n        \"default\": \"#2980b9\",\n        \"info\" : \"这个将调整内容文字颜色\"\n      }\n    ]\n  }\n]\n```\n\n你可以这样调用背景颜色：\n\n```jade\n{{ settings.color_background }}\n```\n\n#### 常规配置类型\n\n常规配置类型包括：text, textarea, image, radio, select, checkbox。每种类型都允许用户选择来修改模板。这些配置用一组liquid标签来调用。 \n\n```\n{{}}  //将会把信息显示在页面上\n{{ settings.your_id }}\n\n{%%}可以把配置信息用于逻辑处理上。\n\n    {% if settings.product_order == true %}\n      <p>可以下单!</p>\n    {% else %}\n      <p>不能下单 :(</p>\n    {% endif %}\n```\n\n\n\n## 特殊设置类型\n\n特殊设置类型包括：`color`, `font`, `collection`, `product`, `blog`, `page`, `link_list`,  `snippet。要调用他们，比常规配置稍微复杂一些。`\n\n### `Color和Font`\n\n```\ncolor和font和上面的调用方式相同，如果你在页面上直接调用，那么它将在页面上显示16进制，然而对于我们来说并没有什么卵用，我们需要在样式表中调用这个才有意义，比如将我们的sass文件保存成application.scss.liquid，就可以使用liquid语法来调用它。\nbody{\n\n\n\n    background-color: #{'{{ settings.color_background }}'} \n\n\n\n}\n```\n\n**注意：这里用#{''}包裹。**\n\n同样，字体也可以用这种方式调用：\n\n```\nbody {\n  font-family: #{'{{ settings.header_font }}'};\n }\n```\n\n## Collections\n\ncollections的调用方式会更复杂一些，首先要注意的是，当你将设置的类型为Collections是，选择面板中将显示用户的collections下拉列表，其中包括已经在商店中定义的所有Collections。这意味着必须至少已经定义了2个集合。其次，需要知道shopify都有哪些特殊配置的标签，这里有个表 http://cheat.markdunkley.com/，可以方便查看。\n\n比如，我们在这里找到了collection.liquid部分，上面有用什么标签全局访问。\n\n```\ncollections['the-handle'].variable\n```\n\n这里，the-handle是集合的名称，或者说是集合的slug。在settings_schema.json配置文件中，id的名称将定于这个属性。比如：\n\n```javascript\n [\n     {\n      \"name\": \"Collection\",\n      \"settings\" : [\n      {\n     \"type\": \"collection\",\n     \"id\": \"feature_collection\",\n      \"label\": \"Feature collection\"\n      }\n    ]\n  }\n ]\n```\n\n那么就这样调用：\n\n```\n{{ collections[settings.feature_collection] }}\n```\n\n但是，上面的代码只会显示为CollectionDrop。 为了获得有意义的东西，需要选择集合的属性（可在http://cheat.markdunkley.com/上获得），例如标题或产品。\n\n```\n{{ collections[settings.feature_collection].title }}\n```\n\n您可能还想访问该集合中每个产品的信息。 这可以通过引用集合上的products属性然后循环遍历这些来轻松实现。\n\n```html\n{% for product in collections[settings.feature_collection].products %}\n  <p>{{ product.title }} | {{ product.price }}</p>\n {% endfor %}\n```\n\n通过liquid循环语句，可以把集合中的每个产品遍历出来，并显示产品的标题和价格。\n\n## Products\n\n产品和集合的使用方式类似，查一下表，看看如何调用这个products。\n\n```\nall_products['the-handle'].variable\n```\n\n注意这里是all_products，而不是products。 所以，这样调用产品的标题和价格：\n\n```\n{{ all_products[settings.feature_product].title }} | {{ all_products[settings.feature_product].price }}\n```\n\n如果要调用产品的头图，这样来。\n\n```\n<img src=\"{{ all_products[settings.feature_product].featured_image | img_url: 'small' }}\" alt=\"{{ a\n```\n\n","slug":"shopify/shopify调用配置信息","published":1,"date":"2020-12-19T12:03:49.365Z","updated":"2020-12-24T15:59:15.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1q00013ap1idti0gj1c","content":"<h3 id=\"调用配置\"><a href=\"#调用配置\" class=\"headerlink\" title=\"调用配置\"></a>调用配置</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">要调用模板中的配置信息，需要使用 liquid 语言。可以使用&#123;%%&#125;逻辑标签和&#123;&#123;&#125;&#125;显示标签。在这两种标签里，都可以使用settings.id，其中id就是配置中定义的属性。比如配置文件里是这样写的：</span><br><span class=\"line\"></span><br><span class=\"line\">[</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;颜色&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;settings&quot;</span> : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_background&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;label&quot;</span>: <span class=\"string\">&quot;背景颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;default&quot;</span>: <span class=\"string\">&quot;#e5e5e5&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整背景颜色&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_body_text&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;label&quot;</span>: <span class=\"string\">&quot;内容文字颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;default&quot;</span>: <span class=\"string\">&quot;#2980b9&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整内容文字颜色&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>你可以这样调用背景颜色：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; settings.color_background &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"常规配置类型\"><a href=\"#常规配置类型\" class=\"headerlink\" title=\"常规配置类型\"></a>常规配置类型</h4><p>常规配置类型包括：text, textarea, image, radio, select, checkbox。每种类型都允许用户选择来修改模板。这些配置用一组liquid标签来调用。 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#125;&#125;  &#x2F;&#x2F;将会把信息显示在页面上</span><br><span class=\"line\">&#123;&#123; settings.your_id &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;%%&#125;可以把配置信息用于逻辑处理上。</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% if settings.product_order &#x3D;&#x3D; true %&#125;</span><br><span class=\"line\">      &lt;p&gt;可以下单!&lt;&#x2F;p&gt;</span><br><span class=\"line\">    &#123;% else %&#125;</span><br><span class=\"line\">      &lt;p&gt;不能下单 :(&lt;&#x2F;p&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"特殊设置类型\"><a href=\"#特殊设置类型\" class=\"headerlink\" title=\"特殊设置类型\"></a>特殊设置类型</h2><p>特殊设置类型包括：<code>color</code>, <code>font</code>, <code>collection</code>, <code>product</code>, <code>blog</code>, <code>page</code>, <code>link_list</code>,  <code>snippet。要调用他们，比常规配置稍微复杂一些。</code></p>\n<h3 id=\"Color和Font\"><a href=\"#Color和Font\" class=\"headerlink\" title=\"Color和Font\"></a><code>Color和Font</code></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color和font和上面的调用方式相同，如果你在页面上直接调用，那么它将在页面上显示16进制，然而对于我们来说并没有什么卵用，我们需要在样式表中调用这个才有意义，比如将我们的sass文件保存成application.scss.liquid，就可以使用liquid语法来调用它。</span><br><span class=\"line\">body&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    background-color: #&#123;&#39;&#123;&#123; settings.color_background &#125;&#125;&#39;&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：这里用#{‘’}包裹。</strong></p>\n<p>同样，字体也可以用这种方式调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">  font-family: #&#123;&#39;&#123;&#123; settings.header_font &#125;&#125;&#39;&#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Collections\"><a href=\"#Collections\" class=\"headerlink\" title=\"Collections\"></a>Collections</h2><p>collections的调用方式会更复杂一些，首先要注意的是，当你将设置的类型为Collections是，选择面板中将显示用户的collections下拉列表，其中包括已经在商店中定义的所有Collections。这意味着必须至少已经定义了2个集合。其次，需要知道shopify都有哪些特殊配置的标签，这里有个表 <a class=\"link\"   href=\"http://cheat.markdunkley.com/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%96%B9%E4%BE%BF%E6%9F%A5%E7%9C%8B%E3%80%82\" >http://cheat.markdunkley.com/，可以方便查看。<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>比如，我们在这里找到了collection.liquid部分，上面有用什么标签全局访问。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">collections[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure>\n<p>这里，the-handle是集合的名称，或者说是集合的slug。在settings_schema.json配置文件中，id的名称将定于这个属性。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Collection&quot;</span>,</span><br><span class=\"line\">     <span class=\"string\">&quot;settings&quot;</span> : [</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;collection&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;feature_collection&quot;</span>,</span><br><span class=\"line\">     <span class=\"string\">&quot;label&quot;</span>: <span class=\"string\">&quot;Feature collection&quot;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>那么就这样调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; collections[settings.feature_collection] &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>但是，上面的代码只会显示为CollectionDrop。 为了获得有意义的东西，需要选择集合的属性（可在<a class=\"link\"   href=\"http://cheat.markdunkley.com/%E4%B8%8A%E8%8E%B7%E5%BE%97%EF%BC%89%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%A0%87%E9%A2%98%E6%88%96%E4%BA%A7%E5%93%81%E3%80%82\" >http://cheat.markdunkley.com/上获得），例如标题或产品。<i class=\"fas fa-external-link-alt\"></i></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; collections[settings.feature_collection].title &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>您可能还想访问该集合中每个产品的信息。 这可以通过引用集合上的products属性然后循环遍历这些来轻松实现。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for product in collections[settings.feature_collection].products %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; product.title &#125;&#125; | &#123;&#123; product.price &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> &#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<p>通过liquid循环语句，可以把集合中的每个产品遍历出来，并显示产品的标题和价格。</p>\n<h2 id=\"Products\"><a href=\"#Products\" class=\"headerlink\" title=\"Products\"></a>Products</h2><p>产品和集合的使用方式类似，查一下表，看看如何调用这个products。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_products[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure>\n<p>注意这里是all_products，而不是products。 所以，这样调用产品的标题和价格：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; all_products[settings.feature_product].title &#125;&#125; | &#123;&#123; all_products[settings.feature_product].price &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>如果要调用产品的头图，这样来。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src&#x3D;&quot;&#123;&#123; all_products[settings.feature_product].featured_image | img_url: &#39;small&#39; &#125;&#125;&quot; alt&#x3D;&quot;&#123;&#123; a</span><br></pre></td></tr></table></figure>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h3 id=\"调用配置\"><a href=\"#调用配置\" class=\"headerlink\" title=\"调用配置\"></a>调用配置</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">要调用模板中的配置信息，需要使用 liquid 语言。可以使用&#123;%%&#125;逻辑标签和&#123;&#123;&#125;&#125;显示标签。在这两种标签里，都可以使用settings.id，其中id就是配置中定义的属性。比如配置文件里是这样写的：</span><br><span class=\"line\"></span><br><span class=\"line\">[</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;颜色&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;settings&quot;</span> : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_background&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;label&quot;</span>: <span class=\"string\">&quot;背景颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;default&quot;</span>: <span class=\"string\">&quot;#e5e5e5&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整背景颜色&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;color&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;color_body_text&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;label&quot;</span>: <span class=\"string\">&quot;内容文字颜色&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;default&quot;</span>: <span class=\"string\">&quot;#2980b9&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;info&quot;</span> : <span class=\"string\">&quot;这个将调整内容文字颜色&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>你可以这样调用背景颜色：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; settings.color_background &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"常规配置类型\"><a href=\"#常规配置类型\" class=\"headerlink\" title=\"常规配置类型\"></a>常规配置类型</h4><p>常规配置类型包括：text, textarea, image, radio, select, checkbox。每种类型都允许用户选择来修改模板。这些配置用一组liquid标签来调用。 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#125;&#125;  &#x2F;&#x2F;将会把信息显示在页面上</span><br><span class=\"line\">&#123;&#123; settings.your_id &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;%%&#125;可以把配置信息用于逻辑处理上。</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% if settings.product_order &#x3D;&#x3D; true %&#125;</span><br><span class=\"line\">      &lt;p&gt;可以下单!&lt;&#x2F;p&gt;</span><br><span class=\"line\">    &#123;% else %&#125;</span><br><span class=\"line\">      &lt;p&gt;不能下单 :(&lt;&#x2F;p&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"特殊设置类型\"><a href=\"#特殊设置类型\" class=\"headerlink\" title=\"特殊设置类型\"></a>特殊设置类型</h2><p>特殊设置类型包括：<code>color</code>, <code>font</code>, <code>collection</code>, <code>product</code>, <code>blog</code>, <code>page</code>, <code>link_list</code>,  <code>snippet。要调用他们，比常规配置稍微复杂一些。</code></p>\n<h3 id=\"Color和Font\"><a href=\"#Color和Font\" class=\"headerlink\" title=\"Color和Font\"></a><code>Color和Font</code></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color和font和上面的调用方式相同，如果你在页面上直接调用，那么它将在页面上显示16进制，然而对于我们来说并没有什么卵用，我们需要在样式表中调用这个才有意义，比如将我们的sass文件保存成application.scss.liquid，就可以使用liquid语法来调用它。</span><br><span class=\"line\">body&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    background-color: #&#123;&#39;&#123;&#123; settings.color_background &#125;&#125;&#39;&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：这里用#{‘’}包裹。</strong></p>\n<p>同样，字体也可以用这种方式调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">  font-family: #&#123;&#39;&#123;&#123; settings.header_font &#125;&#125;&#39;&#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Collections\"><a href=\"#Collections\" class=\"headerlink\" title=\"Collections\"></a>Collections</h2><p>collections的调用方式会更复杂一些，首先要注意的是，当你将设置的类型为Collections是，选择面板中将显示用户的collections下拉列表，其中包括已经在商店中定义的所有Collections。这意味着必须至少已经定义了2个集合。其次，需要知道shopify都有哪些特殊配置的标签，这里有个表 <a class=\"link\"   href=\"http://cheat.markdunkley.com/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%96%B9%E4%BE%BF%E6%9F%A5%E7%9C%8B%E3%80%82\" >http://cheat.markdunkley.com/，可以方便查看。<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>比如，我们在这里找到了collection.liquid部分，上面有用什么标签全局访问。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">collections[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure>\n<p>这里，the-handle是集合的名称，或者说是集合的slug。在settings_schema.json配置文件中，id的名称将定于这个属性。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">     <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;Collection&quot;</span>,</span><br><span class=\"line\">     <span class=\"string\">&quot;settings&quot;</span> : [</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;collection&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;feature_collection&quot;</span>,</span><br><span class=\"line\">     <span class=\"string\">&quot;label&quot;</span>: <span class=\"string\">&quot;Feature collection&quot;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>那么就这样调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; collections[settings.feature_collection] &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>但是，上面的代码只会显示为CollectionDrop。 为了获得有意义的东西，需要选择集合的属性（可在<a class=\"link\"   href=\"http://cheat.markdunkley.com/%E4%B8%8A%E8%8E%B7%E5%BE%97%EF%BC%89%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%A0%87%E9%A2%98%E6%88%96%E4%BA%A7%E5%93%81%E3%80%82\" >http://cheat.markdunkley.com/上获得），例如标题或产品。<i class=\"fas fa-external-link-alt\"></i></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; collections[settings.feature_collection].title &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>您可能还想访问该集合中每个产品的信息。 这可以通过引用集合上的products属性然后循环遍历这些来轻松实现。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% for product in collections[settings.feature_collection].products %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; product.title &#125;&#125; | &#123;&#123; product.price &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"> &#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<p>通过liquid循环语句，可以把集合中的每个产品遍历出来，并显示产品的标题和价格。</p>\n<h2 id=\"Products\"><a href=\"#Products\" class=\"headerlink\" title=\"Products\"></a>Products</h2><p>产品和集合的使用方式类似，查一下表，看看如何调用这个products。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_products[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure>\n<p>注意这里是all_products，而不是products。 所以，这样调用产品的标题和价格：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; all_products[settings.feature_product].title &#125;&#125; | &#123;&#123; all_products[settings.feature_product].price &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>如果要调用产品的头图，这样来。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src&#x3D;&quot;&#123;&#123; all_products[settings.feature_product].featured_image | img_url: &#39;small&#39; &#125;&#125;&quot; alt&#x3D;&quot;&#123;&#123; a</span><br></pre></td></tr></table></figure>\n"},{"title":"为什么你的Shopify店铺没有成功","_content":"![为什么99%的Shopify店铺会失败？](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-b0bea42157dab7e9792d1f6d84fc179b_1440w-20201107192202050.jpg)\n\n# 为什么你的Shopify店铺没有成功？\n\n \n\n关于Shopify的各种讨论真是非常热烈！ 现实是99%的Shopify店铺创建者都未能实现一夜暴富的美梦，这与很多Shopify大师所宣传的情况不符。那么如何避免重蹈99%的失败者的覆辙而加入1%的成功者行列？本文将给出建议。\n\n## 01 选择有特色的Niche\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-bf60af6bbbe46102e923dd9fc7269fd5_720w-20201107192212306.jpg)\n\n\n\n\n\n首先是Niche，字母N代表的是Niche，无论做Shopify还是任何电商都首先要考虑要选择什么样的细分市场，简言之就是你要选定要售卖的产品。\n\n\n\n社交媒体营销也遵循20%的工作决定80%的成果的原则。99%的人的错误在于跟风，利用各种分析手段得出的Niche结论是一个无数店铺都在售卖的产品。\n\n\n\n举个具体例子来说，像狗项圈。人们或者说大多数人不会从Shopify商店或者Facebook广告购买通用产品，就像你不会从Facebook广告上购买厕纸。\n\n\n\n\n\n![img](https://pic4.zhimg.com/80/v2-d18788a2b8b0eba6a8e307d5616b750b_720w.jpg)\n\n\n\n\n\n你应该做的是在搜索Niche时，利用搜索引擎的自动填充词条功能找灵感。比如在通用产品 dog collar后面加空格a，从以下自动生成的词条中选一个做Niche。\n\n\n\n像dog collar army就不错，你可以用Facebook广告测试一下army风格的狗项圈，包括以一些历史上有名的将军为灵感的狗项圈，都是很不错的Niche。\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-60f108dadef4c32adb60307bb82efaf0_720w-20201107192219911.jpg)\n\n\n\n\n\n或者dog collar后面加空格b，c，直到你找到满意的Niche，\n\n\n\n\n\n![img](https://pic3.zhimg.com/80/v2-28b5710ad388ac0a85fa58e474b5e836_720w.jpg)\n\n\n\n\n\n再举个例子，像earrings耳饰，不要选择通用产品earrings，而是利用我们上面讲的方法从搜索引擎自动填充的词条中找灵感。\n\n\n\n比如earrings animal搜索出来的动物形状的耳饰就是很好的Niche。设想一下如果Facebook用户中有即将过生日的，她的老公说不定就想买这样一副耳饰送她做生日礼物。\n\n\n\n相反如果选择狗项圈、耳饰这样的通用产品，那么不大可能有人会从Facebook广告购买这些产品。\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-9070e2ed80d13a79872739ba3bf8a6b1_720w-20201107192228232.jpg)\n\n\n\n\n\n创建你的Shopify店铺前就要想到如何精准定位受众，找到目标顾客群体。因此你的Niche千万不要选一些通用的商品。\n\n\n\n## 02 Shopify店铺也需要实实在在的经营\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-006886476bc43d81fb13505fedc44abf_720w-20201107192249343.jpg)\n\n\n\n\n\n\n\n99%的人有Shopify店铺可以让人一夜暴富的错误想法。这些人认为自己可以在一天或者一周之内实现从对Shopify一无所知到成功创建自己的电商事业。\n\n\n\n而他们所不知道的是，成功的电商企业每天会测试成百上千的产品，改变着店铺的各种设置，总结哪些是成功的产品哪些是不成功的产品；像所有商业活动一样，创建成功的电商企业也需要大量的时间投入，做大量的工作和一定的资金投入。\n\n\n\n不要以为仅仅用Oberlo导入商品到你的Shopify店铺，就可以坐等成功Dropshipping，成为下一个一夜暴富的百万富翁。你需要做大量实实在在的工作，例如创建邮件清单、与你的顾客建立良好的关系、二次定位顾客、向老顾客发送优惠券等等。\n\n\n\n## 03 失败一次就放弃\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-668007be18919dfcf254dc2de8c58e63_720w-20201107192302656.jpg)\n\n\n\n\n\n很多人在店铺中放了一共不到10个商品，为每个商品创建了广告组，没有一个商品成功销售，然后就放弃了Shopify店铺。\n\n\n\n无论线上线下，决定一个企业家能否成功的关键因素在于其成功的意愿有多强烈。\n\n\n\n很多人可能会花费100刀、200刀或者500刀，创建Shopify店铺，投放Facebook广告，但是都不奏效，于是就放弃了。可能你只需要一个成功的商品。\n\n\n\n而且你不知道电商行业是最具有滚雪球效应的，一旦有了突破你很快会面临商品脱销的窘境。99%的人在成功卖出第一个商品前就放弃了。\n\n\n\n## 04 工作量黄金分配比例\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-7936c7276a03b8222a18228f3ddac454_720w-20201107192313757.jpg)\n\n\n\n\n\n我们20%的活动决定着我们80%的成果，对于Shopify店铺来说那些是我们工作的重点呢？下面我从Shopify店铺三项主要工作内容为你分析工作量应该如何分配:\n\n\n\n■ 20%的工作量花在创建店铺；（以我自己为例，我对Shopify店铺的创建很熟悉，对Facebook广告的投放也很熟悉，还有丰富的电商销售经验。我通常花一天时间创建一个Shopify店铺。）\n\n\n\n■ 30%的工作量用于选择Niche和商品；\n\n\n\n■ 51%的工作量用于市场营销（我故意强调超过一半的工作量）；\n\n\n\n## 05 分清主次，把时间花在有产出的事情上\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-66a01f8112ce4661dcbd2eb731e13583_720w-20201107192325962.jpg)\n\n\n\n\n\n在创建Shopify店铺之前，先要确定你的Niche和商品。否则你可能花费了大量的时间和金钱创建了Shopify店铺而没有任何销售。你要把时间花在测试商品和广告定位上，这两项工作关乎店铺盈利，而不要把大量时间花在创建吸引人的Twitter或者Pinterest账号上。\n\n\n\n以上几点就是99%的人失败的原因分析，希望我上面给出的建议能帮助你早日加入1%的成功者行列！","source":"_posts/shopify/为什么你的Shopify店铺没有成功.md","raw":"---\ntitle: 为什么你的Shopify店铺没有成功\ncategories:\n  - shopify\n---\n![为什么99%的Shopify店铺会失败？](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-b0bea42157dab7e9792d1f6d84fc179b_1440w-20201107192202050.jpg)\n\n# 为什么你的Shopify店铺没有成功？\n\n \n\n关于Shopify的各种讨论真是非常热烈！ 现实是99%的Shopify店铺创建者都未能实现一夜暴富的美梦，这与很多Shopify大师所宣传的情况不符。那么如何避免重蹈99%的失败者的覆辙而加入1%的成功者行列？本文将给出建议。\n\n## 01 选择有特色的Niche\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-bf60af6bbbe46102e923dd9fc7269fd5_720w-20201107192212306.jpg)\n\n\n\n\n\n首先是Niche，字母N代表的是Niche，无论做Shopify还是任何电商都首先要考虑要选择什么样的细分市场，简言之就是你要选定要售卖的产品。\n\n\n\n社交媒体营销也遵循20%的工作决定80%的成果的原则。99%的人的错误在于跟风，利用各种分析手段得出的Niche结论是一个无数店铺都在售卖的产品。\n\n\n\n举个具体例子来说，像狗项圈。人们或者说大多数人不会从Shopify商店或者Facebook广告购买通用产品，就像你不会从Facebook广告上购买厕纸。\n\n\n\n\n\n![img](https://pic4.zhimg.com/80/v2-d18788a2b8b0eba6a8e307d5616b750b_720w.jpg)\n\n\n\n\n\n你应该做的是在搜索Niche时，利用搜索引擎的自动填充词条功能找灵感。比如在通用产品 dog collar后面加空格a，从以下自动生成的词条中选一个做Niche。\n\n\n\n像dog collar army就不错，你可以用Facebook广告测试一下army风格的狗项圈，包括以一些历史上有名的将军为灵感的狗项圈，都是很不错的Niche。\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-60f108dadef4c32adb60307bb82efaf0_720w-20201107192219911.jpg)\n\n\n\n\n\n或者dog collar后面加空格b，c，直到你找到满意的Niche，\n\n\n\n\n\n![img](https://pic3.zhimg.com/80/v2-28b5710ad388ac0a85fa58e474b5e836_720w.jpg)\n\n\n\n\n\n再举个例子，像earrings耳饰，不要选择通用产品earrings，而是利用我们上面讲的方法从搜索引擎自动填充的词条中找灵感。\n\n\n\n比如earrings animal搜索出来的动物形状的耳饰就是很好的Niche。设想一下如果Facebook用户中有即将过生日的，她的老公说不定就想买这样一副耳饰送她做生日礼物。\n\n\n\n相反如果选择狗项圈、耳饰这样的通用产品，那么不大可能有人会从Facebook广告购买这些产品。\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-9070e2ed80d13a79872739ba3bf8a6b1_720w-20201107192228232.jpg)\n\n\n\n\n\n创建你的Shopify店铺前就要想到如何精准定位受众，找到目标顾客群体。因此你的Niche千万不要选一些通用的商品。\n\n\n\n## 02 Shopify店铺也需要实实在在的经营\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-006886476bc43d81fb13505fedc44abf_720w-20201107192249343.jpg)\n\n\n\n\n\n\n\n99%的人有Shopify店铺可以让人一夜暴富的错误想法。这些人认为自己可以在一天或者一周之内实现从对Shopify一无所知到成功创建自己的电商事业。\n\n\n\n而他们所不知道的是，成功的电商企业每天会测试成百上千的产品，改变着店铺的各种设置，总结哪些是成功的产品哪些是不成功的产品；像所有商业活动一样，创建成功的电商企业也需要大量的时间投入，做大量的工作和一定的资金投入。\n\n\n\n不要以为仅仅用Oberlo导入商品到你的Shopify店铺，就可以坐等成功Dropshipping，成为下一个一夜暴富的百万富翁。你需要做大量实实在在的工作，例如创建邮件清单、与你的顾客建立良好的关系、二次定位顾客、向老顾客发送优惠券等等。\n\n\n\n## 03 失败一次就放弃\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-668007be18919dfcf254dc2de8c58e63_720w-20201107192302656.jpg)\n\n\n\n\n\n很多人在店铺中放了一共不到10个商品，为每个商品创建了广告组，没有一个商品成功销售，然后就放弃了Shopify店铺。\n\n\n\n无论线上线下，决定一个企业家能否成功的关键因素在于其成功的意愿有多强烈。\n\n\n\n很多人可能会花费100刀、200刀或者500刀，创建Shopify店铺，投放Facebook广告，但是都不奏效，于是就放弃了。可能你只需要一个成功的商品。\n\n\n\n而且你不知道电商行业是最具有滚雪球效应的，一旦有了突破你很快会面临商品脱销的窘境。99%的人在成功卖出第一个商品前就放弃了。\n\n\n\n## 04 工作量黄金分配比例\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-7936c7276a03b8222a18228f3ddac454_720w-20201107192313757.jpg)\n\n\n\n\n\n我们20%的活动决定着我们80%的成果，对于Shopify店铺来说那些是我们工作的重点呢？下面我从Shopify店铺三项主要工作内容为你分析工作量应该如何分配:\n\n\n\n■ 20%的工作量花在创建店铺；（以我自己为例，我对Shopify店铺的创建很熟悉，对Facebook广告的投放也很熟悉，还有丰富的电商销售经验。我通常花一天时间创建一个Shopify店铺。）\n\n\n\n■ 30%的工作量用于选择Niche和商品；\n\n\n\n■ 51%的工作量用于市场营销（我故意强调超过一半的工作量）；\n\n\n\n## 05 分清主次，把时间花在有产出的事情上\n\n\n\n\n\n![img](https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-66a01f8112ce4661dcbd2eb731e13583_720w-20201107192325962.jpg)\n\n\n\n\n\n在创建Shopify店铺之前，先要确定你的Niche和商品。否则你可能花费了大量的时间和金钱创建了Shopify店铺而没有任何销售。你要把时间花在测试商品和广告定位上，这两项工作关乎店铺盈利，而不要把大量时间花在创建吸引人的Twitter或者Pinterest账号上。\n\n\n\n以上几点就是99%的人失败的原因分析，希望我上面给出的建议能帮助你早日加入1%的成功者行列！","slug":"shopify/为什么你的Shopify店铺没有成功","published":1,"date":"2020-12-19T12:03:49.366Z","updated":"2020-12-24T16:04:02.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1q20016ap1ify5p65rx","content":"<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-b0bea42157dab7e9792d1f6d84fc179b_1440w-20201107192202050.jpg\" alt=\"为什么99%的Shopify店铺会失败？\"></p>\n<h1 id=\"为什么你的Shopify店铺没有成功？\"><a href=\"#为什么你的Shopify店铺没有成功？\" class=\"headerlink\" title=\"为什么你的Shopify店铺没有成功？\"></a>为什么你的Shopify店铺没有成功？</h1><p>关于Shopify的各种讨论真是非常热烈！ 现实是99%的Shopify店铺创建者都未能实现一夜暴富的美梦，这与很多Shopify大师所宣传的情况不符。那么如何避免重蹈99%的失败者的覆辙而加入1%的成功者行列？本文将给出建议。</p>\n<h2 id=\"01-选择有特色的Niche\"><a href=\"#01-选择有特色的Niche\" class=\"headerlink\" title=\"01 选择有特色的Niche\"></a>01 选择有特色的Niche</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-bf60af6bbbe46102e923dd9fc7269fd5_720w-20201107192212306.jpg\" alt=\"img\"></p>\n<p>首先是Niche，字母N代表的是Niche，无论做Shopify还是任何电商都首先要考虑要选择什么样的细分市场，简言之就是你要选定要售卖的产品。</p>\n<p>社交媒体营销也遵循20%的工作决定80%的成果的原则。99%的人的错误在于跟风，利用各种分析手段得出的Niche结论是一个无数店铺都在售卖的产品。</p>\n<p>举个具体例子来说，像狗项圈。人们或者说大多数人不会从Shopify商店或者Facebook广告购买通用产品，就像你不会从Facebook广告上购买厕纸。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-d18788a2b8b0eba6a8e307d5616b750b_720w.jpg\" alt=\"img\"></p>\n<p>你应该做的是在搜索Niche时，利用搜索引擎的自动填充词条功能找灵感。比如在通用产品 dog collar后面加空格a，从以下自动生成的词条中选一个做Niche。</p>\n<p>像dog collar army就不错，你可以用Facebook广告测试一下army风格的狗项圈，包括以一些历史上有名的将军为灵感的狗项圈，都是很不错的Niche。</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-60f108dadef4c32adb60307bb82efaf0_720w-20201107192219911.jpg\" alt=\"img\"></p>\n<p>或者dog collar后面加空格b，c，直到你找到满意的Niche，</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-28b5710ad388ac0a85fa58e474b5e836_720w.jpg\" alt=\"img\"></p>\n<p>再举个例子，像earrings耳饰，不要选择通用产品earrings，而是利用我们上面讲的方法从搜索引擎自动填充的词条中找灵感。</p>\n<p>比如earrings animal搜索出来的动物形状的耳饰就是很好的Niche。设想一下如果Facebook用户中有即将过生日的，她的老公说不定就想买这样一副耳饰送她做生日礼物。</p>\n<p>相反如果选择狗项圈、耳饰这样的通用产品，那么不大可能有人会从Facebook广告购买这些产品。</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-9070e2ed80d13a79872739ba3bf8a6b1_720w-20201107192228232.jpg\" alt=\"img\"></p>\n<p>创建你的Shopify店铺前就要想到如何精准定位受众，找到目标顾客群体。因此你的Niche千万不要选一些通用的商品。</p>\n<h2 id=\"02-Shopify店铺也需要实实在在的经营\"><a href=\"#02-Shopify店铺也需要实实在在的经营\" class=\"headerlink\" title=\"02 Shopify店铺也需要实实在在的经营\"></a>02 Shopify店铺也需要实实在在的经营</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-006886476bc43d81fb13505fedc44abf_720w-20201107192249343.jpg\" alt=\"img\"></p>\n<p>99%的人有Shopify店铺可以让人一夜暴富的错误想法。这些人认为自己可以在一天或者一周之内实现从对Shopify一无所知到成功创建自己的电商事业。</p>\n<p>而他们所不知道的是，成功的电商企业每天会测试成百上千的产品，改变着店铺的各种设置，总结哪些是成功的产品哪些是不成功的产品；像所有商业活动一样，创建成功的电商企业也需要大量的时间投入，做大量的工作和一定的资金投入。</p>\n<p>不要以为仅仅用Oberlo导入商品到你的Shopify店铺，就可以坐等成功Dropshipping，成为下一个一夜暴富的百万富翁。你需要做大量实实在在的工作，例如创建邮件清单、与你的顾客建立良好的关系、二次定位顾客、向老顾客发送优惠券等等。</p>\n<h2 id=\"03-失败一次就放弃\"><a href=\"#03-失败一次就放弃\" class=\"headerlink\" title=\"03 失败一次就放弃\"></a>03 失败一次就放弃</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-668007be18919dfcf254dc2de8c58e63_720w-20201107192302656.jpg\" alt=\"img\"></p>\n<p>很多人在店铺中放了一共不到10个商品，为每个商品创建了广告组，没有一个商品成功销售，然后就放弃了Shopify店铺。</p>\n<p>无论线上线下，决定一个企业家能否成功的关键因素在于其成功的意愿有多强烈。</p>\n<p>很多人可能会花费100刀、200刀或者500刀，创建Shopify店铺，投放Facebook广告，但是都不奏效，于是就放弃了。可能你只需要一个成功的商品。</p>\n<p>而且你不知道电商行业是最具有滚雪球效应的，一旦有了突破你很快会面临商品脱销的窘境。99%的人在成功卖出第一个商品前就放弃了。</p>\n<h2 id=\"04-工作量黄金分配比例\"><a href=\"#04-工作量黄金分配比例\" class=\"headerlink\" title=\"04 工作量黄金分配比例\"></a>04 工作量黄金分配比例</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-7936c7276a03b8222a18228f3ddac454_720w-20201107192313757.jpg\" alt=\"img\"></p>\n<p>我们20%的活动决定着我们80%的成果，对于Shopify店铺来说那些是我们工作的重点呢？下面我从Shopify店铺三项主要工作内容为你分析工作量应该如何分配:</p>\n<p>■ 20%的工作量花在创建店铺；（以我自己为例，我对Shopify店铺的创建很熟悉，对Facebook广告的投放也很熟悉，还有丰富的电商销售经验。我通常花一天时间创建一个Shopify店铺。）</p>\n<p>■ 30%的工作量用于选择Niche和商品；</p>\n<p>■ 51%的工作量用于市场营销（我故意强调超过一半的工作量）；</p>\n<h2 id=\"05-分清主次，把时间花在有产出的事情上\"><a href=\"#05-分清主次，把时间花在有产出的事情上\" class=\"headerlink\" title=\"05 分清主次，把时间花在有产出的事情上\"></a>05 分清主次，把时间花在有产出的事情上</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-66a01f8112ce4661dcbd2eb731e13583_720w-20201107192325962.jpg\" alt=\"img\"></p>\n<p>在创建Shopify店铺之前，先要确定你的Niche和商品。否则你可能花费了大量的时间和金钱创建了Shopify店铺而没有任何销售。你要把时间花在测试商品和广告定位上，这两项工作关乎店铺盈利，而不要把大量时间花在创建吸引人的Twitter或者Pinterest账号上。</p>\n<p>以上几点就是99%的人失败的原因分析，希望我上面给出的建议能帮助你早日加入1%的成功者行列！</p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-b0bea42157dab7e9792d1f6d84fc179b_1440w-20201107192202050.jpg\" alt=\"为什么99%的Shopify店铺会失败？\"></p>\n<h1 id=\"为什么你的Shopify店铺没有成功？\"><a href=\"#为什么你的Shopify店铺没有成功？\" class=\"headerlink\" title=\"为什么你的Shopify店铺没有成功？\"></a>为什么你的Shopify店铺没有成功？</h1><p>关于Shopify的各种讨论真是非常热烈！ 现实是99%的Shopify店铺创建者都未能实现一夜暴富的美梦，这与很多Shopify大师所宣传的情况不符。那么如何避免重蹈99%的失败者的覆辙而加入1%的成功者行列？本文将给出建议。</p>\n<h2 id=\"01-选择有特色的Niche\"><a href=\"#01-选择有特色的Niche\" class=\"headerlink\" title=\"01 选择有特色的Niche\"></a>01 选择有特色的Niche</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-bf60af6bbbe46102e923dd9fc7269fd5_720w-20201107192212306.jpg\" alt=\"img\"></p>\n<p>首先是Niche，字母N代表的是Niche，无论做Shopify还是任何电商都首先要考虑要选择什么样的细分市场，简言之就是你要选定要售卖的产品。</p>\n<p>社交媒体营销也遵循20%的工作决定80%的成果的原则。99%的人的错误在于跟风，利用各种分析手段得出的Niche结论是一个无数店铺都在售卖的产品。</p>\n<p>举个具体例子来说，像狗项圈。人们或者说大多数人不会从Shopify商店或者Facebook广告购买通用产品，就像你不会从Facebook广告上购买厕纸。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-d18788a2b8b0eba6a8e307d5616b750b_720w.jpg\" alt=\"img\"></p>\n<p>你应该做的是在搜索Niche时，利用搜索引擎的自动填充词条功能找灵感。比如在通用产品 dog collar后面加空格a，从以下自动生成的词条中选一个做Niche。</p>\n<p>像dog collar army就不错，你可以用Facebook广告测试一下army风格的狗项圈，包括以一些历史上有名的将军为灵感的狗项圈，都是很不错的Niche。</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-60f108dadef4c32adb60307bb82efaf0_720w-20201107192219911.jpg\" alt=\"img\"></p>\n<p>或者dog collar后面加空格b，c，直到你找到满意的Niche，</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-28b5710ad388ac0a85fa58e474b5e836_720w.jpg\" alt=\"img\"></p>\n<p>再举个例子，像earrings耳饰，不要选择通用产品earrings，而是利用我们上面讲的方法从搜索引擎自动填充的词条中找灵感。</p>\n<p>比如earrings animal搜索出来的动物形状的耳饰就是很好的Niche。设想一下如果Facebook用户中有即将过生日的，她的老公说不定就想买这样一副耳饰送她做生日礼物。</p>\n<p>相反如果选择狗项圈、耳饰这样的通用产品，那么不大可能有人会从Facebook广告购买这些产品。</p>\n<p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-9070e2ed80d13a79872739ba3bf8a6b1_720w-20201107192228232.jpg\" alt=\"img\"></p>\n<p>创建你的Shopify店铺前就要想到如何精准定位受众，找到目标顾客群体。因此你的Niche千万不要选一些通用的商品。</p>\n<h2 id=\"02-Shopify店铺也需要实实在在的经营\"><a href=\"#02-Shopify店铺也需要实实在在的经营\" class=\"headerlink\" title=\"02 Shopify店铺也需要实实在在的经营\"></a>02 Shopify店铺也需要实实在在的经营</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-006886476bc43d81fb13505fedc44abf_720w-20201107192249343.jpg\" alt=\"img\"></p>\n<p>99%的人有Shopify店铺可以让人一夜暴富的错误想法。这些人认为自己可以在一天或者一周之内实现从对Shopify一无所知到成功创建自己的电商事业。</p>\n<p>而他们所不知道的是，成功的电商企业每天会测试成百上千的产品，改变着店铺的各种设置，总结哪些是成功的产品哪些是不成功的产品；像所有商业活动一样，创建成功的电商企业也需要大量的时间投入，做大量的工作和一定的资金投入。</p>\n<p>不要以为仅仅用Oberlo导入商品到你的Shopify店铺，就可以坐等成功Dropshipping，成为下一个一夜暴富的百万富翁。你需要做大量实实在在的工作，例如创建邮件清单、与你的顾客建立良好的关系、二次定位顾客、向老顾客发送优惠券等等。</p>\n<h2 id=\"03-失败一次就放弃\"><a href=\"#03-失败一次就放弃\" class=\"headerlink\" title=\"03 失败一次就放弃\"></a>03 失败一次就放弃</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-668007be18919dfcf254dc2de8c58e63_720w-20201107192302656.jpg\" alt=\"img\"></p>\n<p>很多人在店铺中放了一共不到10个商品，为每个商品创建了广告组，没有一个商品成功销售，然后就放弃了Shopify店铺。</p>\n<p>无论线上线下，决定一个企业家能否成功的关键因素在于其成功的意愿有多强烈。</p>\n<p>很多人可能会花费100刀、200刀或者500刀，创建Shopify店铺，投放Facebook广告，但是都不奏效，于是就放弃了。可能你只需要一个成功的商品。</p>\n<p>而且你不知道电商行业是最具有滚雪球效应的，一旦有了突破你很快会面临商品脱销的窘境。99%的人在成功卖出第一个商品前就放弃了。</p>\n<h2 id=\"04-工作量黄金分配比例\"><a href=\"#04-工作量黄金分配比例\" class=\"headerlink\" title=\"04 工作量黄金分配比例\"></a>04 工作量黄金分配比例</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-7936c7276a03b8222a18228f3ddac454_720w-20201107192313757.jpg\" alt=\"img\"></p>\n<p>我们20%的活动决定着我们80%的成果，对于Shopify店铺来说那些是我们工作的重点呢？下面我从Shopify店铺三项主要工作内容为你分析工作量应该如何分配:</p>\n<p>■ 20%的工作量花在创建店铺；（以我自己为例，我对Shopify店铺的创建很熟悉，对Facebook广告的投放也很熟悉，还有丰富的电商销售经验。我通常花一天时间创建一个Shopify店铺。）</p>\n<p>■ 30%的工作量用于选择Niche和商品；</p>\n<p>■ 51%的工作量用于市场营销（我故意强调超过一半的工作量）；</p>\n<h2 id=\"05-分清主次，把时间花在有产出的事情上\"><a href=\"#05-分清主次，把时间花在有产出的事情上\" class=\"headerlink\" title=\"05 分清主次，把时间花在有产出的事情上\"></a>05 分清主次，把时间花在有产出的事情上</h2><p><img src=\"https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-66a01f8112ce4661dcbd2eb731e13583_720w-20201107192325962.jpg\" alt=\"img\"></p>\n<p>在创建Shopify店铺之前，先要确定你的Niche和商品。否则你可能花费了大量的时间和金钱创建了Shopify店铺而没有任何销售。你要把时间花在测试商品和广告定位上，这两项工作关乎店铺盈利，而不要把大量时间花在创建吸引人的Twitter或者Pinterest账号上。</p>\n<p>以上几点就是99%的人失败的原因分析，希望我上面给出的建议能帮助你早日加入1%的成功者行列！</p>\n"},{"title":"如何创建一个Shopify模版本地开发环境.","_content":"### 安装主题套件\n\n首先，转到[themekit](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9zaG9waWZ5LmdpdGh1Yi5pby90aGVtZWtpdC8%3D)下载主题套件。\n\n### macOS安装\n\n使用[homebrew](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cDovL2JyZXcuc2gv)安装themekiit.\n\n```text\nbrew tap shopify/shopify\nbrew install themekit\n```\n\n### Windows Chocolatey安装\n\n首先安装[Chocolatey](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9jaG9jb2xhdGV5Lm9yZy8%3D)，然后通过以下命令安装themekit。\n\n```as3\nchoco install themekit\n```\n\n### Linux安装\n\n如果是Linux系统，则可以使用以下脚本安装themekit。\n\n```text\ncurl -s https://shopify.github.io/themekit/scripts/install.py | sudo python\n```\n\n安装完毕之后运行**theme**，如果显示下图信息则安装成功。\n\n![img](https://pic3.zhimg.com/80/v2-8cce0690f64d6c6a02ef0c91aedf59a6_720w.jpg)\n\n\n\n### 链接到商店\n\n要想连接到商店拥有主题的读写权限，首先得建立私人应用将API秘钥添加到我们的配置中。\n\n请登录Shopify后台，然后创建一个私人应用程序。\n\n> Shopify管理员 > Apps > 单击Manage private apps > 单击Create a new private app创建应用\n\n然后填写信息，并将**Theme templates and theme assets**权限设置为读写访问权限并保存，页面刷新之后复制密码，后面步骤用得到。\n\n\n\n![img](https://pic4.zhimg.com/v2-c5672b6847b0eb3768ab31ae2772ecc7_b.jpg)\n\n\n\n### 下载需要修改的模板\n\n接下来，我们需要将主题下载到本地环境中。要下载模板，首先需要知道模板的ID。获取ID的最简单方法是使用get命令，如下所示：\n\n1. theme get --list -p=上一步复制的密码 -s=[http://you-store.myshopify.com](https://link.zhihu.com/?target=http%3A//you-store.myshopify.com)\n\n\n\n\n\n![img](https://pic1.zhimg.com/80/v2-4db25c89310144da8a0178b52516dfe8_720w.png)\n\n\n然后，记下模板ID，运行以下命令从shopify下载主题：\n\n1. theme get -p=上一步复制的密码 -s=[http://you-store.myshopify.com](https://link.zhihu.com/?target=http%3A//you-store.myshopify.com) -t=your-theme-id\n\n\n\n\n\n![img](https://pic4.zhimg.com/80/v2-f35f2d0497884ca2054caa92d7f3b0b3_720w.png)\n\n\n\n### 编辑模板\n\n我们可以编辑这些本地文件，然后运行**theme watch**。这将监视模板文件中的更改，当检测到文件被修改时，Theme Kit将自动将新版本上载到Shopify，因此您可以立即查看编辑后的模板样式。\n\n\n\n![img](https://pic1.zhimg.com/80/v2-d05bbd9df19f9ebab7b5f48fd157a790_720w.jpg)\n\n\n\n当我们对theme.scss.liquid文件进行了一些更改，您将在终端上看到此输出\n\n\n\n![img](https://pic3.zhimg.com/80/v2-503c4fedd4f708bb2c7472247cc4af1e_720w.jpg)\n\n\n\n> 要上传特定文件，请运行theme upload <file>。要删除特定文件，请运行theme remove <file>。您可以通过运行查找所有命令的列表theme help。您可以通过运行获取有关命令的更多信息theme help <command>\n\n### 实时预览\n\n没有人喜欢编辑一次然后手动刷新一次页面。下面我们将使用Prepros来达到实时预览的功能。\n\n首先下载[Prepros](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9wcmVwcm9zLmlvLw%3D%3D)并安装\n\n\n\n![img](https://pic3.zhimg.com/80/v2-81a904f9da10308140a2387dcd37b74a_720w.jpg)\n\n\n\n### 将主题添加为项目\n\n\n\n![img](https://pic1.zhimg.com/v2-c100f31eacdfb0f033c87de8dc6e9c34_b.jpg)\n\n\n\n只需将整个目录拖到Prepros中，即可将主题作为项目添加到Prepros。\n\n### 监视.liquid文件\n\n应将.liquid文件添加到Prepros将要监视的文件类型列表中。默认情况下是不会监视它们的，因为Prepros不会编译Liquid。\n\n要将.liquid文件添加到监视列表，请右键任意.liquid文件，然后选择“ **Watch .liquid files**”。\n\n![img](https://pic2.zhimg.com/80/v2-feb48e382f61af3f0709e211727c5cd9_720w.jpg)\n\n\n\n### 将实时预览链接到店铺\n\n下一步是设置实时预览的URL。也就是将Prepros与Shopify商店链接起来并实现实时重载的功能。\n\n具体设置如下图：\n\n![img](https://pic1.zhimg.com/v2-c69eef525d534cd9784f643dbf3017a4_b.jpg)\n\n\n\n### 设置重新加载的延迟\n\n最后，您需要在Prepros中设置延迟。延迟的原因是让Theme Kit有时间观察到更改，并将更改与Shopify的服务器同步。\n\n具体设置如下图：\n\n![img](https://pic2.zhimg.com/v2-8912efba9332fff5ecc0251c1e1f7e1d_b.jpg)\n\n\n\n### 进行修改并实时预览\n\n现在，您已经设置了实时预览，按**Ctrl+L**在浏览器中打开就能看到。\t","source":"_posts/shopify/如何创建一个Shopify模版本地开发环境.md","raw":"---\ntitle: 如何创建一个Shopify模版本地开发环境.\ncategories:\n  - shopify\n---\n### 安装主题套件\n\n首先，转到[themekit](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9zaG9waWZ5LmdpdGh1Yi5pby90aGVtZWtpdC8%3D)下载主题套件。\n\n### macOS安装\n\n使用[homebrew](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cDovL2JyZXcuc2gv)安装themekiit.\n\n```text\nbrew tap shopify/shopify\nbrew install themekit\n```\n\n### Windows Chocolatey安装\n\n首先安装[Chocolatey](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9jaG9jb2xhdGV5Lm9yZy8%3D)，然后通过以下命令安装themekit。\n\n```as3\nchoco install themekit\n```\n\n### Linux安装\n\n如果是Linux系统，则可以使用以下脚本安装themekit。\n\n```text\ncurl -s https://shopify.github.io/themekit/scripts/install.py | sudo python\n```\n\n安装完毕之后运行**theme**，如果显示下图信息则安装成功。\n\n![img](https://pic3.zhimg.com/80/v2-8cce0690f64d6c6a02ef0c91aedf59a6_720w.jpg)\n\n\n\n### 链接到商店\n\n要想连接到商店拥有主题的读写权限，首先得建立私人应用将API秘钥添加到我们的配置中。\n\n请登录Shopify后台，然后创建一个私人应用程序。\n\n> Shopify管理员 > Apps > 单击Manage private apps > 单击Create a new private app创建应用\n\n然后填写信息，并将**Theme templates and theme assets**权限设置为读写访问权限并保存，页面刷新之后复制密码，后面步骤用得到。\n\n\n\n![img](https://pic4.zhimg.com/v2-c5672b6847b0eb3768ab31ae2772ecc7_b.jpg)\n\n\n\n### 下载需要修改的模板\n\n接下来，我们需要将主题下载到本地环境中。要下载模板，首先需要知道模板的ID。获取ID的最简单方法是使用get命令，如下所示：\n\n1. theme get --list -p=上一步复制的密码 -s=[http://you-store.myshopify.com](https://link.zhihu.com/?target=http%3A//you-store.myshopify.com)\n\n\n\n\n\n![img](https://pic1.zhimg.com/80/v2-4db25c89310144da8a0178b52516dfe8_720w.png)\n\n\n然后，记下模板ID，运行以下命令从shopify下载主题：\n\n1. theme get -p=上一步复制的密码 -s=[http://you-store.myshopify.com](https://link.zhihu.com/?target=http%3A//you-store.myshopify.com) -t=your-theme-id\n\n\n\n\n\n![img](https://pic4.zhimg.com/80/v2-f35f2d0497884ca2054caa92d7f3b0b3_720w.png)\n\n\n\n### 编辑模板\n\n我们可以编辑这些本地文件，然后运行**theme watch**。这将监视模板文件中的更改，当检测到文件被修改时，Theme Kit将自动将新版本上载到Shopify，因此您可以立即查看编辑后的模板样式。\n\n\n\n![img](https://pic1.zhimg.com/80/v2-d05bbd9df19f9ebab7b5f48fd157a790_720w.jpg)\n\n\n\n当我们对theme.scss.liquid文件进行了一些更改，您将在终端上看到此输出\n\n\n\n![img](https://pic3.zhimg.com/80/v2-503c4fedd4f708bb2c7472247cc4af1e_720w.jpg)\n\n\n\n> 要上传特定文件，请运行theme upload <file>。要删除特定文件，请运行theme remove <file>。您可以通过运行查找所有命令的列表theme help。您可以通过运行获取有关命令的更多信息theme help <command>\n\n### 实时预览\n\n没有人喜欢编辑一次然后手动刷新一次页面。下面我们将使用Prepros来达到实时预览的功能。\n\n首先下载[Prepros](https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9wcmVwcm9zLmlvLw%3D%3D)并安装\n\n\n\n![img](https://pic3.zhimg.com/80/v2-81a904f9da10308140a2387dcd37b74a_720w.jpg)\n\n\n\n### 将主题添加为项目\n\n\n\n![img](https://pic1.zhimg.com/v2-c100f31eacdfb0f033c87de8dc6e9c34_b.jpg)\n\n\n\n只需将整个目录拖到Prepros中，即可将主题作为项目添加到Prepros。\n\n### 监视.liquid文件\n\n应将.liquid文件添加到Prepros将要监视的文件类型列表中。默认情况下是不会监视它们的，因为Prepros不会编译Liquid。\n\n要将.liquid文件添加到监视列表，请右键任意.liquid文件，然后选择“ **Watch .liquid files**”。\n\n![img](https://pic2.zhimg.com/80/v2-feb48e382f61af3f0709e211727c5cd9_720w.jpg)\n\n\n\n### 将实时预览链接到店铺\n\n下一步是设置实时预览的URL。也就是将Prepros与Shopify商店链接起来并实现实时重载的功能。\n\n具体设置如下图：\n\n![img](https://pic1.zhimg.com/v2-c69eef525d534cd9784f643dbf3017a4_b.jpg)\n\n\n\n### 设置重新加载的延迟\n\n最后，您需要在Prepros中设置延迟。延迟的原因是让Theme Kit有时间观察到更改，并将更改与Shopify的服务器同步。\n\n具体设置如下图：\n\n![img](https://pic2.zhimg.com/v2-8912efba9332fff5ecc0251c1e1f7e1d_b.jpg)\n\n\n\n### 进行修改并实时预览\n\n现在，您已经设置了实时预览，按**Ctrl+L**在浏览器中打开就能看到。\t","slug":"shopify/如何创建一个Shopify模版本地开发环境","published":1,"date":"2020-12-19T12:03:49.375Z","updated":"2020-12-24T15:57:51.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj6kz1q6001bap1iceem7mlr","content":"<h3 id=\"安装主题套件\"><a href=\"#安装主题套件\" class=\"headerlink\" title=\"安装主题套件\"></a>安装主题套件</h3><p>首先，转到<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9zaG9waWZ5LmdpdGh1Yi5pby90aGVtZWtpdC8=\" >themekit<i class=\"fas fa-external-link-alt\"></i></a>下载主题套件。</p>\n<h3 id=\"macOS安装\"><a href=\"#macOS安装\" class=\"headerlink\" title=\"macOS安装\"></a>macOS安装</h3><p>使用<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cDovL2JyZXcuc2gv\" >homebrew<i class=\"fas fa-external-link-alt\"></i></a>安装themekiit.</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew tap shopify/shopify</span><br><span class=\"line\">brew install themekit</span><br></pre></td></tr></table></figure>\n<h3 id=\"Windows-Chocolatey安装\"><a href=\"#Windows-Chocolatey安装\" class=\"headerlink\" title=\"Windows Chocolatey安装\"></a>Windows Chocolatey安装</h3><p>首先安装<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9jaG9jb2xhdGV5Lm9yZy8=\" >Chocolatey<i class=\"fas fa-external-link-alt\"></i></a>，然后通过以下命令安装themekit。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco install themekit</span><br></pre></td></tr></table></figure>\n<h3 id=\"Linux安装\"><a href=\"#Linux安装\" class=\"headerlink\" title=\"Linux安装\"></a>Linux安装</h3><p>如果是Linux系统，则可以使用以下脚本安装themekit。</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s https://shopify.github.io/themekit/scripts/install.py | sudo python</span><br></pre></td></tr></table></figure>\n<p>安装完毕之后运行<strong>theme</strong>，如果显示下图信息则安装成功。</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-8cce0690f64d6c6a02ef0c91aedf59a6_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"链接到商店\"><a href=\"#链接到商店\" class=\"headerlink\" title=\"链接到商店\"></a>链接到商店</h3><p>要想连接到商店拥有主题的读写权限，首先得建立私人应用将API秘钥添加到我们的配置中。</p>\n<p>请登录Shopify后台，然后创建一个私人应用程序。</p>\n<blockquote>\n<p>Shopify管理员 &gt; Apps &gt; 单击Manage private apps &gt; 单击Create a new private app创建应用</p>\n</blockquote>\n<p>然后填写信息，并将<strong>Theme templates and theme assets</strong>权限设置为读写访问权限并保存，页面刷新之后复制密码，后面步骤用得到。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c5672b6847b0eb3768ab31ae2772ecc7_b.jpg\" alt=\"img\"></p>\n<h3 id=\"下载需要修改的模板\"><a href=\"#下载需要修改的模板\" class=\"headerlink\" title=\"下载需要修改的模板\"></a>下载需要修改的模板</h3><p>接下来，我们需要将主题下载到本地环境中。要下载模板，首先需要知道模板的ID。获取ID的最简单方法是使用get命令，如下所示：</p>\n<ol>\n<li>theme get –list -p=上一步复制的密码 -s=<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://you-store.myshopify.com\" >http://you-store.myshopify.com<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n<p><img src=\"https://pic1.zhimg.com/80/v2-4db25c89310144da8a0178b52516dfe8_720w.png\" alt=\"img\"></p>\n<p>然后，记下模板ID，运行以下命令从shopify下载主题：</p>\n<ol>\n<li>theme get -p=上一步复制的密码 -s=<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://you-store.myshopify.com\" >http://you-store.myshopify.com<i class=\"fas fa-external-link-alt\"></i></a> -t=your-theme-id</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-f35f2d0497884ca2054caa92d7f3b0b3_720w.png\" alt=\"img\"></p>\n<h3 id=\"编辑模板\"><a href=\"#编辑模板\" class=\"headerlink\" title=\"编辑模板\"></a>编辑模板</h3><p>我们可以编辑这些本地文件，然后运行<strong>theme watch</strong>。这将监视模板文件中的更改，当检测到文件被修改时，Theme Kit将自动将新版本上载到Shopify，因此您可以立即查看编辑后的模板样式。</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-d05bbd9df19f9ebab7b5f48fd157a790_720w.jpg\" alt=\"img\"></p>\n<p>当我们对theme.scss.liquid文件进行了一些更改，您将在终端上看到此输出</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-503c4fedd4f708bb2c7472247cc4af1e_720w.jpg\" alt=\"img\"></p>\n<blockquote>\n<p>要上传特定文件，请运行theme upload <file>。要删除特定文件，请运行theme remove <file>。您可以通过运行查找所有命令的列表theme help。您可以通过运行获取有关命令的更多信息theme help <command></p>\n</blockquote>\n<h3 id=\"实时预览\"><a href=\"#实时预览\" class=\"headerlink\" title=\"实时预览\"></a>实时预览</h3><p>没有人喜欢编辑一次然后手动刷新一次页面。下面我们将使用Prepros来达到实时预览的功能。</p>\n<p>首先下载<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9wcmVwcm9zLmlvLw==\" >Prepros<i class=\"fas fa-external-link-alt\"></i></a>并安装</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-81a904f9da10308140a2387dcd37b74a_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"将主题添加为项目\"><a href=\"#将主题添加为项目\" class=\"headerlink\" title=\"将主题添加为项目\"></a>将主题添加为项目</h3><p><img src=\"https://pic1.zhimg.com/v2-c100f31eacdfb0f033c87de8dc6e9c34_b.jpg\" alt=\"img\"></p>\n<p>只需将整个目录拖到Prepros中，即可将主题作为项目添加到Prepros。</p>\n<h3 id=\"监视-liquid文件\"><a href=\"#监视-liquid文件\" class=\"headerlink\" title=\"监视.liquid文件\"></a>监视.liquid文件</h3><p>应将.liquid文件添加到Prepros将要监视的文件类型列表中。默认情况下是不会监视它们的，因为Prepros不会编译Liquid。</p>\n<p>要将.liquid文件添加到监视列表，请右键任意.liquid文件，然后选择“ <strong>Watch .liquid files</strong>”。</p>\n<p><img src=\"https://pic2.zhimg.com/80/v2-feb48e382f61af3f0709e211727c5cd9_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"将实时预览链接到店铺\"><a href=\"#将实时预览链接到店铺\" class=\"headerlink\" title=\"将实时预览链接到店铺\"></a>将实时预览链接到店铺</h3><p>下一步是设置实时预览的URL。也就是将Prepros与Shopify商店链接起来并实现实时重载的功能。</p>\n<p>具体设置如下图：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c69eef525d534cd9784f643dbf3017a4_b.jpg\" alt=\"img\"></p>\n<h3 id=\"设置重新加载的延迟\"><a href=\"#设置重新加载的延迟\" class=\"headerlink\" title=\"设置重新加载的延迟\"></a>设置重新加载的延迟</h3><p>最后，您需要在Prepros中设置延迟。延迟的原因是让Theme Kit有时间观察到更改，并将更改与Shopify的服务器同步。</p>\n<p>具体设置如下图：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8912efba9332fff5ecc0251c1e1f7e1d_b.jpg\" alt=\"img\"></p>\n<h3 id=\"进行修改并实时预览\"><a href=\"#进行修改并实时预览\" class=\"headerlink\" title=\"进行修改并实时预览\"></a>进行修改并实时预览</h3><p>现在，您已经设置了实时预览，按<strong>Ctrl+L</strong>在浏览器中打开就能看到。    </p>\n","site":{"data":{"links":[{"name":"XPoet","link":"https://xpoet.cn/","description":"所有命运的馈赠，早已在暗中标好价格。","avatar":"https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg"},{"name":"不知名艺术家","link":"https://jinzhanqi.com/","description":"love artist, love code.","avatar":"https://s3.ax1x.com/2020/11/17/DVvkB4.jpg"},{"name":"月拉风","link":"https://mooncool.net/","description":"不该错落的蝴蝶，长满紫色的琴键","avatar":"https://mooncool.net/static/imgs/butterfly.jpg"}]}},"excerpt":"","more":"<h3 id=\"安装主题套件\"><a href=\"#安装主题套件\" class=\"headerlink\" title=\"安装主题套件\"></a>安装主题套件</h3><p>首先，转到<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9zaG9waWZ5LmdpdGh1Yi5pby90aGVtZWtpdC8=\" >themekit<i class=\"fas fa-external-link-alt\"></i></a>下载主题套件。</p>\n<h3 id=\"macOS安装\"><a href=\"#macOS安装\" class=\"headerlink\" title=\"macOS安装\"></a>macOS安装</h3><p>使用<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cDovL2JyZXcuc2gv\" >homebrew<i class=\"fas fa-external-link-alt\"></i></a>安装themekiit.</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew tap shopify/shopify</span><br><span class=\"line\">brew install themekit</span><br></pre></td></tr></table></figure>\n<h3 id=\"Windows-Chocolatey安装\"><a href=\"#Windows-Chocolatey安装\" class=\"headerlink\" title=\"Windows Chocolatey安装\"></a>Windows Chocolatey安装</h3><p>首先安装<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9jaG9jb2xhdGV5Lm9yZy8=\" >Chocolatey<i class=\"fas fa-external-link-alt\"></i></a>，然后通过以下命令安装themekit。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco install themekit</span><br></pre></td></tr></table></figure>\n<h3 id=\"Linux安装\"><a href=\"#Linux安装\" class=\"headerlink\" title=\"Linux安装\"></a>Linux安装</h3><p>如果是Linux系统，则可以使用以下脚本安装themekit。</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s https://shopify.github.io/themekit/scripts/install.py | sudo python</span><br></pre></td></tr></table></figure>\n<p>安装完毕之后运行<strong>theme</strong>，如果显示下图信息则安装成功。</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-8cce0690f64d6c6a02ef0c91aedf59a6_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"链接到商店\"><a href=\"#链接到商店\" class=\"headerlink\" title=\"链接到商店\"></a>链接到商店</h3><p>要想连接到商店拥有主题的读写权限，首先得建立私人应用将API秘钥添加到我们的配置中。</p>\n<p>请登录Shopify后台，然后创建一个私人应用程序。</p>\n<blockquote>\n<p>Shopify管理员 &gt; Apps &gt; 单击Manage private apps &gt; 单击Create a new private app创建应用</p>\n</blockquote>\n<p>然后填写信息，并将<strong>Theme templates and theme assets</strong>权限设置为读写访问权限并保存，页面刷新之后复制密码，后面步骤用得到。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c5672b6847b0eb3768ab31ae2772ecc7_b.jpg\" alt=\"img\"></p>\n<h3 id=\"下载需要修改的模板\"><a href=\"#下载需要修改的模板\" class=\"headerlink\" title=\"下载需要修改的模板\"></a>下载需要修改的模板</h3><p>接下来，我们需要将主题下载到本地环境中。要下载模板，首先需要知道模板的ID。获取ID的最简单方法是使用get命令，如下所示：</p>\n<ol>\n<li>theme get –list -p=上一步复制的密码 -s=<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://you-store.myshopify.com\" >http://you-store.myshopify.com<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n<p><img src=\"https://pic1.zhimg.com/80/v2-4db25c89310144da8a0178b52516dfe8_720w.png\" alt=\"img\"></p>\n<p>然后，记下模板ID，运行以下命令从shopify下载主题：</p>\n<ol>\n<li>theme get -p=上一步复制的密码 -s=<a class=\"link\"   href=\"https://link.zhihu.com/?target=http://you-store.myshopify.com\" >http://you-store.myshopify.com<i class=\"fas fa-external-link-alt\"></i></a> -t=your-theme-id</li>\n</ol>\n<p><img src=\"https://pic4.zhimg.com/80/v2-f35f2d0497884ca2054caa92d7f3b0b3_720w.png\" alt=\"img\"></p>\n<h3 id=\"编辑模板\"><a href=\"#编辑模板\" class=\"headerlink\" title=\"编辑模板\"></a>编辑模板</h3><p>我们可以编辑这些本地文件，然后运行<strong>theme watch</strong>。这将监视模板文件中的更改，当检测到文件被修改时，Theme Kit将自动将新版本上载到Shopify，因此您可以立即查看编辑后的模板样式。</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-d05bbd9df19f9ebab7b5f48fd157a790_720w.jpg\" alt=\"img\"></p>\n<p>当我们对theme.scss.liquid文件进行了一些更改，您将在终端上看到此输出</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-503c4fedd4f708bb2c7472247cc4af1e_720w.jpg\" alt=\"img\"></p>\n<blockquote>\n<p>要上传特定文件，请运行theme upload <file>。要删除特定文件，请运行theme remove <file>。您可以通过运行查找所有命令的列表theme help。您可以通过运行获取有关命令的更多信息theme help <command></p>\n</blockquote>\n<h3 id=\"实时预览\"><a href=\"#实时预览\" class=\"headerlink\" title=\"实时预览\"></a>实时预览</h3><p>没有人喜欢编辑一次然后手动刷新一次页面。下面我们将使用Prepros来达到实时预览的功能。</p>\n<p>首先下载<a class=\"link\"   href=\"https://link.zhihu.com/?target=https://www.shopifyfans.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9wcmVwcm9zLmlvLw==\" >Prepros<i class=\"fas fa-external-link-alt\"></i></a>并安装</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-81a904f9da10308140a2387dcd37b74a_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"将主题添加为项目\"><a href=\"#将主题添加为项目\" class=\"headerlink\" title=\"将主题添加为项目\"></a>将主题添加为项目</h3><p><img src=\"https://pic1.zhimg.com/v2-c100f31eacdfb0f033c87de8dc6e9c34_b.jpg\" alt=\"img\"></p>\n<p>只需将整个目录拖到Prepros中，即可将主题作为项目添加到Prepros。</p>\n<h3 id=\"监视-liquid文件\"><a href=\"#监视-liquid文件\" class=\"headerlink\" title=\"监视.liquid文件\"></a>监视.liquid文件</h3><p>应将.liquid文件添加到Prepros将要监视的文件类型列表中。默认情况下是不会监视它们的，因为Prepros不会编译Liquid。</p>\n<p>要将.liquid文件添加到监视列表，请右键任意.liquid文件，然后选择“ <strong>Watch .liquid files</strong>”。</p>\n<p><img src=\"https://pic2.zhimg.com/80/v2-feb48e382f61af3f0709e211727c5cd9_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"将实时预览链接到店铺\"><a href=\"#将实时预览链接到店铺\" class=\"headerlink\" title=\"将实时预览链接到店铺\"></a>将实时预览链接到店铺</h3><p>下一步是设置实时预览的URL。也就是将Prepros与Shopify商店链接起来并实现实时重载的功能。</p>\n<p>具体设置如下图：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c69eef525d534cd9784f643dbf3017a4_b.jpg\" alt=\"img\"></p>\n<h3 id=\"设置重新加载的延迟\"><a href=\"#设置重新加载的延迟\" class=\"headerlink\" title=\"设置重新加载的延迟\"></a>设置重新加载的延迟</h3><p>最后，您需要在Prepros中设置延迟。延迟的原因是让Theme Kit有时间观察到更改，并将更改与Shopify的服务器同步。</p>\n<p>具体设置如下图：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8912efba9332fff5ecc0251c1e1f7e1d_b.jpg\" alt=\"img\"></p>\n<h3 id=\"进行修改并实时预览\"><a href=\"#进行修改并实时预览\" class=\"headerlink\" title=\"进行修改并实时预览\"></a>进行修改并实时预览</h3><p>现在，您已经设置了实时预览，按<strong>Ctrl+L</strong>在浏览器中打开就能看到。    </p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckj6kz1ot0009ap1i4ttcf30s","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1pa000hap1ihy7de1o7"},{"post_id":"ckj6kz1ob0003ap1ih7e60ov2","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1pi000kap1ic9btb8ru"},{"post_id":"ckj6kz1ow000cap1ie365530w","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1pl000nap1i9gpdb1vl"},{"post_id":"ckj6kz1p3000eap1ig0bn2tv5","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1pn000pap1i2fj14a3q"},{"post_id":"ckj6kz1ok0006ap1i0wdc0y5r","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1pu000tap1igwo9h3gf"},{"post_id":"ckj6kz1p9000gap1i61ua1nw3","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1pw000wap1igbclcyto"},{"post_id":"ckj6kz1ph000jap1idmkneq0p","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1py0010ap1ibnc46qi6"},{"post_id":"ckj6kz1op0008ap1i1n7h8nn6","category_id":"ckj6kz1oo0007ap1i0viibr98","_id":"ckj6kz1q10014ap1i8xra8dlb"},{"post_id":"ckj6kz1pj000map1igb916cw0","category_id":"ckj6kz1pr000qap1if4lmbsn5","_id":"ckj6kz1q40018ap1i2dsqhc5r"},{"post_id":"ckj6kz1pm000oap1i1fo87kfg","category_id":"ckj6kz1pr000qap1if4lmbsn5","_id":"ckj6kz1q8001cap1ib1bt7k2u"},{"post_id":"ckj6kz1q6001bap1iceem7mlr","category_id":"ckj6kz1q30017ap1i064m5u0a","_id":"ckj6kz1qa001hap1i28zo3wzz"},{"post_id":"ckj6kz1pt000sap1i3kww06r4","category_id":"ckj6kz1q30017ap1i064m5u0a","_id":"ckj6kz1qb001kap1ie31y8x9s"},{"post_id":"ckj6kz1pv000vap1i2dh67tcu","category_id":"ckj6kz1q30017ap1i064m5u0a","_id":"ckj6kz1qc001map1iaojxd5af"},{"post_id":"ckj6kz1px000yap1i6vrw1kch","category_id":"ckj6kz1q30017ap1i064m5u0a","_id":"ckj6kz1qc001oap1iahzjbevj"},{"post_id":"ckj6kz1q00013ap1idti0gj1c","category_id":"ckj6kz1q30017ap1i064m5u0a","_id":"ckj6kz1qd001pap1iax7ofjwq"},{"post_id":"ckj6kz1q20016ap1ify5p65rx","category_id":"ckj6kz1q30017ap1i064m5u0a","_id":"ckj6kz1qe001qap1iepw11bj1"}],"PostTag":[{"post_id":"ckj6kz1o60001ap1iehtf1hm4","tag_id":"ckj6kz1oe0004ap1i3rbtaztq","_id":"ckj6kz1ow000bap1idwkk19hs"},{"post_id":"ckj6kz1ob0003ap1ih7e60ov2","tag_id":"ckj6kz1ou000aap1iazolee2m","_id":"ckj6kz1pv000uap1i9ul5e5b2"},{"post_id":"ckj6kz1ob0003ap1ih7e60ov2","tag_id":"ckj6kz1p6000fap1iaffcbmoh","_id":"ckj6kz1px000xap1ibuucbyw5"},{"post_id":"ckj6kz1ob0003ap1ih7e60ov2","tag_id":"ckj6kz1pj000lap1i4fkxgzv8","_id":"ckj6kz1pz0012ap1i76qgfzh8"},{"post_id":"ckj6kz1ot0009ap1i4ttcf30s","tag_id":"ckj6kz1ps000rap1i9s0rggqt","_id":"ckj6kz1q20015ap1iccjq2m23"},{"post_id":"ckj6kz1ow000cap1ie365530w","tag_id":"ckj6kz1ps000rap1i9s0rggqt","_id":"ckj6kz1q6001aap1icqyj58tq"},{"post_id":"ckj6kz1ph000jap1idmkneq0p","tag_id":"ckj6kz1pj000lap1i4fkxgzv8","_id":"ckj6kz1qa001fap1if16nbnwu"},{"post_id":"ckj6kz1ph000jap1idmkneq0p","tag_id":"ckj6kz1ou000aap1iazolee2m","_id":"ckj6kz1qa001gap1ifgfma0mr"},{"post_id":"ckj6kz1pm000oap1i1fo87kfg","tag_id":"ckj6kz1ps000rap1i9s0rggqt","_id":"ckj6kz1qb001jap1iawhkczah"}],"Tag":[{"name":"心情","_id":"ckj6kz1oe0004ap1i3rbtaztq"},{"name":"css","_id":"ckj6kz1ou000aap1iazolee2m"},{"name":"特效","_id":"ckj6kz1p6000fap1iaffcbmoh"},{"name":"html","_id":"ckj6kz1pj000lap1i4fkxgzv8"},{"name":"采坑","_id":"ckj6kz1ps000rap1i9s0rggqt"}]}}