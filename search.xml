<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>shopify/shopify调用配置信息</title>
      <link href="2020/12/12/shopify/shopify%E8%B0%83%E7%94%A8%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/"/>
      <url>2020/12/12/shopify/shopify%E8%B0%83%E7%94%A8%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="调用配置"><a href="#调用配置" class="headerlink" title="调用配置"></a>调用配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">要调用模板中的配置信息，需要使用 liquid 语言。可以使用&#123;%%&#125;逻辑标签和&#123;&#123;&#125;&#125;显示标签。在这两种标签里，都可以使用settings.id，其中id就是配置中定义的属性。比如配置文件里是这样写的：</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"颜色"</span>,</span><br><span class="line">    <span class="string">"settings"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"color"</span>,</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"color_background"</span>,</span><br><span class="line">        <span class="string">"label"</span>: <span class="string">"背景颜色"</span>,</span><br><span class="line">        <span class="string">"default"</span>: <span class="string">"#e5e5e5"</span>,</span><br><span class="line">        <span class="string">"info"</span> : <span class="string">"这个将调整背景颜色"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"color"</span>,</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"color_body_text"</span>,</span><br><span class="line">        <span class="string">"label"</span>: <span class="string">"内容文字颜色"</span>,</span><br><span class="line">        <span class="string">"default"</span>: <span class="string">"#2980b9"</span>,</span><br><span class="line">        <span class="string">"info"</span> : <span class="string">"这个将调整内容文字颜色"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>你可以这样调用背景颜色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; settings.color_background &#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="常规配置类型"><a href="#常规配置类型" class="headerlink" title="常规配置类型"></a>常规配置类型</h4><p>常规配置类型包括：text, textarea, image, radio, select, checkbox。每种类型都允许用户选择来修改模板。这些配置用一组liquid标签来调用。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;  &#x2F;&#x2F;将会把信息显示在页面上</span><br><span class="line">&#123;&#123; settings.your_id &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;%%&#125;可以把配置信息用于逻辑处理上。</span><br><span class="line"></span><br><span class="line">    &#123;% if settings.product_order &#x3D;&#x3D; true %&#125;</span><br><span class="line">      &lt;p&gt;可以下单!&lt;&#x2F;p&gt;</span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">      &lt;p&gt;不能下单 :(&lt;&#x2F;p&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="特殊设置类型"><a href="#特殊设置类型" class="headerlink" title="特殊设置类型"></a>特殊设置类型</h2><p>特殊设置类型包括：<code>color</code>, <code>font</code>, <code>collection</code>, <code>product</code>, <code>blog</code>, <code>page</code>, <code>link_list</code>,  <code>snippet。要调用他们，比常规配置稍微复杂一些。</code></p><h3 id="Color和Font"><a href="#Color和Font" class="headerlink" title="Color和Font"></a><code>Color和Font</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">color和font和上面的调用方式相同，如果你在页面上直接调用，那么它将在页面上显示16进制，然而对于我们来说并没有什么卵用，我们需要在样式表中调用这个才有意义，比如将我们的sass文件保存成application.scss.liquid，就可以使用liquid语法来调用它。</span><br><span class="line">body&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    background-color: #&#123;&#39;&#123;&#123; settings.color_background &#125;&#125;&#39;&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：这里用#{‘’}包裹。</strong></p><p>同样，字体也可以用这种方式调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  font-family: #&#123;&#39;&#123;&#123; settings.header_font &#125;&#125;&#39;&#125;;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a>Collections</h2><p>collections的调用方式会更复杂一些，首先要注意的是，当你将设置的类型为Collections是，选择面板中将显示用户的collections下拉列表，其中包括已经在商店中定义的所有Collections。这意味着必须至少已经定义了2个集合。其次，需要知道shopify都有哪些特殊配置的标签，这里有个表 <a class="link"   href="http://cheat.markdunkley.com/，可以方便查看。"  target="_blank" rel="noopener">http://cheat.markdunkley.com/，可以方便查看。<i class="fas fa-external-link-alt"></i></a></p><p>比如，我们在这里找到了collection.liquid部分，上面有用什么标签全局访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collections[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure><p>这里，the-handle是集合的名称，或者说是集合的slug。在settings_schema.json配置文件中，id的名称将定于这个属性。比如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="string">"name"</span>: <span class="string">"Collection"</span>,</span><br><span class="line">     <span class="string">"settings"</span> : [</span><br><span class="line">     &#123;</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"collection"</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="string">"feature_collection"</span>,</span><br><span class="line">     <span class="string">"label"</span>: <span class="string">"Feature collection"</span></span><br><span class="line">     &#125;</span><br><span class="line">   ]</span><br><span class="line"> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>那么就这样调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; collections[settings.feature_collection] &#125;&#125;</span><br></pre></td></tr></table></figure><p>但是，上面的代码只会显示为CollectionDrop。 为了获得有意义的东西，需要选择集合的属性（可在<a class="link"   href="http://cheat.markdunkley.com/上获得），例如标题或产品。"  target="_blank" rel="noopener">http://cheat.markdunkley.com/上获得），例如标题或产品。<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; collections[settings.feature_collection].title &#125;&#125;</span><br></pre></td></tr></table></figure><p>您可能还想访问该集合中每个产品的信息。 这可以通过引用集合上的products属性然后循环遍历这些来轻松实现。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for product in collections[settings.feature_collection].products %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; product.title &#125;&#125; | &#123;&#123; product.price &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> &#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>通过liquid循环语句，可以把集合中的每个产品遍历出来，并显示产品的标题和价格。</p><h2 id="Products"><a href="#Products" class="headerlink" title="Products"></a>Products</h2><p>产品和集合的使用方式类似，查一下表，看看如何调用这个products。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">all_products[&#39;the-handle&#39;].variable</span><br></pre></td></tr></table></figure><p>注意这里是all_products，而不是products。 所以，这样调用产品的标题和价格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; all_products[settings.feature_product].title &#125;&#125; | &#123;&#123; all_products[settings.feature_product].price &#125;&#125;</span><br></pre></td></tr></table></figure><p>如果要调用产品的头图，这样来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;&#123;&#123; all_products[settings.feature_product].featured_image | img_url: &#39;small&#39; &#125;&#125;&quot; alt&#x3D;&quot;&#123;&#123; a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>shopify/shopify模板开发学习-自定义配置文件</title>
      <link href="2020/12/12/shopify/shopify%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>2020/12/12/shopify/shopify%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>在创建主题时，可以为客户预留一些自定义的配置，是Shopify主题模板常用的做法。Shopify使用settings_schema.json文件提供了这个自定义配置的方式。</p><p>在Shopify主题的config目录中，在此文件中定义一些对象属性，就可以实现自定义的配置选项。当你选择在线商店 》 模板 》自定义按钮，就可以看到控制面板中这些选项。</p><p>配置文件的文件格式<br>settings_schema.json文件，本身是个JSON文件，那么他需要遵守JSON文件规范，这里所有的数据都用[]括起来。在此范围内，你可以将相关选项组合在一起。每个分组都有一个名称，然后是定义这个组的配置。比如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"name"</span> : <span class="string">"颜色"</span>,</span><br><span class="line">        <span class="string">"settings"</span> : [ ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure><p>然后，每个选项都是设置数组中的一个对象。 像这样的东西：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"Shopify119"</span>,</span><br><span class="line">    <span class="string">"theme_name"</span>: <span class="string">"Shopify119 theme"</span>,</span><br><span class="line">    <span class="string">"theme_version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">    <span class="string">"theme_author"</span>: <span class="string">"Leo"</span>,</span><br><span class="line">    <span class="string">"theme_documentation_url"</span>: <span class="string">"https://shopify119.blog.csdn.net"</span>,</span><br><span class="line">    <span class="string">"theme_support_url"</span>: <span class="string">"https://shopify119.blog.csdn.net"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"颜色"</span>,</span><br><span class="line">    <span class="string">"settings"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"color"</span>,</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"color_background"</span>,</span><br><span class="line">        <span class="string">"label"</span>: <span class="string">"背景颜色"</span>,</span><br><span class="line">        <span class="string">"default"</span>: <span class="string">"#e5e5e5"</span>,</span><br><span class="line">        <span class="string">"info"</span> : <span class="string">"这个将调整背景颜色"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"color"</span>,</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"color_body_text"</span>,</span><br><span class="line">        <span class="string">"label"</span>: <span class="string">"内容文字颜色"</span>,</span><br><span class="line">        <span class="string">"default"</span>: <span class="string">"#2980b9"</span>,</span><br><span class="line">        <span class="string">"info"</span> : <span class="string">"这个将调整内容文字颜色"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"Logo"</span>,</span><br><span class="line">    <span class="string">"settings"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"logo.png"</span>,</span><br><span class="line">        <span class="string">"label"</span>: <span class="string">"Logo"</span>,</span><br><span class="line">        <span class="string">"info"</span>: <span class="string">"这里可以改变店铺的Logo"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728293031323334353637383940</span></span><br></pre></td></tr></table></figure><p>上面的例子中，在自定义设置的侧栏上，你可以看到标签“颜色”，当你单击他时，可以选择设置背景颜色和内容文字颜色；选择Logo可以更改店铺的Logo。<br><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/20200305144403759.gif" alt="在这里插入图片描述"><br>配置文件的属性<br>每个设置都有5个属性：type、id、label、default、info</p><p>类型 是否必填 描述<br>type 必填 定义选项所需的输入类型<br>id 必填 id必须唯一，这将在主题中引用它<br>label 必填 向用户描述了该选项的用途，可以用中文<br>placeholder 可选 输入的占位符文本的值。这仅适用于基于文本的设置类型。<br>default 可选 该选项的默认值<br>info 可选 为用户提供该选项的详细使用信息<br>常规设置类型<br>下表描述了允许的常规输入类型，每个值在type属性中设置。</p><p>值 说明<br>text 允许用户输入单行文本字段<br>textarea 允许用户输入多行文本字段<br>image 允许用户上传图片<br>radio 允许用户使用单选按钮<br>select 允许用户从下拉列表中进行选择<br>checkbox 允许用户选中一个框，返回true或false值<br>image type<br>需要注意的是，用这种方式上传的图片将保存在模板的assets文件夹中。该文件使用id中定义的名称和格式进行保存。所以，即使上传的是.jpg文件，但是id定义的是logo.png，图片也将会保存为.png文件。</p><p>radio和select type<br>由于radio和select有多个值可提供选择，因此还需要设置额外的属性。比如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"type"</span>:      <span class="string">"radio"</span>,</span><br><span class="line">  <span class="string">"id"</span>:        <span class="string">"id"</span>,</span><br><span class="line">  <span class="string">"label"</span>:     <span class="string">"Text"</span>,</span><br><span class="line">  <span class="string">"options"</span>: [</span><br><span class="line">    &#123; <span class="string">"value"</span>: <span class="string">"one"</span>, <span class="string">"label"</span>: <span class="string">"Radio One"</span> &#125;,</span><br><span class="line">    &#123; <span class="string">"value"</span>: <span class="string">"two"</span>, <span class="string">"label"</span>: <span class="string">"Radio Two"</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"default"</span>:   <span class="string">"one"</span>,</span><br><span class="line">  <span class="string">"info"</span>:      <span class="string">"Text"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1234567891011</span></span><br></pre></td></tr></table></figure><p>特殊设置类型<br>特殊设置类型的定义访问和常规设置类型相似，不同之处在于这些设置，将为用户提供内置或特定的选择信息。比如：产品类型是下拉列表，但只允许用户从已经在商店中定义的产品类型中进行选择。</p><p>值 说明<br>color 允许用户使用颜色选择器窗口小部件选择颜色<br>font 允许用户从可用字体列表中进行选择<br>collection 允许用户选择商店中可用的产品系列<br>product 允许用户选择商店中可用的产品<br>blog 允许用户从商店中设置的博客列表中进行选择<br>link_list 允许用户从可用菜单中进行选择<br>page 允许用户选择商店中定义的特定页面<br>snippets 允许用户选择主题中可用的特定代码段<br>Blog Type<br>Shopify内置了博客，你可以添加博客文章。还可以把这些博客文章添加到不同的博客中。blog type设置下拉列表允许你选择要用于改设置的博客。</p><p>Snippet Type<br>代码片段在模板中的snippets目录里面定义。</p><p>信息设置</p><p>Shopify还允许将创建主题的作者信息放入侧边栏中，它们只有3个属性：type, content, info</p><p>类型 是否必填 描述<br>type 必填 定义选项所需的输入类型。 对于侧边栏设置，这只能是标题或段落<br>content 必填 文本内容<br>info 可选 向用户提供有关该选项的其他信息。<br>在模板中调用配置信息<br>现在已经可以创建设置信息了，但是如何在实际的模板中调用并使用它们？这将是下篇文章的内容。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>shopify/如何创建一个Shopify模版本地开发环境</title>
      <link href="2020/12/03/shopify/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAShopify%E6%A8%A1%E7%89%88%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>2020/12/03/shopify/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAShopify%E6%A8%A1%E7%89%88%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="安装主题套件"><a href="#安装主题套件" class="headerlink" title="安装主题套件"></a>安装主题套件</h3><p>首先，转到<a class="link"   href="https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9zaG9waWZ5LmdpdGh1Yi5pby90aGVtZWtpdC8%3D" >themekit<i class="fas fa-external-link-alt"></i></a>下载主题套件。</p><h3 id="macOS安装"><a href="#macOS安装" class="headerlink" title="macOS安装"></a>macOS安装</h3><p>使用<a class="link"   href="https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cDovL2JyZXcuc2gv" >homebrew<i class="fas fa-external-link-alt"></i></a>安装themekiit.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap shopify&#x2F;shopify</span><br><span class="line">brew install themekit</span><br></pre></td></tr></table></figure><h3 id="Windows-Chocolatey安装"><a href="#Windows-Chocolatey安装" class="headerlink" title="Windows Chocolatey安装"></a>Windows Chocolatey安装</h3><p>首先安装<a class="link"   href="https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9jaG9jb2xhdGV5Lm9yZy8%3D" >Chocolatey<i class="fas fa-external-link-alt"></i></a>，然后通过以下命令安装themekit。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install themekit</span><br></pre></td></tr></table></figure><h3 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h3><p>如果是Linux系统，则可以使用以下脚本安装themekit。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https:&#x2F;&#x2F;shopify.github.io&#x2F;themekit&#x2F;scripts&#x2F;install.py | sudo python</span><br></pre></td></tr></table></figure><p>安装完毕之后运行<strong>theme</strong>，如果显示下图信息则安装成功。</p><p><img src="https://pic3.zhimg.com/80/v2-8cce0690f64d6c6a02ef0c91aedf59a6_720w.jpg" alt="img"></p><h3 id="链接到商店"><a href="#链接到商店" class="headerlink" title="链接到商店"></a>链接到商店</h3><p>要想连接到商店拥有主题的读写权限，首先得建立私人应用将API秘钥添加到我们的配置中。</p><p>请登录Shopify后台，然后创建一个私人应用程序。</p><blockquote><p>Shopify管理员 &gt; Apps &gt; 单击Manage private apps &gt; 单击Create a new private app创建应用</p></blockquote><p>然后填写信息，并将<strong>Theme templates and theme assets</strong>权限设置为读写访问权限并保存，页面刷新之后复制密码，后面步骤用得到。</p><p><img src="https://pic4.zhimg.com/v2-c5672b6847b0eb3768ab31ae2772ecc7_b.jpg" alt="img"></p><h3 id="下载需要修改的模板"><a href="#下载需要修改的模板" class="headerlink" title="下载需要修改的模板"></a>下载需要修改的模板</h3><p>接下来，我们需要将主题下载到本地环境中。要下载模板，首先需要知道模板的ID。获取ID的最简单方法是使用get命令，如下所示：</p><ol><li>theme get –list -p=上一步复制的密码 -s=<a class="link"   href="https://link.zhihu.com/?target=http%3A//you-store.myshopify.com" >http://you-store.myshopify.com<i class="fas fa-external-link-alt"></i></a></li></ol><p><img src="https://pic1.zhimg.com/80/v2-4db25c89310144da8a0178b52516dfe8_720w.png" alt="img"></p><p>然后，记下模板ID，运行以下命令从shopify下载主题：</p><ol><li>theme get -p=上一步复制的密码 -s=<a class="link"   href="https://link.zhihu.com/?target=http%3A//you-store.myshopify.com" >http://you-store.myshopify.com<i class="fas fa-external-link-alt"></i></a> -t=your-theme-id</li></ol><p><img src="https://pic4.zhimg.com/80/v2-f35f2d0497884ca2054caa92d7f3b0b3_720w.png" alt="img"></p><h3 id="编辑模板"><a href="#编辑模板" class="headerlink" title="编辑模板"></a>编辑模板</h3><p>我们可以编辑这些本地文件，然后运行<strong>theme watch</strong>。这将监视模板文件中的更改，当检测到文件被修改时，Theme Kit将自动将新版本上载到Shopify，因此您可以立即查看编辑后的模板样式。</p><p><img src="https://pic1.zhimg.com/80/v2-d05bbd9df19f9ebab7b5f48fd157a790_720w.jpg" alt="img"></p><p>当我们对theme.scss.liquid文件进行了一些更改，您将在终端上看到此输出</p><p><img src="https://pic3.zhimg.com/80/v2-503c4fedd4f708bb2c7472247cc4af1e_720w.jpg" alt="img"></p><blockquote><p>要上传特定文件，请运行theme upload <file>。要删除特定文件，请运行theme remove <file>。您可以通过运行查找所有命令的列表theme help。您可以通过运行获取有关命令的更多信息theme help <command></p></blockquote><h3 id="实时预览"><a href="#实时预览" class="headerlink" title="实时预览"></a>实时预览</h3><p>没有人喜欢编辑一次然后手动刷新一次页面。下面我们将使用Prepros来达到实时预览的功能。</p><p>首先下载<a class="link"   href="https://link.zhihu.com/?target=https%3A//www.shopifyfans.com/wp-content/themes/begin/go.php%3Furl%3DaHR0cHM6Ly9wcmVwcm9zLmlvLw%3D%3D" >Prepros<i class="fas fa-external-link-alt"></i></a>并安装</p><p><img src="https://pic3.zhimg.com/80/v2-81a904f9da10308140a2387dcd37b74a_720w.jpg" alt="img"></p><h3 id="将主题添加为项目"><a href="#将主题添加为项目" class="headerlink" title="将主题添加为项目"></a>将主题添加为项目</h3><p><img src="https://pic1.zhimg.com/v2-c100f31eacdfb0f033c87de8dc6e9c34_b.jpg" alt="img"></p><p>只需将整个目录拖到Prepros中，即可将主题作为项目添加到Prepros。</p><h3 id="监视-liquid文件"><a href="#监视-liquid文件" class="headerlink" title="监视.liquid文件"></a>监视.liquid文件</h3><p>应将.liquid文件添加到Prepros将要监视的文件类型列表中。默认情况下是不会监视它们的，因为Prepros不会编译Liquid。</p><p>要将.liquid文件添加到监视列表，请右键任意.liquid文件，然后选择“ <strong>Watch .liquid files</strong>”。</p><p><img src="https://pic2.zhimg.com/80/v2-feb48e382f61af3f0709e211727c5cd9_720w.jpg" alt="img"></p><h3 id="将实时预览链接到店铺"><a href="#将实时预览链接到店铺" class="headerlink" title="将实时预览链接到店铺"></a>将实时预览链接到店铺</h3><p>下一步是设置实时预览的URL。也就是将Prepros与Shopify商店链接起来并实现实时重载的功能。</p><p>具体设置如下图：</p><p><img src="https://pic1.zhimg.com/v2-c69eef525d534cd9784f643dbf3017a4_b.jpg" alt="img"></p><h3 id="设置重新加载的延迟"><a href="#设置重新加载的延迟" class="headerlink" title="设置重新加载的延迟"></a>设置重新加载的延迟</h3><p>最后，您需要在Prepros中设置延迟。延迟的原因是让Theme Kit有时间观察到更改，并将更改与Shopify的服务器同步。</p><p>具体设置如下图：</p><p><img src="https://pic2.zhimg.com/v2-8912efba9332fff5ecc0251c1e1f7e1d_b.jpg" alt="img"></p><h3 id="进行修改并实时预览"><a href="#进行修改并实时预览" class="headerlink" title="进行修改并实时预览"></a>进行修改并实时预览</h3><p>现在，您已经设置了实时预览，按<strong>Ctrl+L</strong>在浏览器中打开就能看到。    </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>study/X3 photo gallery 授权破解</title>
      <link href="2020/11/29/study/X3%20photo%20gallery%20%E6%8E%88%E6%9D%83%E7%A0%B4%E8%A7%A3/"/>
      <url>2020/11/29/study/X3%20photo%20gallery%20%E6%8E%88%E6%9D%83%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="X3-photo-gallery-另类破解"><a href="#X3-photo-gallery-另类破解" class="headerlink" title="X3 photo gallery 另类破解"></a>X3 photo gallery 另类破解</h2><p>这个软件用了很久，之前也用过破解版，但升级后接失效了，今天闲来无事，试着破解，搜索关键字，查看源码，自以为很简单，直接注销代码，看了下，底部链接是消失了，但是后来，点击上面的目录时才发现，会跳出授权经过….</p><p>后来又试了另外的方法，终于成功了。就是把授权的文字直接把字体颜色改成背景色。具体方法如下：</p><p>1.zai 源文件 templates 下76文件夹（因为通过搜索发现授权这行代码的class”x3-footer-link”在这个文件）</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/image-20201129184535600.png" alt="image-20201129184535600"></p><p>2.随便找一行代码，我是在131行 加入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;style&gt;.footer .x3-footer-link,a &#123;color:#e2d6d2&#125;&lt;&#x2F;style&gt;&quot;;</span><br></pre></td></tr></table></figure><p> 完成。</p><p>方法很笨，但效果达到 </p>]]></content>
      
      
      
        <tags>
            
            <tag> 采坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shopify/为什么你的Shopify店铺没有成功</title>
      <link href="2020/11/07/shopify/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84Shopify%E5%BA%97%E9%93%BA%E6%B2%A1%E6%9C%89%E6%88%90%E5%8A%9F/"/>
      <url>2020/11/07/shopify/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84Shopify%E5%BA%97%E9%93%BA%E6%B2%A1%E6%9C%89%E6%88%90%E5%8A%9F/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-b0bea42157dab7e9792d1f6d84fc179b_1440w-20201107192202050.jpg" alt="为什么99%的Shopify店铺会失败？"></p><h1 id="为什么你的Shopify店铺没有成功？"><a href="#为什么你的Shopify店铺没有成功？" class="headerlink" title="为什么你的Shopify店铺没有成功？"></a>为什么你的Shopify店铺没有成功？</h1><p>关于Shopify的各种讨论真是非常热烈！ 现实是99%的Shopify店铺创建者都未能实现一夜暴富的美梦，这与很多Shopify大师所宣传的情况不符。那么如何避免重蹈99%的失败者的覆辙而加入1%的成功者行列？本文将给出建议。</p><h2 id="01-选择有特色的Niche"><a href="#01-选择有特色的Niche" class="headerlink" title="01 选择有特色的Niche"></a>01 选择有特色的Niche</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-bf60af6bbbe46102e923dd9fc7269fd5_720w-20201107192212306.jpg" alt="img"></p><p>首先是Niche，字母N代表的是Niche，无论做Shopify还是任何电商都首先要考虑要选择什么样的细分市场，简言之就是你要选定要售卖的产品。</p><p>社交媒体营销也遵循20%的工作决定80%的成果的原则。99%的人的错误在于跟风，利用各种分析手段得出的Niche结论是一个无数店铺都在售卖的产品。</p><p>举个具体例子来说，像狗项圈。人们或者说大多数人不会从Shopify商店或者Facebook广告购买通用产品，就像你不会从Facebook广告上购买厕纸。</p><p><img src="https://pic4.zhimg.com/80/v2-d18788a2b8b0eba6a8e307d5616b750b_720w.jpg" alt="img"></p><p>你应该做的是在搜索Niche时，利用搜索引擎的自动填充词条功能找灵感。比如在通用产品 dog collar后面加空格a，从以下自动生成的词条中选一个做Niche。</p><p>像dog collar army就不错，你可以用Facebook广告测试一下army风格的狗项圈，包括以一些历史上有名的将军为灵感的狗项圈，都是很不错的Niche。</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-60f108dadef4c32adb60307bb82efaf0_720w-20201107192219911.jpg" alt="img"></p><p>或者dog collar后面加空格b，c，直到你找到满意的Niche，</p><p><img src="https://pic3.zhimg.com/80/v2-28b5710ad388ac0a85fa58e474b5e836_720w.jpg" alt="img"></p><p>再举个例子，像earrings耳饰，不要选择通用产品earrings，而是利用我们上面讲的方法从搜索引擎自动填充的词条中找灵感。</p><p>比如earrings animal搜索出来的动物形状的耳饰就是很好的Niche。设想一下如果Facebook用户中有即将过生日的，她的老公说不定就想买这样一副耳饰送她做生日礼物。</p><p>相反如果选择狗项圈、耳饰这样的通用产品，那么不大可能有人会从Facebook广告购买这些产品。</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-9070e2ed80d13a79872739ba3bf8a6b1_720w-20201107192228232.jpg" alt="img"></p><p>创建你的Shopify店铺前就要想到如何精准定位受众，找到目标顾客群体。因此你的Niche千万不要选一些通用的商品。</p><h2 id="02-Shopify店铺也需要实实在在的经营"><a href="#02-Shopify店铺也需要实实在在的经营" class="headerlink" title="02 Shopify店铺也需要实实在在的经营"></a>02 Shopify店铺也需要实实在在的经营</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-006886476bc43d81fb13505fedc44abf_720w-20201107192249343.jpg" alt="img"></p><p>99%的人有Shopify店铺可以让人一夜暴富的错误想法。这些人认为自己可以在一天或者一周之内实现从对Shopify一无所知到成功创建自己的电商事业。</p><p>而他们所不知道的是，成功的电商企业每天会测试成百上千的产品，改变着店铺的各种设置，总结哪些是成功的产品哪些是不成功的产品；像所有商业活动一样，创建成功的电商企业也需要大量的时间投入，做大量的工作和一定的资金投入。</p><p>不要以为仅仅用Oberlo导入商品到你的Shopify店铺，就可以坐等成功Dropshipping，成为下一个一夜暴富的百万富翁。你需要做大量实实在在的工作，例如创建邮件清单、与你的顾客建立良好的关系、二次定位顾客、向老顾客发送优惠券等等。</p><h2 id="03-失败一次就放弃"><a href="#03-失败一次就放弃" class="headerlink" title="03 失败一次就放弃"></a>03 失败一次就放弃</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-668007be18919dfcf254dc2de8c58e63_720w-20201107192302656.jpg" alt="img"></p><p>很多人在店铺中放了一共不到10个商品，为每个商品创建了广告组，没有一个商品成功销售，然后就放弃了Shopify店铺。</p><p>无论线上线下，决定一个企业家能否成功的关键因素在于其成功的意愿有多强烈。</p><p>很多人可能会花费100刀、200刀或者500刀，创建Shopify店铺，投放Facebook广告，但是都不奏效，于是就放弃了。可能你只需要一个成功的商品。</p><p>而且你不知道电商行业是最具有滚雪球效应的，一旦有了突破你很快会面临商品脱销的窘境。99%的人在成功卖出第一个商品前就放弃了。</p><h2 id="04-工作量黄金分配比例"><a href="#04-工作量黄金分配比例" class="headerlink" title="04 工作量黄金分配比例"></a>04 工作量黄金分配比例</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-7936c7276a03b8222a18228f3ddac454_720w-20201107192313757.jpg" alt="img"></p><p>我们20%的活动决定着我们80%的成果，对于Shopify店铺来说那些是我们工作的重点呢？下面我从Shopify店铺三项主要工作内容为你分析工作量应该如何分配:</p><p>■ 20%的工作量花在创建店铺；（以我自己为例，我对Shopify店铺的创建很熟悉，对Facebook广告的投放也很熟悉，还有丰富的电商销售经验。我通常花一天时间创建一个Shopify店铺。）</p><p>■ 30%的工作量用于选择Niche和商品；</p><p>■ 51%的工作量用于市场营销（我故意强调超过一半的工作量）；</p><h2 id="05-分清主次，把时间花在有产出的事情上"><a href="#05-分清主次，把时间花在有产出的事情上" class="headerlink" title="05 分清主次，把时间花在有产出的事情上"></a>05 分清主次，把时间花在有产出的事情上</h2><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-66a01f8112ce4661dcbd2eb731e13583_720w-20201107192325962.jpg" alt="img"></p><p>在创建Shopify店铺之前，先要确定你的Niche和商品。否则你可能花费了大量的时间和金钱创建了Shopify店铺而没有任何销售。你要把时间花在测试商品和广告定位上，这两项工作关乎店铺盈利，而不要把大量时间花在创建吸引人的Twitter或者Pinterest账号上。</p><p>以上几点就是99%的人失败的原因分析，希望我上面给出的建议能帮助你早日加入1%的成功者行列！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>study/typora使用</title>
      <link href="2020/11/07/study/typora%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/07/study/typora%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Typora介绍"><a href="#Typora介绍" class="headerlink" title="Typora介绍"></a>Typora介绍</h2><p>Typora是一款免费的轻量级Markdown编辑器，它没有<a class="link"   href="https://link.zhihu.com/?target=http%3A//25.io/mou/" >Mou<i class="fas fa-external-link-alt"></i></a>，<a class="link"   href="https://link.zhihu.com/?target=http%3A//pad.haroopress.com/" >Haroopad<i class="fas fa-external-link-alt"></i></a>等Markdown编辑器那么大名鼎鼎，但算是较为小众的一款产品。</p><p>Typora作为一款离线Markdown无疑是非常棒的， 如果作为笔记工具的话，推荐你使用 cmd Markdown，因人而异。</p><p>下载地址：<strong><a class="link"   href="https://link.zhihu.com/?target=https%3A//typora.io/" >Typora<i class="fas fa-external-link-alt"></i></a></strong></p><p>@<a class="link"   href="https://link.zhihu.com/?target=https%3A//my.openwrite.cn/user/article/%E7%9B%AE%E5%BD%95%EF%BC%88Contens%EF%BC%89" >TOC<i class="fas fa-external-link-alt"></i></a></p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>#一阶标题 （快捷键Ctrl+1）</p><p>##二阶标题 （快捷键Ctrl+2）</p><p>###三阶标题 （快捷键Ctrl+3）</p><p>####四阶标题 （快捷键Ctrl+4）</p><p>#####五阶标题 （快捷键Ctrl+5）</p><p>######六阶标题 （快捷键Ctrl+6）</p><h2 id="如何生成目录"><a href="#如何生成目录" class="headerlink" title="如何生成目录"></a>如何生成目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@[TOC]目录</span><br><span class="line"></span><br><span class="line">在文章开始地方输入[toc]，即可在对应位置插入目录</span><br><span class="line">@[TOC]目录</span><br><span class="line"></span><br><span class="line">以下不用写，直接写@[TOC](目录)即可自动获到目录中</span><br><span class="line">#一阶标题 （快捷键Ctrl+1）</span><br><span class="line">##二阶标题 （快捷键Ctrl+2）</span><br><span class="line">###三阶标题 （快捷键Ctrl+3）</span><br><span class="line">####四阶标题 （快捷键Ctrl+4）</span><br><span class="line">#####五阶标题 （快捷键Ctrl+5）</span><br><span class="line">######六阶标题 （快捷键Ctrl+6）</span><br><span class="line">注：凡是文章标题带有#（1-n个）的都会被捕获到目录中。</span><br></pre></td></tr></table></figure><h2 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h2><p>这是要居中的文本内容\</p><p><strong>注</strong>：Typora目前并不会直接预览居中效果——相应的效果只有输出文本的时候才会显现。</p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线使用格式 下划线的内容&lt;\u&gt; 或者快捷键Ctrl+U</p><p>下划线在Typora显示形式是 这就是我亲测的下划线</p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>删除线使用格式：~~ 删除线的内容</p><h2 id="字体加粗"><a href="#字体加粗" class="headerlink" title="字体加粗"></a>字体加粗</h2><p>前面某个字段使用两个<em>，\</em>加粗字体* 或者快捷键Ctrl+B</p><h2 id="字体倾斜"><a href="#字体倾斜" class="headerlink" title="字体倾斜"></a>字体倾斜</h2><p>使用一个”星“，<em>字体倾斜了</em> 或者快捷键Ctrl+I</p><h2 id="图片的插入"><a href="#图片的插入" class="headerlink" title="图片的插入"></a>图片的插入</h2><p>直接拖你想要图片进来即可</p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><ul><li>使用快捷键Ctrl+K</li><li>使用2个反斜杠””，<br>[百度][<a class="link"   href="https://link.zhihu.com/?target=https%3A//www.baidu.com/" >https://www.baidu.com/<i class="fas fa-external-link-alt"></i></a>]</li></ul><p><a class="link"   href="https://link.zhihu.com/?target=https%3A//www.baidu.com/" >百度一下<i class="fas fa-external-link-alt"></i></a></p><p><strong>注</strong>：按住Ctrl键+点击上面链接就可以直接访问该链接</p><h2 id="代码区域"><a href="#代码区域" class="headerlink" title="代码区域"></a>代码区域</h2><p>三个反引号个（<code>`</code>）+编程语言即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;设置线程名字</span><br><span class="line">thread.setName(&quot;线程1&quot;); </span><br><span class="line">thread1.setName(&quot;线程2&quot;);</span><br></pre></td></tr></table></figure><h2 id="表格的使用"><a href="#表格的使用" class="headerlink" title="表格的使用"></a>表格的使用</h2><p>第一种：快捷键<strong>Ctrl+T</strong></p><p>第二种：|ID|name|age|回车即可</p><p>学号姓名年龄20200506MarkerHunJava35</p><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><p>- [ ] 文字 （<strong>注</strong>：注意用空格隔开）</p><ul><li>[x] Java</li><li>[x] 大数据</li><li>[ ] 人工智能</li><li>[ ] 机器学习</li></ul><h2 id="有序无序列表"><a href="#有序无序列表" class="headerlink" title="有序无序列表"></a>有序无序列表</h2><p><strong>创建无序列</strong> :+ 、- 、* （后面加空格）</p><p><strong>多行无序列表</strong>:</p><ul><li><p>Java</p></li><li><ul><li><p>容器</p></li><li><ul><li>HashMap</li></ul></li></ul></li></ul><p><strong>有序列表</strong>:(1.)空格</p><ol><li>Java</li><li>Biodata</li></ol><p><strong>多行有序列表：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. Java</span><br><span class="line">2. Biodata</span><br><span class="line">    1. Java</span><br><span class="line">    2. Biodata</span><br></pre></td></tr></table></figure><h2 id="水平分割线"><a href="#水平分割线" class="headerlink" title="水平分割线"></a>水平分割线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***或者- - -</span><br></pre></td></tr></table></figure><h2 id="引用的使用格式"><a href="#引用的使用格式" class="headerlink" title="引用的使用格式"></a>引用的使用格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;+空格</span><br></pre></td></tr></table></figure><h2 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:单词</span><br></pre></td></tr></table></figure><h2 id="数学表达式"><a href="#数学表达式" class="headerlink" title="数学表达式"></a>数学表达式</h2><p>Typora支持加入用LaTeX写成的数学公式，并且在软件界面下用MathJax直接渲染，数学公式分为两种参考<strong><a class="link"   href="https://link.zhihu.com/?target=https%3A//mathpix.com/" >Mathpix Snip<i class="fas fa-external-link-alt"></i></a></strong></p><ul><li>行内公式 <code>$ ... $</code></li><li>行间公式 <code>$$ ... $$</code>,（或者$$+回车）<br><strong>注</strong>：行间公式形式是将数学式插在文本行之间（多行公式、公式组和微积分方程等复杂的数学式都是采用行间） <strong>注</strong>：行内公式形式是将数学式插入文本行之内（适合编写简 短的数学式） <strong>如</strong>：将公式插入到本行内，符号：<code>$公式内容$</code>，$xyz$或“$$”+回车即可</li></ul><p>#### 1、上标、下标、求和、括号、分式、根号</p><p><strong>语法</strong>：行内公式输入在两个<code>$$</code>之间，行外公公式<code>$$内容公式$$</code>或<code>$$</code>+回车即可输入。</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-fc1eb7e3e05ef1b0bbb7a47975db5de2_720w-20201107100422676.jpg" alt="img"></p><h3 id="2、基本运算符"><a href="#2、基本运算符" class="headerlink" title="2、基本运算符"></a>2、基本运算符</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-c3703593a2e990069e3834247b437206_720w-20201107100449798.jpg" alt="img"></p><h3 id="3、三角函数、指数、对数"><a href="#3、三角函数、指数、对数" class="headerlink" title="3、三角函数、指数、对数"></a>3、三角函数、指数、对数</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f525471ca6da7be4fe0cfb25717b7411_720w-20201107100303444.jpg" alt="img"></p><h3 id="4、高等数学相关运算符"><a href="#4、高等数学相关运算符" class="headerlink" title="4、高等数学相关运算符"></a>4、高等数学相关运算符</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-a3e3be0b70dc25c0d09a22544136174f_720w-20201107100312691.jpg" alt="img"></p><h3 id="6、希腊字母"><a href="#6、希腊字母" class="headerlink" title="6、希腊字母"></a>6、希腊字母</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-f8cf4f5d21042f66e5ecc0c4f1c415cb_720w-20201107100321024.jpg" alt="img"></p><h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;mermaid</span><br><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line">        section 现有任务</span><br><span class="line">        已完成               :done,    des1, 2019-09-02,220-01-20</span><br><span class="line">        进行中               :active,  des2, 2020-05-06, 3d</span><br><span class="line">        计划一               :         des3, after des2, 5d</span><br><span class="line">        计划二               :         des4, after des3, 5d</span><br><span class="line">　&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg" alt="img"></p><h3 id="Mermaid流程图"><a href="#Mermaid流程图" class="headerlink" title="Mermaid流程图"></a>Mermaid流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;mermaid</span><br><span class="line">graph LR</span><br><span class="line">graph LR</span><br><span class="line">A[老鹰] -- 吃 --&gt; B((小鸡))</span><br><span class="line">A -- 吃 --&gt; C(蛇)</span><br><span class="line">B -- 吃--&gt; D&#123;虫&#125;</span><br><span class="line">C --&gt; D</span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-10220c614d3474fbea35b656187271e9_720w-20201107100342942.jpg" alt="img"></p><p><a class="link"   href="https://link.zhihu.com/?target=https%3A//mermaid-js.github.io/mermaid/%23/" >更多参考文档<i class="fas fa-external-link-alt"></i></a></p><h3 id="Flowchart流程图"><a href="#Flowchart流程图" class="headerlink" title="Flowchart流程图"></a>Flowchart流程图</h3><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/v2-01b334770f043d6ae251f12e7fc5947b_720w-20201107100331425.jpg" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue/解决跨域</title>
      <link href="2020/11/06/Vue/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/"/>
      <url>2020/11/06/Vue/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="生产环境和开发环境一次解决跨域问题"><a href="#生产环境和开发环境一次解决跨域问题" class="headerlink" title="生产环境和开发环境一次解决跨域问题"></a>生产环境和开发环境一次解决跨域问题</h3><p>在config 文件夹里面新建一个 api.config.js 配置文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const isPro = Object.is(process.env.NODE_ENV, <span class="string">'production'</span>)</span><br><span class="line"></span><br><span class="line">const baseUrl=isPro ? <span class="string">'https://api.iqimeng.com'</span> : <span class="string">'api/'</span></span><br><span class="line">export default baseUrl;</span><br></pre></td></tr></table></figure><h4 id="然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀"><a href="#然后在main-js-里面引入-这样可以保证动态的匹配生产和开发的定义前缀" class="headerlink" title="然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀"></a>然后在main.js 里面引入,这样可以保证动态的匹配生产和开发的定义前缀</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import apiConfig from <span class="string">'../config/api.config'</span></span><br><span class="line"></span><br><span class="line">import Axios from <span class="string">'axios'</span></span><br><span class="line">import VueAxios from <span class="string">'vue-axios'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios, Axios)</span><br><span class="line">Axios.defaults.baseURL = apiConfig</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 采坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>值得纪念的一天</title>
      <link href="2020/11/06/%E5%80%BC%E5%BE%97%E7%BA%AA%E5%BF%B5%E7%9A%84%E4%B8%80%E5%A4%A9/"/>
      <url>2020/11/06/%E5%80%BC%E5%BE%97%E7%BA%AA%E5%BF%B5%E7%9A%84%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>原来信心满满，憧憬各种各样的结果，也做好的面对挑战和无尽的压力，但事实却事与愿违，向前一步可能会很难，但也不想这样就看到尽头，命运真的会给我们开玩笑，好吧，既然这样那我就在这条路上一往无前</p><p>加油！！</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/ice-from-diamond-beach-iceland-picjumbo-com.jpg" alt="ice-from-diamond-beach-iceland-picjumbo-com"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue/vue中使用H5的audio</title>
      <link href="2020/11/06/Vue/vue%E4%B8%AD%E4%BD%BF%E7%94%A8H5%E7%9A%84audio/"/>
      <url>2020/11/06/Vue/vue%E4%B8%AD%E4%BD%BF%E7%94%A8H5%E7%9A%84audio/</url>
      
        <content type="html"><![CDATA[<h2 id="vue中使用H5的audio"><a href="#vue中使用H5的audio" class="headerlink" title="vue中使用H5的audio"></a>vue中使用H5的audio</h2><p>H5audio标签有许多事件</p><p><img src="https://raw.githubusercontent.com/markruan/cloudimg/master/img/20190127152315247-20201106152816056-20201106153001803.png" alt=""></p><p> 在应用到vue中后的使用如下：</p><p>比如在使用onplay时，要去掉on，用@play派发时间，在methods中定义方法执行体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;audio src&#x3D;&quot;..&#x2F;..&#x2F;static&#x2F;1.mp3&quot; @play&#x3D;&quot;ready&quot; @pause&#x3D;&quot;pause&quot; controls&gt;&lt;&#x2F;audio&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &#39;musci&#39;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            ready()&#123;</span><br><span class="line">                console.log(&quot;play click&quot;);</span><br><span class="line">            &#125;,</span><br><span class="line">            pause()&#123;</span><br><span class="line">                console.log(&quot;pause click&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
